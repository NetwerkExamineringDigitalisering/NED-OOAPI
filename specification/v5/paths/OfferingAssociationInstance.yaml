put:
  summary: PUT /offerings/{offeringId}/associations/{associationId}
  operationId: replaceAssociationByOfferingIdAndId
  description: |
    PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. 
  security:
    - oAuthFlows:  
      - test-admin-flow
  tags:
    - associations
  parameters:
    - name: offeringId
      in: path
      description: Offering ID
      required: true
      schema:
        type: string
        format: uuid
    - name: associationId
      in: path
      description: Association ID
      required: true
      schema:
        type: string
        format: uuid

  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/ComponentOfferingAssociationOnlyPersonExpanded.yaml'
        examples:
          Add student to created offering (zitting) (flow 2.2.B and 2.3):
            value:
              #associationId is padparameter
              #volgorde conform ooapi-v5
              #associationType op volgende regel ontbreekt in endpoint-definitie
              associationType: componentOfferingAssociation
              role: student
              state: associated
              consumers:
              - consumerKey: MBO-toetsafname
                startUpURL: https://myComponent.nl?test
                extraTimeInMin: 30
                personalNeeds: [extraTime,spoken,spell-checker-on-screen]
              person:
                personId: "111-2222-33-4444-222"
                primaryCode:
                  codeType: studentNumber
                  code: "1234567"
                givenName: Maartje
                surnamePrefix: van
                surname: Damme
                displayName: "Maartje van Damme"
                activeEnrollment: true
                affiliations: [student]
                mail: vandamme.mcw@student.roc.nl
                languageOfChoice: [nl-NL]
                otherCodes: [
                  {
                    codeType: "accountId",
                    code: "s1234567@student.roc.nl"
                    # surfconext identifier
                  },
                  {
                    codeType: "eckid",
                    code: "https://roc.nl/8078d3...28bc85"
                    # eckid cross chain
                  }
                ]
              #id van offering op volgende regel is redendant want ook als padparameter
              offering: "123e4567-e89b-12d3-a456-134564174000"

          Change student enrollment to offering (zitting) (flow 2.x):
            value:
              #associationId is padparameter
              #volgorde conform ooapi-v5
              #associationType op volgende regel ontbreekt in endpoint-definitie
              associationType: componentOfferingAssociation
              role: student
              state: associated
              consumers:
              - consumerKey: MBO-toetsafname
                startUpURL: https://myComponent.nl?test
                extraTimeInMin: 30
                personalNeeds: [extraTime,spoken,spell-checker-on-screen]
              person: "111-2222-33-4444-222"
              #id van offering op volgende regel is redendant want ook als padparameter
              offering: "123e4567-e89b-12d3-a456-134564174000"    


  responses:
    '200':
      description: OK
    '201':
      description: Created
              
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '404':
      $ref: '../schemas/ErrorNotFound.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'


