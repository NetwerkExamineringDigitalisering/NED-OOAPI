openapi: 3.0.3
info:
  version: 5.0.0
  title: Open Education API
  description: "OpenAPI (fka Swagger) specification for the Open Education API.\n<br/>\nNOTE:This is a subset of the OOAPI that is used in the \"MBO-Toetsafname\" project (sponsored by mbo-digitaal in the netherlands). This porject uses the \"NL-TEST-ADMIN\" consumer \n<br/>\n<figure>\n\t<a target=\"_blank\" href=\"OOAPIv5_model.png\">\n  <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">\n  </a>\n  <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption>\n</figure>\n\nThe model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.\n\nThe original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>\n\nThe program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.\n\nInformation about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>\n\nInformation on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>\n"
  x-logo:
    url: ../logo.png
servers:
  - url: http://demo01.eduapi.nl/v5
    description: SURF demo implementation
tags:
  - name: associations
    description: |
      The associations API provides information about the association between an offering and a person (e.g. students, lecturers, etc).
      Associations can be posted between institutions This requires information details on the offering and the persons.
      To allow for this information a complete person object and offering object can be part of the API.
      The structure is explained in the following model:
      <table>
        <tr>
         <td></td>
         <td colspan=3 align=center>offering</td>
        </tr>
        <tr>
         <td rowspan=3>student</td>
         <td></td>
         <!-- <td>internal</td>
         -->
         <td>external</td>
        </tr>
        <tr>
         <td>internal</td>
         <!-- <td>POST <a href="#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post">/offerings/{offeringId}/associations/me</a> local enrollment based on selected offering
          This call will allow for a local student using his .wellknown credentials to enroll for the offering identified by the offeringId
          <br>Alternatively the association can also be created through POST <a href="#tag/associations/paths/~1associations~1me/post">/associations/me</a>
         </td>
         -->
         <td>POST <a href="#tag/associations/paths/~1associations~1external~1me/post">/associations/external/me</a> gets student details from .wellknown at home institution. It passes offering details (provided by external institution) to the home institution so the home institution can create a placeholder for the offering and its results.
         </td>
        </tr>
        <tr>
         <td>external</td>
          <!--
          <td>
          This method is not yet implemented it requires full student details and offering details. This would mean the
          OOAPI message would contain more than one resource in the message. At the moment the student mobility project is looking into
          a sollution.
          <br> Alternatively it could be achieved through using two calls:
          <ul>
           <li>create student with POST <a href="#tag/persons/paths/~1persons~1{personId}/post">/persons</a></li>
           <li><a href="#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post">/offerings/{offeringId}/associations/me</a></li>
          </ul>
          for the enrollment
         </td>
          -->
         <td>no support needed</td>
        </tr>
      </table>
      Direct update of current information: <a href="#tag/associations/paths/~1associations~1{associationId}/patch"> PATCH /associations/{associationId}</a>
      This call is currently limited to passing results and a remote state. For future use other association resource information could be passed.
      More information on the support for student mobility can be found
      <a href="https://swimlanes.io/d/s5mfpj7Si">here</a>
  - name: components
    description: The components API provides information about components being part of parent courses.
  - name: groups
    description: The groups API provides information about groups that are related to organizations, persons and offerings. Groups of students that are related to an offering are typically used for rostering. The rostering application assigns students based on these groups. For example, class 1b will be assigned to the course offering on monday morning. Not all groups are related to an offering. A group of people can also be a team that is working on a task outside the OOAPI scope. These can be teams of students, but also teams of employees.
  - name: offerings
    description: The offerings API provides information about offerings which have a global timeframe, e.g. a period to which students can enroll.
  - name: organizations
    description: The organizations API provides the organizations that are responsible for the execution and recognition of education.
  - name: persons
    description: The persons API provides information about persons related to an organization.
  - name: documents
    description: The documments API provides access to the documents in a binary format
  - name: program_model
    x-displayName: Program
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Program" />
  - name: component_model
    x-displayName: Component
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Component" />
  - name: program_offering_model
    x-displayName: ProgramOffering
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ProgramOffering" />
  - name: course_offering_model
    x-displayName: CourseOffering
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/CourseOffering" />
  - name: component_offering_model
    x-displayName: ComponentOffering
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ComponentOffering" />
  - name: association_model
    x-displayName: Association
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/AssociationFull" />
  - name: person_model
    x-displayName: Person
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Person" />
  - name: group_model
    x-displayName: Group
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Group" />
  - name: organization_model
    x-displayName: Organization
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Organization" />
paths:
  /persons/{personId}:
    get:
      summary: GET /persons/{personId}
      operationId: listPersonById
      description: Get a single person.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - persons
      parameters:
        - name: personId
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf: &ref_28
                  - type: object
                    properties: &ref_72
                      personId:
                        type: string
                        description: Unique id of this person
                        format: uuid
                        example: 123e4567-e89b-12d3-a456-426614174000
                    required: &ref_73
                      - personId
                  - type: object
                    description: A person that has a relationship with this institution
                    required: &ref_82
                      - givenName
                      - surname
                      - displayName
                      - affiliations
                      - mail
                      - primaryCode
                      - activeEnrollment
                    properties: &ref_83
                      primaryCode:
                        description: The primary human readable identifier for the person. This is often the source identifier as defined by the institution.
                        example:
                          codeType: studentNumber
                          code: 0
                        readOnly: true
                        type: object
                        properties: &ref_0
                          codeType:
                            type: string
                            description: |
                              The code/identifier type. 

                              This is an *extensible enumeration*. Use `x-` to prefix custom values

                              The predefined values are:
                                - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science
                                - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)
                                - `programCode`: Identifier for the program (collection of courses)
                                - `courseCode`: Identifier for the course 
                                - `componentCode`: The code for a component (part of a course)
                                - `offeringCode`: The code to identify a specific offering (program, course or component offering)
                                - `organizationId`: The identifier for the organization
                                - `buildingId`: The number or code to identify a building
                                - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)
                                - `roomCode`: The code for a room
                                - `systemId`: Identifier assigned to an entity in context of a specific system
                                - `productId`: Identifier assigned to a specific product
                                - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA
                                - `studentNumber`: Identifier for the student
                                - `studielinkNumber`: Identifier for the person as determined by Studielink
                                - `esi`: European Student Identifier
                                - `userName`: The name of a user
                                - `accountId`: Identifier assigned to a specific account
                                - `emailAdress`: An email address
                                - `groupCode`: The identifier for a group (of persons)
                                - `isbn`: International Standard Book Number that serve as product identifiers for Books
                                - `issn`: International Standard Book Number that serve as product identifiers for periodicals
                                - `orcId`: Open Researcher and Contributor ID
                                - `uuid`: A universally unique identifier
                                - `schacHome`: Home organization using the domain name of the organization
                                - `identifier`: Generic Identifier
                                - `eckid`: ID used in the education content chain
                                - `nationalEducationCode`: Code used to specify an education with in a country (e.g. RIO opleidingscode for NL) 
                            x-ooapi-extensible-enum: &ref_74
                              - brin
                              - crohoCreboCode
                              - programCode
                              - courseCode
                              - componentCode
                              - offeringCode
                              - organizationId
                              - buildingId
                              - bagId
                              - roomCode
                              - systemId
                              - productId
                              - nationalIdentityNumber
                              - studentNumber
                              - studielinkNumber
                              - esi
                              - userName
                              - accountId
                              - emailAdress
                              - groupCode
                              - isbn
                              - issn
                              - orcId
                              - uuid
                              - schacHome
                              - identifier
                              - eckid
                              - nationalEducationCode
                            example: identifier
                          code:
                            description: Human readable value for the code/identifier
                            type: string
                        required: &ref_1
                          - codeType
                          - code
                        additionalProperties: false
                      givenName:
                        type: string
                        description: The first name of this person
                        maxLength: 256
                        example: Maartje
                      preferredName:
                        type: string
                        description: The name by which the person refers to him/het/their self, how the person would like to be called. Usually first name of this person
                        maxLength: 256
                        example: Maar
                      surnamePrefix:
                        type: string
                        description: The prefix of the family name of this person
                        example: van
                      surname:
                        type: string
                        description: The family name of this person
                        maxLength: 256
                        example: Damme
                      displayName:
                        type: string
                        description: The name of this person which will be displayed
                        maxLength: 256
                        example: Maartje van Damme
                      initials:
                        type: string
                        description: The initials of this person
                        example: MCW
                      activeEnrollment:
                        type: boolean
                        description: Whether this person has an active enrollment.
                        example: false
                      dateOfBirth:
                        type: string
                        description: The date of birth of this person, RFC3339 (full-date)
                        format: date
                        example: '2003-09-30'
                      cityOfBirth:
                        type: string
                        description: The city of birth of this person
                        example: Utrecht
                      countryOfBirth:
                        type: string
                        description: The country of birth of this person the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                        example: NL
                      nationality:
                        type: string
                        description: The nationality (CCA3) of this person according to https://gist.github.com/zspine/2365808.
                        example: Dutch
                      dateOfNationality:
                        type: string
                        description: The date of nationality of this person, RFC3339 (full-date)
                        format: date
                        example: '2003-09-30'
                      affiliations:
                        type: array
                        description: |
                          The affiliations of this person, the relations a person has with the organization providing this endpoint
                          - student: student
                          - employee: medewerker
                          - guest: gast
                        items: &ref_71
                          type: string
                          enum:
                            - student
                            - employee
                            - guest
                          example: student
                      mail:
                        type: string
                        description: The primary e-mailaddress of this person
                        format: email
                        maxLength: 256
                        example: vandamme.mcw@universiteitvanharderwijk.nl
                      secondaryMail:
                        type: string
                        description: The secondary e-mailaddress of this person
                        format: email
                        maxLength: 256
                        example: poekie@xyz.nl
                      telephoneNumber:
                        type: string
                        description: The telephone number of this person
                        maxLength: 256
                        example: +31 123 456 789
                      mobileNumber:
                        type: string
                        description: The mobile number of this person
                        maxLength: 256
                        example: +31 612 345 678
                      photoSocial:
                        type: string
                        description: The url of the informal picture of this person
                        format: uri
                        maxLength: 2048
                        example: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Placeholder_female_superhero_c.png/203px-Placeholder_female_superhero_c.png
                      photoOfficial:
                        type: string
                        description: The url of the official picture of this person
                        format: uri
                        maxLength: 2048
                        example: https://upload.wikimedia.org/wikipedia/commons/6/66/Johannes_Vermeer_%281632-1675%29_-_The_Girl_With_The_Pearl_Earring_%281665%29.jpg
                      gender:
                        type: string
                        description: The gender of this person
                        enum: &ref_75
                          - M
                          - F
                          - U
                          - X
                        example: F
                      titlePrefix:
                        type: string
                        description: A title prefix to be used for this person
                        example: drs
                      titleSuffix:
                        type: string
                        description: A title suffix to be used for this person
                        example: BSc
                      office:
                        type: string
                        description: The name of the office where this person is located
                      address:
                        type: object
                        description: The full street address
                        required: &ref_6
                          - addressType
                        properties: &ref_7
                          addressType:
                            type: string
                            description: |
                              Address type
                              - postal: post
                              - visit: bezoek
                              - deliveries: bezorg
                              - billing: factuur
                              - teaching: the address where education takes place
                            enum: &ref_76
                              - postal
                              - visit
                              - deliveries
                              - billing
                              - teaching
                          street:
                            type: string
                            description: The street name
                            example: Moreelsepark
                          streetNumber:
                            type: string
                            description: The street number
                            example: '48'
                          additional:
                            type: array
                            description: Further details like building name, suite, apartment number, etc.
                            minItems: 1
                            items:
                              type: object
                              description: A String with an associated language code.
                              properties: &ref_4
                                language:
                                  description: The language used in the described entity. A string formatted according to RFC3066.
                                  type: string
                                  pattern: ^[a-z]{2,4}(-[A-Z][a-z]{3})?(-([A-Z]{2}|[0-9]{3}))?$
                                value:
                                  description: String to describe the entity.
                                  type: string
                              example: &ref_5
                                language: en-GB
                                value: program that is a place holder for all courses that are made available for student mobility
                            example:
                              - language: en-GB
                                value: On the other side of the road
                          postalCode:
                            type: string
                            description: Postal code
                            example: 3511 EP
                          city:
                            type: string
                            description: name of the city / locality
                            example: Utrecht
                          countryCode:
                            type: string
                            description: the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                            example: NL
                          geolocation:
                            type: object
                            description: Geolocation of the entrance of this address (WGS84 coordinate reference system)
                            required:
                              - latitude
                              - longitude
                            properties:
                              latitude:
                                type: number
                                format: double
                                example: 52.089123
                              longitude:
                                type: number
                                format: double
                                example: 5.113337
                          ext:
                            type: object
                            description: Object for additional non-standard attributes
                      ICEName:
                        type: string
                        description: Full name of In Case of Emergency contact
                        maxLength: 256
                        example: Janne
                      ICEPhoneNumber:
                        type: string
                        description: Phone number of In Case of Emergency contact
                        maxLength: 256
                        example: +31 623 456 789
                      ICERelation:
                        type: string
                        description: Type of relation between person and In Case of Emergency contact
                        enum: &ref_77
                          - partner
                          - parent
                          - other
                        example: partner
                      languageOfChoice:
                        type: array
                        description: The language(s) of choice for this person, RFC3066
                        items:
                          type: string
                          example: nl-NL
                      otherCodes:
                        type: array
                        description: An array of additional human readable codes/identifiers for the entity being described.
                        items:
                          type: object
                          properties: *ref_0
                          required: *ref_1
                          additionalProperties: false
                          example: &ref_8
                            codeType: identifier
                            code: 1234qwe12
                        example:
                          - codeType: nationalIdentityNumber
                            code: '00000'
                      consumers:
                        description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                        type: array
                        items: &ref_80
                          anyOf:
                            - type: object
                              description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                              required: &ref_11
                                - consumerKey
                              properties: &ref_12
                                consumerKey:
                                  description: The key of the consumer (destination) for which this information is intended. See the [consumer registry](https://open-education-api.github.io/specification/#/consumers) for more information.
                                  type: string
                              additionalProperties: true
                            - type: object
                              description: NL-TEST-ADMIN add-on attributes to the Association
                              required: &ref_78
                                - consumerKey
                              properties: &ref_79
                                consumerKey:
                                  type: string
                                personalNeeds:
                                  type: array
                                  items:
                                    type: string
                                  minItems: 0
                                  description: |
                                    personalNeed
                                    personalNeed to be added for this student
                                    TODO : make enum: see https://www.imsglobal.org/sites/default/files/spec/afa/3p0/information_model/imsafa3p0pnp_v1p0_InfoModel.html
                                    examples : "extraTime", "spoken", "spell-checker-on-screen"
                                idCheckName:
                                  type: string
                                  description: |
                                    The name of the person as printed on the official identification documents (Driver's license or passport or id card)
                                    This MUST be formatted as "surname prefix surname, given names"  (separating surnamePrefix and surname with a single space and surname and given names by a comma and space) 
                                    If the surname or given names are not available or secret the value of "secret" and "notAvailable" are recommended, surname prefix can be omitted.
                                    E.g. "van der Graaf, Jacobus Adrianus"
                                    Optionally the value of the student number can be added to this field by adding this at the end separated by a comma.
                                    E.g. "van der Graaf, Jacobus Adrianus, s12345678"
                        example: &ref_81
                          - consumerKey: NL-TEST-ADMIN
                            additionalTimeInMin: 30
                            personalNeeds:
                              - extraTime
                              - spoken
                              - spell-checker-on-screen
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: &ref_13
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: &ref_2
                  - status
                  - title
                properties: &ref_3
                  status:
                    type: string
                    description: The HTTP status code
                    example: '404'
                  title:
                    type: string
                    description: A short, human-readable summary of the problem type
                    example: Resource not found
                  detail:
                    type: string
                    description: A human-readable explanation specific to this occurrence of the problem
        '401':
          description: Unauthorized
          content: &ref_14
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
        '403':
          description: Forbidden
          content: &ref_15
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
        '404':
          description: Not Found
          content: &ref_16
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
        '405':
          description: Method not allowed
          content: &ref_17
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
        '429':
          description: Too many requests
          content: &ref_18
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
        '500':
          description: Internal Server Error
          content: &ref_19
            application/problem+json:
              schema:
                type: object
                description: A system message including the error code and an explanation
                required: *ref_2
                properties: *ref_3
  /organizations/{organizationId}:
    get:
      summary: GET /organizations/{organizationId}
      operationId: listOrganizationById
      description: Get a single organization.
      tags:
        - organizations
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - parent
                - children
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: A description of a group of people working together to achieve a goal
                required: &ref_9
                  - organizationId
                  - organizationType
                  - name
                  - shortName
                  - primaryCode
                properties: &ref_10
                  organizationId:
                    type: string
                    description: Unique id of this organization
                    format: uuid
                    example: 123e4567-e89b-12d3-a456-123514174000
                    readOnly: true
                  primaryCode:
                    description: The primary human readable identifier for the organization. This is often the source identifier as defined by the institution.
                    example:
                      codeType: orgId
                      code: Org01-Root
                    readOnly: true
                    type: object
                    properties: *ref_0
                    required: *ref_1
                    additionalProperties: false
                  organizationType:
                    type: string
                    description: |
                      The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.
                      - root: the root of this organization, representing the Educational Institution itself
                      - institute: instituut
                      - department: departement
                      - faculty: faculteit
                      - branch: vestiging
                      - academy: academie
                      - school: school
                    enum: &ref_84
                      - root
                      - institute
                      - department
                      - faculty
                      - branch
                      - academy
                      - school
                    example: root
                  name:
                    type: array
                    description: The name of the organization
                    minItems: 1
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    example:
                      - language: nl-NL
                        value: Coöperatie SURF U.A.
                  shortName:
                    type: string
                    description: Short name of the organization
                    maxLength: 256
                    example: SURF
                  description:
                    type: array
                    description: Any general description of the organization should clearly mention the type of higher education organization, especially in the case of a binary system. In Dutch; universiteit (university) or hogeschool (university of applied sciences).
                    minItems: 1
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    example:
                      - language: nl-NL
                        value: SURF is een coöperatieve vereniging van Nederlandse onderwijs- en onderzoeksinstellingen waarin de leden hun krachten bundelen. De leden zijn eigenaar van SURF.
                  addresses:
                    type: array
                    description: Addresses of this organization
                    items:
                      type: object
                      description: The full street address
                      required: *ref_6
                      properties: *ref_7
                  link:
                    type: string
                    description: URL of the organization's website
                    format: uri
                    maxLength: 2048
                    example: https://surf.nl
                  logo:
                    type: string
                    description: Logo of this organization
                    format: uri
                    maxLength: 2048
                    example: https://www.surf.nl/themes/surf/logo.svg
                  otherCodes:
                    type: array
                    description: An array of additional human readable codes/identifiers for the entity being described.
                    minItems: 1
                    items:
                      type: object
                      properties: *ref_0
                      required: *ref_1
                      additionalProperties: false
                      example: *ref_8
                    example:
                      - codeType: brin
                        code: 00AA
                      - codeType: kvk
                        code: '12345678'
                  parent:
                    description: |
                      The organizational unit which is the parent of this organization. [`expandable`](#tag/organization_model)
                      By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                    oneOf:
                      - title: organizationId
                        type: string
                        description: An identifier of another resource.
                        format: uuid
                      - title: Organization object
                        type: object
                        description: A description of a group of people working together to achieve a goal
                        required: *ref_9
                        properties: *ref_10
                  children:
                    type: array
                    description: |
                      All the organizational units for which this organization is the parent. [`expandable`](#tag/organization_model)
                      By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                    items:
                      oneOf:
                        - title: organizationId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Organization object
                          type: object
                          description: A description of a group of people working together to achieve a goal
                          required: *ref_9
                          properties: *ref_10
                  consumers:
                    description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                    type: array
                    items:
                      type: object
                      description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                      required: *ref_11
                      properties: *ref_12
                      additionalProperties: true
                    example: &ref_39
                      - consumerKey: x-test-consumer
                        additional: custom
                        attributes: here
                  ext:
                    type: object
                    description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /components/{componentId}:
    get:
      summary: GET /components/{componentId}
      operationId: listComponentById
      description: Get a single component.
      security:
        - oAuthFlows:
            - test-content-flow
            - test-admin-flow
      tags:
        - components
      parameters:
        - name: componentId
          in: path
          description: component ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - course
                - organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: A component is a part of a course
                required: &ref_29
                  - componentId
                  - componentType
                  - name
                  - teachingLanguage
                  - abbreviation
                  - primaryCode
                properties: &ref_30
                  componentId:
                    type: string
                    description: Unique id of this component
                    format: uuid
                    example: 123e4567-e89b-12d3-a456-426614174000
                    readOnly: true
                  primaryCode:
                    description: The primary human readable identifier for this component. This is often the source identifier as defined by the institution.
                    example:
                      codeType: componentCode
                      code: INFOMQNM-WRKCLG-1
                    readOnly: true
                    type: object
                    properties: *ref_0
                    required: *ref_1
                    additionalProperties: false
                  componentType:
                    type: string
                    description: |
                      The component type
                      - test: tentamen
                      - lecture: college
                      - practical: practicum
                      - tutorial: werkcollege
                      - consultation: consultatie
                      - project: project
                      - workshop: workshop
                      - excursion: excursie
                      - independent study: zelfstudie
                      - external: extern
                      - skills training: vaardighedentraining
                    enum: &ref_85
                      - test
                      - lecture
                      - practical
                      - tutorial
                      - consultation
                      - project
                      - workshop
                      - excursion
                      - independent study
                      - external
                      - skills training
                    example: test
                  name:
                    type: array
                    description: The name of this component
                    minItems: 1
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    example:
                      - language: en-GB
                        value: Written test for INFOMQNM
                  abbreviation:
                    type: string
                    description: The abbreviation of this component
                    maxLength: 256
                    example: Test-INFOMQNM
                  modeOfDelivery:
                    type: array
                    description: |
                      The mode of delivery of the component (ECTS-mode of delivery)
                      - distance-learning: afstandsleren
                      - on campus: op de campus
                      - online: online
                      - hybrid: hybride
                      - situated: op locatie
                    items: &ref_20
                      type: string
                      enum:
                        - distance-learning
                        - on campus
                        - online
                        - hybrid
                        - situated
                      example: situated
                  duration:
                    type: string
                    description: The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
                    pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
                    example: P1DT30H4S
                  description:
                    type: array
                    description: The description of this component.
                    minItems: 1
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    example:
                      - language: en-GB
                        value: |
                          'Prove executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms Able to design suitable research studies (e.g., choose between within and between subject designs) Define/apply/design metrics and scales Define/produce materials (e.g., stimuli and questionnaires) Define protocols for research studies Understands and take in account concepts of reliability and validity Analyze and improve methods and analysis of published scientific articles Able to deliver scientific reports
                          Prove executable knowledge of ­­­statistics, including: Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates) Data preparation (e.g., coding and feature selection) Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors) Select an appropriate sampling method (e.g., stratified) Perform parametric tests (e.g., repeated measures (M)ANOVA) Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'
                  teachingLanguage:
                    type: string
                    description: The (primary) teaching language in which this component is given, should be a three-letter language code as specified by ISO 639-2.
                    minLength: 3
                    maxLength: 3
                    pattern: ^[a-z]{3}$
                    example: nld
                  learningOutcomes:
                    type: array
                    description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).
                    items:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        description: A String with an associated language code.
                        properties: *ref_4
                        example: *ref_5
                      example:
                        - language: en-GB
                          value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
                  enrollment:
                    type: array
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    description: The extra information that is provided for enrollment
                    example:
                      - language: en-GB
                        value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
                  resources:
                    type: array
                    description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
                    items:
                      type: string
                    example:
                      - book to be announced
                      - on-line resource x
                  assessment:
                    type: array
                    description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
                    minItems: 1
                    items:
                      type: object
                      description: A String with an associated language code.
                      properties: *ref_4
                      example: *ref_5
                    example:
                      - language: en-GB
                        value: Exam on campus
                  addresses:
                    type: array
                    description: Addresses for this component
                    items:
                      type: object
                      description: The full street address
                      required: *ref_6
                      properties: *ref_7
                  otherCodes:
                    type: array
                    description: An array of additional human readable codes/identifiers for the entity being described.
                    items:
                      type: object
                      properties: *ref_0
                      required: *ref_1
                      additionalProperties: false
                      example: *ref_8
                  course:
                    description: |
                      The course of which this component is a part. [`expandable`](#tag/course_model)
                      By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.
                    oneOf:
                      - title: courseId
                        type: string
                        description: An identifier of another resource.
                        format: uuid
                      - title: Course object
                        allOf: &ref_46
                          - type: object
                            description: An object describing the metadata of a course
                            required: &ref_86
                              - courseId
                            properties: &ref_87
                              courseId:
                                type: string
                                description: Unique id of this course
                                format: uuid
                                example: 123e4567-e89b-12d3-a456-426614174000
                                readOnly: true
                          - type: object
                            description: An object describing the metadata of a course
                            required: &ref_100
                              - name
                              - abbreviation
                              - description
                              - teachingLanguage
                              - level
                              - primaryCode
                            properties: &ref_101
                              primaryCode:
                                description: The primary human readable identifier for this course. This is often the source identifier as defined by the institution.
                                readOnly: true
                                type: object
                                properties: *ref_0
                                required: *ref_1
                                additionalProperties: false
                                example: *ref_8
                              name:
                                type: array
                                description: The name of this course (ECTS-title)
                                minItems: 1
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                                example:
                                  - language: en-GB
                                    value: Academic and Professional Writing
                              abbreviation:
                                type: string
                                description: The abbreviation or internal code used to identify this course (ECTS-code)
                                maxLength: 256
                                example: INFOMQNM
                              studyLoad:
                                type: object
                                description: The amount of effort to complete this education in the specified unit.
                                properties: &ref_22
                                  studyLoadUnit:
                                    description: "The unit in which the studyload is specfied\n- contacttime: CONTACTUUR\tamount of time spent in classes\n- ects: ECTS_PUNT\tEuropean Credit Transfer System\n- sbu: SBU\tstudentloadhours\n- sp: STUDIEPUNT studentpoints\n- hour: UUR\thours\n"
                                    type: string
                                    enum:
                                      - contacttime
                                      - ects
                                      - sbu
                                      - sp
                                      - hour
                                    example: ects
                                  value:
                                    description: The amount of load depicted in numbers
                                    type: number
                                    example: 3
                                example: &ref_23
                                  studyLoadUnit: ects
                                  value: 3
                              modeOfDelivery:
                                type: array
                                description: |
                                  The mode of delivery of the component (ECTS-mode of delivery)
                                  - distance-learning: afstandsleren
                                  - on campus: op de campus
                                  - online: online
                                  - hybrid: hybride
                                  - situated: op locatie
                                items: *ref_20
                              duration:
                                type: string
                                description: The duration of this course. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
                                pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
                                example: P1DT30H4S
                              firstStartDate:
                                type: string
                                description: The date when participants can follow this course for the first time.
                                format: date
                              description:
                                type: array
                                description: The description of this course (ECTS-description).
                                minItems: 1
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                                example:
                                  - language: en-GB
                                    value: As with all empirical sciences, to assure valid outcomes, HCI studies heavily rely on research methods and statistics. This holds for the design of user interfaces, personalized recommender systems, and interaction paradigms for the internet of things. This course prepares you to do so by learning you to collect data, design experiments, and analyze the results. By the end of the course, you will have a detailed understanding of how to select and apply quantitative research methods and analysis to address virtually all HCI challenges. Quantitative research and data analysis will be taught in the context of state-of-the-art HCI challenges. Lectures will be alternated with hands-on learning, including work with predefined datasets (e.g., addressing facial features, cognitive load, and emotion). Additionally, students will set up their own research (e.g., using eye tracking). Data processing and analysis will be executed using R.
                              teachingLanguage:
                                type: string
                                description: The (primary) teaching language in which this course is given, should be a three-letter language code as specified by ISO 639-2.
                                minLength: 3
                                maxLength: 3
                                pattern: ^[a-z]{3}$
                                example: nld
                              fieldsOfStudy:
                                type: string
                                description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
                                maxLength: 4
                                example: '0732'
                              learningOutcomes:
                                type: array
                                description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).
                                items:
                                  type: array
                                  minItems: 1
                                  items:
                                    type: object
                                    description: A String with an associated language code.
                                    properties: *ref_4
                                    example: *ref_5
                                  example:
                                    - language: en-GB
                                      value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
                              admissionRequirements:
                                type: array
                                description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.
                                example:
                                  - language: en-GB
                                    value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance
                                minItems: 1
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                              qualificationRequirements:
                                type: array
                                description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.
                                minItems: 1
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                              level:
                                type: string
                                description: |
                                  The level of this course (ECTS-year of study if applicable)
                                  - secondary vocational education: mbo
                                  - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
                                  - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
                                  - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
                                  - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
                                  - associate degree: associate degree, corresponds to levelOfQualification 5
                                  - bachelor: bachelor, corresponds to levelOfQualification 6
                                  - master: master, corresponds to levelOfQualification 7
                                  - doctoral: doctoraal, corresponds to levelOfQualification 8
                                  - undefined: onbepaald
                                  - undivided: ongedeeld
                                  - nt2-1: NT2 niveau 1
                                  - nt2-2: NT2 niveau 2
                                enum: &ref_21
                                  - secondary vocational education
                                  - secondary vocational education 1
                                  - secondary vocational education 2
                                  - secondary vocational education 3
                                  - secondary vocational education 4
                                  - associate degree
                                  - bachelor
                                  - master
                                  - doctoral
                                  - undefined
                                  - undivided
                                  - nt2-1
                                  - nt2-2
                                example: master
                              enrollment:
                                type: array
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                                description: The extra information that is provided for enrollment
                                example:
                                  - language: en-GB
                                    value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
                              resources:
                                type: array
                                description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
                                items:
                                  type: string
                                example:
                                  - book to be announced
                                  - on-line resource x
                              assessment:
                                type: array
                                description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
                                minItems: 1
                                items:
                                  type: object
                                  description: A String with an associated language code.
                                  properties: *ref_4
                                  example: *ref_5
                                example:
                                  - language: en-GB
                                    value: Exam on campus
                              link:
                                type: string
                                description: URL of the course's website
                                format: uri
                                maxLength: 2048
                                example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM
                              educationSpecification:
                                description: The educationSpecification of which this course is a more concrete implementation. [`expandable`](#tag/education_specification_model)
                                oneOf:
                                  - title: educationSpecificationId
                                    type: string
                                    description: An identifier of another resource.
                                    format: uuid
                                  - title: EducationSpecification
                                    allOf: &ref_24
                                      - type: object
                                        properties: &ref_88
                                          educationSpecificationId:
                                            type: string
                                            description: Unique id for this education specification
                                            format: uuid
                                            example: 123e4567-e89b-12d3-a456-426614174000
                                        required: &ref_89
                                          - educationSpecificationId
                                      - type: object
                                        description: |
                                          The specification of an education object. This specification allows for other education objects to be derived from it.
                                          It is used to aggregate education objects from a supplying institution.
                                          It clusters programs to a main educationSpecification that is used in registries such as RIO. 
                                        required: &ref_92
                                          - primaryCode
                                          - educationSpecificationType
                                          - name
                                        properties: &ref_93
                                          primaryCode:
                                            description: |
                                              The primary human readable identifier for the entity. 
                                              This will often take the form of a human readable code as defined by the institution or region
                                            type: object
                                            properties: *ref_0
                                            required: *ref_1
                                            additionalProperties: false
                                            example: *ref_8
                                          otherCodes:
                                            type: array
                                            description: An array of additional human readable codes/identifiers for the entity being described.
                                            items:
                                              type: object
                                              properties: *ref_0
                                              required: *ref_1
                                              additionalProperties: false
                                              example: *ref_8
                                            example:
                                              - codeType: crohoCreboCode
                                                code: '1234123'
                                          educationSpecificationType:
                                            type: string
                                            description: |
                                              The type of education specification
                                                - program: HOOPLEIDING
                                                - privateProgram: PARTICULIEREOPLEIDING
                                                - programCluster: HOONDERWIJSEENHEDENCLUSTER
                                                - course: HOONDERWIJSEENHEID
                                            enum: &ref_90
                                              - program
                                              - privateProgram
                                              - cluster
                                              - course
                                            example: program
                                          name:
                                            type: array
                                            items:
                                              type: object
                                              description: A String with an associated language code.
                                              properties: *ref_4
                                              example: *ref_5
                                            description: The name of this education specification
                                            example:
                                              - language: en-GB
                                                value: Bachelor Chemical technology
                                          abbreviation:
                                            type: string
                                            description: The abbreviation of this program
                                            maxLength: 256
                                            example: B Scheikundige Technologie
                                          description:
                                            type: array
                                            items:
                                              type: object
                                              description: A String with an associated language code.
                                              properties: *ref_4
                                              example: *ref_5
                                            description: The description of this program. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
                                            example:
                                              - language: en-GB
                                                value: program that is a place holder for all courses that are made available for student mobility
                                          formalDocument:
                                            type: string
                                            description: |
                                              The type of formal document obtained after completion of this education
                                                - diploma: DIPLOMA
                                                - certificate: CERTIFICAAT
                                                - no official document: GEEN OFFICIEEL DOCUMENT
                                                - testimonial: GETUIGSCHRIFT
                                                - school advice: SCHOOLADVIES
                                            enum: &ref_91
                                              - diploma
                                              - certificate
                                              - no official document
                                              - testimonial
                                              - school advice
                                            example: diploma
                                          level:
                                            type: string
                                            description: |
                                              The level of this course (ECTS-year of study if applicable)
                                              - secondary vocational education: mbo
                                              - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
                                              - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
                                              - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
                                              - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
                                              - associate degree: associate degree, corresponds to levelOfQualification 5
                                              - bachelor: bachelor, corresponds to levelOfQualification 6
                                              - master: master, corresponds to levelOfQualification 7
                                              - doctoral: doctoraal, corresponds to levelOfQualification 8
                                              - undefined: onbepaald
                                              - undivided: ongedeeld
                                              - nt2-1: NT2 niveau 1
                                              - nt2-2: NT2 niveau 2
                                            enum: *ref_21
                                            example: master
                                          sector:
                                            type: string
                                            description: |
                                              The sector for this program
                                              - secondary vocational education: middelbaar beroepsonderwijs
                                              - higher professional education: hoger beroepsonderwijs
                                              - university education: universitair onderwijs
                                            enum: &ref_26
                                              - secondary vocational education
                                              - higher professional education
                                              - university education
                                            example: university education
                                          levelOfQualification:
                                            type: string
                                            description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
                                            enum: &ref_25
                                              - '1'
                                              - '2'
                                              - '3'
                                              - '4'
                                              - 4+
                                              - '5'
                                              - '6'
                                              - '7'
                                              - '8'
                                            example: '6'
                                          fieldsOfStudy:
                                            type: string
                                            description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
                                            maxLength: 4
                                            example: '0732'
                                          studyLoad:
                                            type: object
                                            description: The amount of effort to complete this education in the specified unit.
                                            properties: *ref_22
                                            example: *ref_23
                                          learningOutcomes:
                                            type: array
                                            description: Statements that describe the knowledge or skills students should acquire by the end of a particular course or program (ECTS-learningoutcome).
                                            items:
                                              type: array
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              example:
                                                - language: en-GB
                                                  value: 'Executable knowledge of Chemical technology, including: Acquire knowledge of research paradigms.'
                                          link:
                                            type: string
                                            description: URL of the program's website
                                            format: uri
                                            maxLength: 2048
                                            example: https://bijvak.nl
                                          parent:
                                            description: The educationSpecification that is the parent of this educationSpecification if it exists. [`expandable`](#tag/education_specification_model)
                                            oneOf:
                                              - title: educationSpecificationId
                                                type: string
                                                description: An identifier of another resource.
                                                format: uuid
                                              - title: EducationSpecification
                                                allOf: *ref_24
                                          children:
                                            type: array
                                            description: The EducationSpecifications that have this EducationSpecification as their parent. [`expandable`](#tag/education_specification_model)
                                            items:
                                              oneOf:
                                                - title: educationSpecificationId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: EducationSpecification
                                                  allOf: *ref_24
                                          organization:
                                            description: |
                                              The organization that manages this group. [`expandable`](#tag/organization_model)
                                              By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                            oneOf:
                                              - title: organizationId
                                                type: string
                                                description: An identifier of another resource.
                                                format: uuid
                                              - title: Organization object
                                                type: object
                                                description: A description of a group of people working together to achieve a goal
                                                required: *ref_9
                                                properties: *ref_10
                                          consumers:
                                            description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                            type: array
                                            items:
                                              type: object
                                              description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                              required: *ref_11
                                              properties: *ref_12
                                              additionalProperties: true
                                            example:
                                              - consumerKey: rio
                                                educationSpecificationSubType: variant
                                                category:
                                                  - business_and_project_support
                                                  - economy
                                          ext:
                                            type: object
                                            description: Object for additional non-standard attributes
                                      - properties:
                                          validFrom:
                                            description: The first day this EducationSpecification is valid (inclusive).
                                            type: string
                                            format: date
                                          validTo:
                                            description: The day this EducationSpecification ceases to be valid (e.g. exclusive).
                                            type: string
                                            format: date
                              addresses:
                                type: array
                                description: Addresses for this course
                                items:
                                  type: object
                                  description: The full street address
                                  required: *ref_6
                                  properties: *ref_7
                              otherCodes:
                                type: array
                                description: An array of additional human readable codes/identifiers for the entity being described.
                                items:
                                  type: object
                                  properties: *ref_0
                                  required: *ref_1
                                  additionalProperties: false
                                  example: *ref_8
                              consumers:
                                description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                type: array
                                items:
                                  type: object
                                  description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                  required: *ref_11
                                  properties: *ref_12
                                  additionalProperties: true
                                example:
                                  - consumerKey: rio
                                    educationOffererCode: 123A321
                                    educationLocationCode: 334X123
                                    consentParticipationSTAP: permission_granted
                                    jointPartnerCodes:
                                      - 123A123
                                    foreignPartners:
                                      - Harvard University
                              ext:
                                type: object
                                description: Object for additional non-standard attributes
                              programs:
                                description: The program of which this course is a part of. This object is [`expandable`](#tag/program_model)
                                type: array
                                items:
                                  oneOf:
                                    - title: programId
                                      type: string
                                      description: An identifier of another resource.
                                      format: uuid
                                    - title: Program object
                                      allOf: &ref_27
                                        - type: object
                                          description: A collection of courses that lead to a certifiable learning outcome
                                          required: &ref_94
                                            - programId
                                          properties: &ref_95
                                            programId:
                                              type: string
                                              description: Unique id for this program
                                              format: uuid
                                              example: 123e4567-e89b-12d3-a456-426614174000
                                              readOnly: true
                                        - type: object
                                          description: A collection of courses that lead to a certifiable learning outcome
                                          properties: &ref_99
                                            primaryCode:
                                              description: The primary human readable identifier for the program. This is often the source identifier as defined by the institution.
                                              example:
                                                codeType: programCode
                                                code: BIO
                                              readOnly: true
                                              type: object
                                              properties: *ref_0
                                              required: *ref_1
                                              additionalProperties: false
                                            programType:
                                              type: string
                                              description: |
                                                The type of this program
                                                - program: opleiding
                                                - minor: minor
                                                - honours: honours
                                                - specialization: specialisatie
                                                - track: track
                                              enum: &ref_96
                                                - program
                                                - minor
                                                - honours
                                                - specialization
                                                - track
                                              example: program
                                            name:
                                              description: The name of this program
                                              type: array
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              example:
                                                - language: en-GB
                                                  value: Biology
                                            abbreviation:
                                              type: string
                                              description: The abbreviation of this program
                                              maxLength: 256
                                              example: BIO
                                            description:
                                              type: array
                                              description: The description of this program
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              example:
                                                - language: en-GB
                                                  value: The study of life
                                            teachingLanguage:
                                              type: string
                                              description: The (primary) teaching language in which this program is given, should be a three-letter language code as specified by ISO 639-2.
                                              minLength: 3
                                              maxLength: 3
                                              pattern: ^[a-z]{3}$
                                              example: nld
                                            studyLoad:
                                              type: object
                                              description: The amount of effort to complete this education in the specified unit.
                                              properties: *ref_22
                                              example: *ref_23
                                            qualificationAwarded:
                                              type: string
                                              description: Type of qualificaton that can be obtained on finishing the program
                                              enum: &ref_97
                                                - AD
                                                - BA
                                                - BSc
                                                - LLB
                                                - MA
                                                - MSc
                                                - LLM
                                                - Phd
                                                - None
                                              example: None
                                            modeOfStudy:
                                              type: string
                                              description: |
                                                Indicates whether the education is full-time, part-time, dual or self-paced.
                                                  - full-time: fulltime
                                                  - part-time: parttime
                                                  - dual training: duaal
                                                  - self-paced: eigen tempo
                                                  - extraneous : extraneus student: examendeelnemer (student mag alleen aan de toetsen deelnemen / beperkt colegegeld)
                                              enum: &ref_98
                                                - full-time
                                                - part-time
                                                - dual training
                                                - self-paced
                                                - extraneous
                                            modeOfDelivery:
                                              type: array
                                              description: |
                                                The mode of delivery of the component (ECTS-mode of delivery)
                                                - distance-learning: afstandsleren
                                                - on campus: op de campus
                                                - online: online
                                                - hybrid: hybride
                                                - situated: op locatie
                                              items: *ref_20
                                            duration:
                                              type: string
                                              description: The duration of this program. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
                                              pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
                                              example: P1DT30H4S
                                            firstStartDate:
                                              type: string
                                              description: The date when participants can follow this program for the first time.
                                              format: date
                                            levelOfQualification:
                                              type: string
                                              description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
                                              enum: *ref_25
                                              example: '6'
                                            level:
                                              type: string
                                              description: |
                                                The level of this course (ECTS-year of study if applicable)
                                                - secondary vocational education: mbo
                                                - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
                                                - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
                                                - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
                                                - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
                                                - associate degree: associate degree, corresponds to levelOfQualification 5
                                                - bachelor: bachelor, corresponds to levelOfQualification 6
                                                - master: master, corresponds to levelOfQualification 7
                                                - doctoral: doctoraal, corresponds to levelOfQualification 8
                                                - undefined: onbepaald
                                                - undivided: ongedeeld
                                                - nt2-1: NT2 niveau 1
                                                - nt2-2: NT2 niveau 2
                                              enum: *ref_21
                                              example: master
                                            sector:
                                              type: string
                                              description: |
                                                The sector for this program
                                                - secondary vocational education: middelbaar beroepsonderwijs
                                                - higher professional education: hoger beroepsonderwijs
                                                - university education: universitair onderwijs
                                              enum: *ref_26
                                              example: university education
                                            fieldsOfStudy:
                                              type: string
                                              description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
                                              maxLength: 4
                                              example: '0732'
                                            enrollment:
                                              type: array
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              description: The extra information that is provided for enrollment
                                              example:
                                                - language: en-GB
                                                  value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
                                            resources:
                                              type: array
                                              description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
                                              items:
                                                type: string
                                              example:
                                                - book to be announced
                                                - on-line resource x
                                            learningOutcomes:
                                              type: array
                                              description: List of learning outcomes at program level. It is advisable to limit the number of learning outcomes to approximately 20. It is also advisable to make sure that the program learning outcomes in the course catalogue correspond with those on the Diploma Supplement.
                                              items:
                                                type: array
                                                minItems: 1
                                                items:
                                                  type: object
                                                  description: A String with an associated language code.
                                                  properties: *ref_4
                                                  example: *ref_5
                                                example:
                                                  - language: en-GB
                                                    value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
                                            assessment:
                                              type: array
                                              description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              example:
                                                - language: en-GB
                                                  value: Exam on campus
                                            admissionRequirements:
                                              type: array
                                              description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.
                                              example:
                                                - language: en-GB
                                                  value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                            qualificationRequirements:
                                              type: array
                                              description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                            link:
                                              type: string
                                              description: URL of the program's website
                                              format: uri
                                              maxLength: 2048
                                              example: https://bijvak.nl
                                            educationSpecification:
                                              description: The educationSpecification of which this program is a more concrete implementation. [`expandable`](#tag/education_specification_model)
                                              oneOf:
                                                - title: educationSpecificationId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: EducationSpecification
                                                  allOf: *ref_24
                                            otherCodes:
                                              type: array
                                              description: An array of additional human readable codes/identifiers for the entity being described.
                                              items:
                                                type: object
                                                properties: *ref_0
                                                required: *ref_1
                                                additionalProperties: false
                                                example: *ref_8
                                              example:
                                                - codeType: crohoCreboCode
                                                  code: '59312'
                                            addresses:
                                              type: array
                                              description: Addresses for this program
                                              items:
                                                type: object
                                                description: The full street address
                                                required: *ref_6
                                                properties: *ref_7
                                            parent:
                                              description: Parent program of which the current program is a child. This object is [`expandable`](#tag/program_model)
                                              oneOf:
                                                - title: programId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: Expanded Program
                                                  allOf: *ref_27
                                            children:
                                              type: array
                                              description: Programs which are a part of this program (e.g specializations). This object is [`expandable`](#tag/program_model)
                                              items:
                                                oneOf:
                                                  - title: programId
                                                    type: string
                                                    description: An identifier of another resource.
                                                    format: uuid
                                                  - title: Expanded Program
                                                    allOf: *ref_27
                                            coordinators:
                                              description: The person(s) responsible for this program. This object is [`expandable`](#tag/person_model)
                                              type: array
                                              items:
                                                oneOf:
                                                  - title: personId
                                                    type: string
                                                    description: An identifier of another resource.
                                                    format: uuid
                                                  - title: Person object
                                                    allOf: *ref_28
                                            organization:
                                              description: |
                                                The organization providing this program. [`expandable`](#tag/organization_model)
                                                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                              oneOf:
                                                - title: organizationId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: Organization object
                                                  type: object
                                                  description: A description of a group of people working together to achieve a goal
                                                  required: *ref_9
                                                  properties: *ref_10
                                            consumers:
                                              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                              type: array
                                              items:
                                                type: object
                                                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                                required: *ref_11
                                                properties: *ref_12
                                                additionalProperties: true
                                              example:
                                                - consumerKey: rio
                                                  educationOffererCode: 122A112
                                                  educationLocationCode: 123X122
                                                  consentParticipationSTAP: permission_granted
                                                  jointPartnerCodes:
                                                    - 122A113
                                                  foreignPartners:
                                                    - Harvard University
                                                  deficiency: deficiencies
                                                  requirementsActivities: requirements
                                                  propaedeuticPhase: no_propaedeutic_phase
                                                  studyChoiceCheck: no_study_choice_check
                                                  acceleratedRoute: accelerated_route
                                            ext:
                                              type: object
                                              description: Object for additional non-standard attributes
                                        - properties:
                                            validFrom:
                                              description: The first day this program is valid (inclusive).
                                              type: string
                                              format: date
                                            validTo:
                                              description: The day this program ceases to be valid (e.g. exclusive).
                                              type: string
                                              format: date
                              coordinators:
                                description: The person(s) responsible for this course. This object is [`expandable`](#tag/person_model)
                                type: array
                                items:
                                  oneOf:
                                    - title: personId
                                      type: string
                                      description: An identifier of another resource.
                                      format: uuid
                                    - title: Person object
                                      allOf: *ref_28
                              organization:
                                description: |
                                  The organization that manages this group. [`expandable`](#tag/organization_model)
                                  By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                oneOf:
                                  - title: organizationId
                                    type: string
                                    description: An identifier of another resource.
                                    format: uuid
                                  - title: Organization object
                                    type: object
                                    description: A description of a group of people working together to achieve a goal
                                    required: *ref_9
                                    properties: *ref_10
                          - properties:
                              validFrom:
                                description: The first day this course is valid (inclusive).
                                type: string
                                format: date
                              validTo:
                                description: The day this course ceases to be valid (e.g. exclusive).
                                type: string
                                format: date
                  organization:
                    description: |
                      The organization which provides this component. [`expandable`](#tag/organization_model)
                      By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                    oneOf:
                      - title: organizationId
                        type: string
                        description: An identifier of another resource.
                        format: uuid
                      - title: Organization object
                        type: object
                        description: A description of a group of people working together to achieve a goal
                        required: *ref_9
                        properties: *ref_10
                  consumers:
                    description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                    type: array
                    items: &ref_104
                      anyOf:
                        - type: object
                          description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                          required: *ref_11
                          properties: *ref_12
                          additionalProperties: true
                        - type: object
                          description: NL-TEST-ADMIN add-on attributes to the Component
                          required: &ref_102
                            - consumerKey
                          properties: &ref_103
                            consumerKey:
                              type: string
                            additionalTestingTime:
                              description: |
                                maximum time in minutes that can be added to a test as possible extra time as part of the available personal needs
                              type: integer
                            availablePersonalNeeds:
                              type: array
                              description: |
                                enum: see https://www.imsglobal.org/sites/default/files/spec/afa/3p0/information_model/imsafa3p0pnp_v1p0_InfoModel.html
                                examples : "extraTime", "spoken", "spell-checker-on-screen"
                              items:
                                type: string
                                enum:
                                  - extraTime
                                  - spoken
                                  - spell-checker-on-screen
                            safety:
                              type: array
                              description: |
                                safety possibilities that are provided by the supplier of the component
                              items:
                                type: string
                                enum:
                                  - securedComputer
                                  - fixedLocation
                                  - surveillance
                            exam:
                              type: boolean
                            resultValueType:
                              type: string
                              description: |
                                The result value type for this offering
                                - pass-or-fail = Resultvalue is from valuelist {passed, failed}
                                - insufficient-satisfactory-good = Resultvalue is from valuelist {insufficient, satisfactory, good}
                                - US letter = Resultvalue is a letter from A t/m D en F voor fail as in US
                                - UK letter = Resultvalue is a letter from A t/m G en U voor ungraded/unclassified as in UK
                                - DE grade = Resultvalue is a letter as used in Germany
                                - 0-100 = Resultvalue is a number from range (0,100)
                                - 0-10 = Resultvalue is a number from range (0,10)
                                - 0.0-10.0 = Resultvalue is a decimal number from range (0.0,10.0)
                                - referenceLevelRKTR = Resultvalue is a reference level from the Dutch "Referentiekader Taal en Rekenen" from value set {1F, 1S, 2F, 2S, 3F, 3S, 4F, 4S} and additional values like "Op weg naar 1F"
                                - referenceLevelERK = Resultvalue is a reference level from the "Europees Referencekader voor de talen" from value set {A1, A2, B1, B2, C1, C2}
                              enum: &ref_40
                                - pass-or-fail
                                - insufficient-satisfactory-good
                                - US letter
                                - UK letter
                                - DE grade
                                - 0-100
                                - 0-10
                                - 0.0-10.0
                                - referenceLevelRKTR
                                - referenceLevelERK
                              example: 0-10
                            passFrom:
                              type: string
                              enum:
                                - '5.5'
                            retries:
                              description: |
                                number of retries allowed for this component
                              type: integer
                            status:
                              type: string
                              enum:
                                - active
                                - inactive
                            licensed:
                              type: boolean
                    example: &ref_105
                      - consumerKey: NL-TEST-ADMIN
                        extraTime: 30
                        availablePersonalNeeds:
                          - extraTime
                          - spoken
                          - spell-checker-on-screen
                        exam: true
                        resultValueType: 1.0-10.0
                        passFrom: 5.5
                        retries: 2
                        status: active
                        licensed: true
                  ext:
                    type: object
                    description: Object for additional non-standard attributes
              examples:
                Request details of one test (Flow 0.2):
                  value:
                    componentId: c5fca27e-ccc1-430d-9888-90e005ad6a86
                    primaryCode:
                      codeType: testId
                      code: '5'
                    componentType: test
                    name:
                      - language: nl-NL
                        value: Rekenen 2F voor technische opleidingen
                    abbreviation: REK2F-TECH
                    modeOfDelivery:
                      - situated
                    duration: PT60M
                    description:
                      - language: nl-NL
                        value: Rekentest MBO op niveau 2F toegespitst op technische opleidingen zoals procestechniek/machinebouw
                    teachingLanguage: nld
                    assessment:
                      - language: nl-NL
                        value: Digitale toetsing
                    organization: 452c1a86-a0af-475b-b03f-724878b0f387
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        extraTime: P60M
                        availablePersonalNeeds:
                          - extraTime
                          - spoken
                          - spell-checker-on-screen
                        exam: true
                        resultValueType: 1-10
                        passFrom: '5.5'
                        retries: 2
                        status: active
                        licensed: true
                Request details of one test (Flow 0.2 minimal):
                  value:
                    componentId: c5fca27e-ccc1-430d-9888-90e005ad6a86
                    primaryCode:
                      codeType: testId
                      code: '5'
                    componentType: test
                    name:
                      - language: nl-NL
                        value: Rekenen 2F voor technische opleidingen
                    abbreviation: REK2F-TECH
                    modeOfDelivery:
                      - situated
                    duration: PT60M
                    description:
                      - language: nl-NL
                        value: Rekentest MBO op niveau 2F toegespitst op technische opleidingen zoals procestechniek/machinebouw
                    teachingLanguage: nld
                    assessment:
                      - language: nl-NL
                        value: Digitale toetsing
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        extraTime: P60M
                        availablePersonalNeeds:
                          - extraTime
                          - spoken
                          - spell-checker-on-screen
                        exam: true
                        resultValueType: 1-10
                        passFrom: '5.5'
                        retries: 2
                        status: active
                        licensed: true
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /components:
    get:
      summary: GET /components
      operationId: listComponents
      description: Get a list of all components, ordered by name (ascending).
      security:
        - oAuthFlows:
            - test-admin-flow
            - test-content-flow
      tags:
        - components
      parameters:
        - name: primaryCode
          in: query
          description: The primaryCode of the requested item. This is often the source identifier as defined by the institution.
          required: false
          schema: &ref_67
            type: string
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: &ref_31
            type: integer
            format: int32
            default: 10
            enum:
              - 10
              - 20
              - 50
              - 100
              - 250
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: &ref_32
            type: integer
            format: int32
            example: 1
            minimum: 1
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: &ref_33
            type: string
        - name: q
          in: query
          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
          required: false
          schema: &ref_34
            type: string
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - componentId
                - name
                - '-componentId'
                - '-name'
            default:
              - name
            example:
              - name
              - '-componentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: &ref_35
                      - pageSize
                      - pageNumber
                      - hasPreviousPage
                      - hasNextPage
                      - items
                    properties: &ref_36
                      pageSize:
                        type: integer
                        format: int32
                        description: The number of items per page
                        example: 10
                      pageNumber:
                        type: integer
                        format: int32
                        description: The current page number
                        example: 1
                        minimum: 1
                      hasPreviousPage:
                        type: boolean
                        description: Whether there is a previous page
                        example: false
                      hasNextPage:
                        type: boolean
                        description: Whether there is a previous page
                        example: true
                      totalPages:
                        type: integer
                        format: int32
                        description: Total number of pages
                        example: 8
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          description: A component is a part of a course
                          required: *ref_29
                          properties: *ref_30
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /components/{componentId}/offerings:
    get:
      summary: GET /components/{componentId}/offerings
      operationId: listOfferingsByComponentId
      description: Get a list of all offerings for this component, ordered chronologically.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: componentId
          in: path
          description: Component ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_31
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_32
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_33
        - name: q
          in: query
          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
          required: false
          schema: *ref_34
        - name: teachingLanguage
          in: query
          description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.
          required: false
          schema: &ref_47
            type: string
            pattern: ^[a-z]{3}$
            minLength: 3
            maxLength: 3
          example: nld
        - name: resultExpected
          in: query
          description: Filter by resultExpected
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=<today>`).
          required: false
          schema:
            type: string
            format: date
        - name: until
          in: query
          description: Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).
          required: false
          schema:
            type: string
            format: date
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - offeringId
                - name
                - startDateTime
                - endDateTime
                - '-offeringId'
                - '-name'
                - '-startDateTime'
                - '-endDateTime'
            default:
              - startDateTime
            example:
              - offeringId
              - '-startDateTime'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: *ref_35
                    properties: *ref_36
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          allOf: &ref_48
                            - type: object
                              description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
                              required: &ref_41
                                - offeringId
                              properties: &ref_42
                                offeringId:
                                  type: string
                                  description: Unique id of this offering
                                  format: uuid
                                  example: 123e4567-e89b-12d3-a456-134564174000
                            - allOf: &ref_51
                                - type: object
                                  description: Either a program, course or component offering which descrbes the program, course or offering in time
                                  properties: &ref_43
                                    primaryCode:
                                      description: The primary human readable identifier for this offering. This is often the source identifier as defined by the institution.
                                      example:
                                        codeType: offeringCode
                                        code: INFOMQNM-20FS
                                      readOnly: true
                                      type: object
                                      properties: *ref_0
                                      required: *ref_1
                                      additionalProperties: false
                                    offeringType:
                                      type: string
                                      description: The type of this offering
                                      enum:
                                        - program
                                        - course
                                        - component
                                      example: component
                                    academicSession:
                                      description: |
                                        The academicsession during which this offering takes place. [`expandable`](#tag/academic_session_model)
                                        By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.
                                      oneOf:
                                        - title: academicSessionId
                                          type: string
                                          description: An identifier of another resource.
                                          format: uuid
                                        - title: AcademicSession object
                                          type: object
                                          description: |
                                            A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                                            Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                                          required: &ref_37
                                            - academicSessionId
                                            - name
                                            - startDate
                                            - endDate
                                          properties: &ref_38
                                            academicSessionId:
                                              type: string
                                              description: Unique id for this academic session
                                              format: uuid
                                              example: 123e4567-e89b-12d3-a456-426614174000
                                              readOnly: true
                                            academicSessionType:
                                              type: string
                                              description: |
                                                The type of this Academic Session This is an *extensible enumeration*.
                                                - academic year: academic year
                                                - semester: semester, typically there are two semesters per academic year
                                                - trimester: trimester, typically there are three semesters per academic year
                                                - quarter: quarter, typically there are four quarters per academic year
                                                - testing period: a period in which tests take place
                                                - period: any other period in an academic year

                                                Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
                                              example: semester
                                              x-ooapi-extensible-enum: &ref_106
                                                - academic year
                                                - semester
                                                - trimester
                                                - quarter
                                                - testing period
                                                - period
                                            primaryCode:
                                              description: The primary human readable identifier for this academic session. This is often the source identifier as defined by the institution.
                                              example:
                                                codeType: identifier
                                                code: 2012-Q1
                                              type: object
                                              properties: *ref_0
                                              required: *ref_1
                                              additionalProperties: false
                                            name:
                                              type: array
                                              description: The name of this academic session
                                              minItems: 1
                                              items:
                                                type: object
                                                description: A String with an associated language code.
                                                properties: *ref_4
                                                example: *ref_5
                                              example:
                                                - language: en-GB
                                                  value: Fall semester 2020
                                            startDate:
                                              type: string
                                              description: The day on which this academic session starts, RFC3339 (full-date)
                                              format: date
                                              example: '2020-08-17'
                                            endDate:
                                              type: string
                                              description: The day on which this academic session ends, RFC3339 (full-date)
                                              format: date
                                              example: '2020-12-18'
                                            parent:
                                              description: The parent Academicsession of this session (e.g. fall semester 20xx where the current session is a week 40). This object is [`expandable`](#tag/academic_sessions_model)
                                              oneOf:
                                                - title: academicSessionId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: Expanded AcademicSession
                                                  type: object
                                                  description: |
                                                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                                                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                                                  required: *ref_37
                                                  properties: *ref_38
                                            children:
                                              type: array
                                              description: The list of Academicsession children of this Session (e.g. all academic sessions in fall semester 20xx). This object is [`expandable`](#tag/academic_sessions_model)
                                              items:
                                                oneOf:
                                                  - title: academicSessionId
                                                    type: string
                                                    description: An identifier of another resource.
                                                    format: uuid
                                                  - title: Expanded AcademicSession
                                                    type: object
                                                    description: |
                                                      A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                                                      Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                                                    required: *ref_37
                                                    properties: *ref_38
                                            year:
                                              description: The top level year of this session (e.g. 20xx where the current session is a week 40 of a semester). This object is [`expandable`](#tag/academic_sessions_model)
                                              oneOf:
                                                - title: academicSessionId
                                                  type: string
                                                  description: An identifier of another resource.
                                                  format: uuid
                                                - title: Expanded AcademicSession
                                                  type: object
                                                  description: |
                                                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                                                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                                                  required: *ref_37
                                                  properties: *ref_38
                                            otherCodes:
                                              type: array
                                              description: An array of additional human readable codes/identifiers for the entity being described.
                                              items:
                                                type: object
                                                properties: *ref_0
                                                required: *ref_1
                                                additionalProperties: false
                                                example: *ref_8
                                            consumers:
                                              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                              type: array
                                              items:
                                                type: object
                                                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                                required: *ref_11
                                                properties: *ref_12
                                                additionalProperties: true
                                              example: *ref_39
                                            ext:
                                              type: object
                                              description: Object for additional non-standard attributes
                                    name:
                                      type: array
                                      description: The name of this offering
                                      minItems: 1
                                      items:
                                        type: object
                                        description: A String with an associated language code.
                                        properties: *ref_4
                                        example: *ref_5
                                      example:
                                        - language: en-GB
                                          value: Final written test for INFOMQNM for fall semseter 2020
                                        - language: nl-NL
                                          values: Eindtoets vor het vak
                                    abbreviation:
                                      type: string
                                      description: The abbreviation or internal code used to identify this offering
                                      maxLength: 256
                                      example: Test-INFOMQNM-20FS
                                    description:
                                      type: array
                                      description: The description of this offering.
                                      minItems: 1
                                      items:
                                        type: object
                                        description: A String with an associated language code.
                                        properties: *ref_4
                                        example: *ref_5
                                      example:
                                        - language: en-GB
                                          value: |
                                            'Prove in writing knowledge of research methods, including:
                                            Acquire knowledge of HCI research paradigms
                                            Able to design suitable research studies (e.g., choose between within and between subject designs)
                                            Define/apply/design metrics and scales
                                            Define/produce materials (e.g., stimuli and questionnaires)
                                            Define protocols for research studies
                                            Understands and take in account concepts of reliability and validity
                                            Analyze and improve methods and analysis of published scientific articles
                                            Able to deliver scientific reports
                                            Prove in writing knowledge of ­­­statistics, including:
                                            Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates)
                                            Data preparation (e.g., coding and feature selection)
                                            Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors)
                                            Select an appropriate sampling method (e.g., stratified)
                                            Perform parametric tests (e.g., repeated measures (M)ANOVA)
                                            Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'
                                    teachingLanguage:
                                      type: string
                                      description: The (primary) teaching language in which this offering is given, should be a three-letter language code as specified by ISO 639-2.
                                      minLength: 3
                                      maxLength: 3
                                      pattern: ^[a-z]{3}$
                                      example: nld
                                    modeOfDelivery:
                                      type: array
                                      description: |
                                        The mode of delivery of the component (ECTS-mode of delivery)
                                        - distance-learning: afstandsleren
                                        - on campus: op de campus
                                        - online: online
                                        - hybrid: hybride
                                        - situated: op locatie
                                      items: *ref_20
                                    maxNumberStudents:
                                      type: number
                                      description: The maximum number of students allowed to enroll for this offering
                                      format: int32
                                      minimum: 0
                                      example: 200
                                    enrolledNumberStudents:
                                      type: number
                                      description: The number of students that have already enrolled for this offering
                                      format: int32
                                      minimum: 0
                                      example: 150
                                    pendingNumberStudents:
                                      type: number
                                      description: The number of students that have a pending enrollment request for this offering
                                      format: int32
                                      minimum: 0
                                      example: 50
                                    minNumberStudents:
                                      type: number
                                      description: The minimum number of students needed for this offering to proceed
                                      format: int32
                                      minimum: 0
                                      example: 15
                                    resultExpected:
                                      type: boolean
                                      description: |
                                        resultExpected, previously knwon as isLineItem is used so the specific instance of the object is identified as being an element that CAN contain “grade” information.
                                        Offerings do not always have to result in a grade or an other type of result. 
                                        If there is a result expected from a programOffering/courseOffering/componentOffering the is resultExpected field should parse true
                                      example: true
                                    resultValueType:
                                      type: string
                                      description: |
                                        The result value type for this offering
                                        - pass-or-fail = Resultvalue is from valuelist {passed, failed}
                                        - insufficient-satisfactory-good = Resultvalue is from valuelist {insufficient, satisfactory, good}
                                        - US letter = Resultvalue is a letter from A t/m D en F voor fail as in US
                                        - UK letter = Resultvalue is a letter from A t/m G en U voor ungraded/unclassified as in UK
                                        - DE grade = Resultvalue is a letter as used in Germany
                                        - 0-100 = Resultvalue is a number from range (0,100)
                                        - 0-10 = Resultvalue is a number from range (0,10)
                                        - 0.0-10.0 = Resultvalue is a decimal number from range (0.0,10.0)
                                        - referenceLevelRKTR = Resultvalue is a reference level from the Dutch "Referentiekader Taal en Rekenen" from value set {1F, 1S, 2F, 2S, 3F, 3S, 4F, 4S} and additional values like "Op weg naar 1F"
                                        - referenceLevelERK = Resultvalue is a reference level from the "Europees Referencekader voor de talen" from value set {A1, A2, B1, B2, C1, C2}
                                      enum: *ref_40
                                      example: 0-10
                                    link:
                                      type: string
                                      description: URL of this offering's webpage.
                                      format: uri
                                      maxLength: 2048
                                      example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM
                                    otherCodes:
                                      type: array
                                      description: An array of additional human readable codes/identifiers for the entity being described.
                                      items:
                                        type: object
                                        properties: *ref_0
                                        required: *ref_1
                                        additionalProperties: false
                                        example: *ref_8
                                    consumers:
                                      type: array
                                      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                      items: &ref_111
                                        anyOf:
                                          - type: object
                                            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                            required: *ref_11
                                            properties: *ref_12
                                            additionalProperties: true
                                          - type: object
                                            description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome
                                            required: &ref_107
                                              - registrationStatus
                                              - requiredPermissionRegistration
                                              - consumerKey
                                            properties: &ref_108
                                              consumerKey:
                                                type: string
                                              explanationRequiredPermission:
                                                type: string
                                                description: |
                                                  toelichtingVereisteToestemming
                                                  Is een tekstuele toelichting op de voor aanmelding vereiste toestemming van de onderwijsaanbieder
                                              requiredPermissionRegistration:
                                                type: string
                                                description: |
                                                  toestemmingVereistVoorAanmelding
                                                  Geeft aan of een aspirant-student voor een bepaald cohort van een aangeboden opleiding toestemming van de onderwijsaanbieder nodig heeft om zich aan te mogen melden.
                                                  - yes: JA
                                                  - no: NEE
                                                enum:
                                                  - 'yes'
                                                  - 'no'
                                              registrationStatus:
                                                type: string
                                                description: |
                                                  cohortStatus
                                                  De toegestane waarden voor de status van een cohort van een aangeboden opleiding. Hiermee kan bijvoorbeeld worden aangegeven of een bepaald cohort open staat voor aanmelding, of dat het gesloten is.
                                                enum:
                                                  - open
                                                  - closed
                                          - type: object
                                            description: NL-TEST-ADMIN add-on attributes to the offerings
                                            required: &ref_109
                                              - offeringState
                                              - consumerKey
                                            properties: &ref_110
                                              consumerKey:
                                                type: string
                                              duration:
                                                type: string
                                                description: |
                                                  To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4
                                                  The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
                                                  For easy info https://en.wikipedia.org/wiki/ISO_8601#Durations
                                                pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
                                                example: P1DT30H4S
                                              lastPossibleStartDateTime:
                                                type: string
                                                description: The moment on which this offering starts, RFC3339 (date-time)
                                                format: date-time
                                                example: '2020-12-15T08:50:00+01:00'
                                              startOptions:
                                                type: string
                                                description: |
                                                  type of start that is allowed
                                                enum:
                                                  - individualStart
                                                  - triggeredStart
                                              durationFrom:
                                                type: string
                                                description: |
                                                  determine how to determine the start moment for the component
                                                enum:
                                                  - startDateTime
                                                  - individualStartDateTime
                                                  - triggeredStartDateTime
                                              durationUntil:
                                                type: string
                                                description: |
                                                  determine how the length of the component should be determined (fixed endpoint or based on the duration)
                                                enum:
                                                  - testDuration
                                                  - endDateTime
                                              safety:
                                                type: array
                                                description: |
                                                  safety
                                                  See https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/5.
                                                  TODO : make list
                                                items:
                                                  type: string
                                                  enum:
                                                    - securedComputer
                                                    - fixedLocation
                                                    - surveillance
                                              offeringState:
                                                type: string
                                                description: |
                                                  offeringState
                                                  enum to indicate the state of the offering
                                                enum:
                                                  - active
                                                  - canceled
                                              locationCode:
                                                type: string
                                                example: A-12a
                                                description: |
                                                  locationCode
                                                  string to indicate test room/space (for recognition, we will not use the location structure from OOAPI)
                                              irregularities:
                                                type: string
                                                example: There was a lot of noise from the construction site nearby
                                                description: |
                                                  irregularities
                                                  string with information about irragularies that effected all students in this offering
                                              finalResultAllowed:
                                                type: boolean
                                                example: true
                                                description: |
                                                  depicting wether it is allowed to send either a final result or a perliminary result to the SIS. 
                                                  To allow for final results to be delivered to the Student Information System the value should be true. 
                                                  If set to false only other than final results can be delivered (e.g. temporary/intermediate/draft/etc.)
                                              testsToBeUsed:
                                                type: array
                                                items:
                                                  type: object
                                                  description: |
                                                    A list of references to a specific test that can be used to validate the students achievements.
                                                    This attribute SHOULD only be used in case of a component offering (and is only used in Flow 1)
                                                  properties:
                                                    testProvider:
                                                      description: The name of the organisation that is supplying the test.
                                                      type: string
                                                    componentId:
                                                      description: the UUID of the test in the testing system of the suppier.
                                                      type: string
                                                  example:
                                                    testProvider: MBO-NED
                                                    componentId: dfc9d973-42cf-46f3-bd18-f9b50492cdb5
                                              cohort:
                                                type: string
                                                example: 2022-2023
                                                description: |
                                                  The realisation of an educational element with its own starting and end period added with specific Education and examination Rules (OER) and enrollment requirements
                                              location:
                                                type: string
                                                example: Campus Groningen
                                                description: |
                                                  The location where the (Program) offering of the student takes place. Abbreviation of the location as provided to RIO
                                              documents:
                                                type: array
                                                items:
                                                  type: object
                                                  description: |
                                                    documents that are relevant to this offering including the ID, Type ans Name to facilitate file handeling in downloading.
                                                  properties:
                                                    documentId:
                                                      description: the UUID of the document in the system of the suppier.
                                                      type: string
                                                    documentType:
                                                      description: |
                                                        The sort of document, this facilitates the document flow 
                                                        enum of the document sort
                                                      enum:
                                                        - sessionReport
                                                        - attendanceReport
                                                        - assessmentModel
                                                        - other
                                                    documentName:
                                                      description: the proposed file name of the document in the system of the suppier.
                                                      type: string
                                                  example:
                                                    documentId: dfc9d973-42cf-46f3-bd18-f9b50492cdb5
                                                    documentType: sessionReport
                                                    documentName: Session report on Session tbd.pdf
                                      example: &ref_112
                                        - consumerKey: NL-TEST-ADMIN
                                          duration: P1DT30H4S
                                          lastPossibleStartDateTime: '2020-12-15T08:50:00'
                                          startOptions: individualStart
                                          durationFrom: individualStartDateTime
                                          durationUntil: testDuration
                                          safety:
                                            - securedComputer
                                            - fixedLocation
                                          offeringState: active
                                          locationCode: A-12a
                                          testToBeUsed:
                                            - testProvider: MBO-NED
                                              componentId: dfc9d973-42cf-46f3-bd18-f9b50492cdb5
                                          irregularities: There was a lot of noise from the construction site nearby
                                          documents:
                                            - documentId: 454566464665355500
                                              documentType: sessionReport
                                              documentName: Session report on Session tbd.pdf
                                    ext:
                                      type: object
                                      description: Object for additional non-standard attributes
                                - properties:
                                    startDateTime:
                                      type: string
                                      description: The moment on which this offering starts, RFC3339 (date-time)
                                      format: date-time
                                      example: '2020-12-15T20:00:00+01:00'
                                    endDateTime:
                                      type: string
                                      description: The moment on which this offering ends, RFC3339 (date-time)
                                      format: date-time
                                      example: '2020-12-16T20:00:00+01:00'
                                    enrollStartDate:
                                      type: string
                                      description: The first day on which a student can enroll for this course.
                                      format: date
                                    enrollEndDate:
                                      type: string
                                      description: The last day on which a student can enroll for this course.
                                      format: date
                                    resultWeight:
                                      type: integer
                                      description: The result weight of this offering
                                      minimum: 0
                                      maximum: 100
                                      example: 100
                                    addresses:
                                      type: array
                                      description: Addresses for this offering
                                      items:
                                        type: object
                                        description: The full street address
                                        required: *ref_6
                                        properties: *ref_7
                                    priceInformation:
                                      type: array
                                      description: Price information for this offering.
                                      items:
                                        type: object
                                        required: &ref_44
                                          - costType
                                        properties: &ref_45
                                          costType:
                                            type: string
                                            description: |
                                              The type of the cost. This is an *extensible enumeration*.

                                              The following values have been defined in the specification:
                                                - `STAP eligible`: the costs that a student can get STAP subsidy for
                                                - `total costs`: the total costs that a student is to pay to follow this offering

                                              Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
                                            example: total costs
                                            x-ooapi-extensible-enum: &ref_113
                                              - STAP eligible
                                              - total costs
                                          amount:
                                            type: string
                                            pattern: ^\d+(?:\.\d+)?$
                                            description: The total amount of the cost as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
                                            example: '340.84'
                                          vatAmount:
                                            type: string
                                            pattern: ^\d+(?:\.\d+)?$
                                            description: The part of the cost that is VAT, as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
                                            example: '40'
                                          amountWithoutVat:
                                            type: string
                                            pattern: ^\d+(?:\.\d+)?$
                                            description: The part of the cost that is non-VAT. as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
                                            example: '300.84'
                                          currency:
                                            type: string
                                            description: The currency this cost is in. Should correspond to one of the currency codes from ISO 4217.
                                            example: EUR
                                          displayAmount:
                                            type: array
                                            items:
                                              type: object
                                              description: A String with an associated language code.
                                              properties: *ref_4
                                              example: *ref_5
                                            description: An array of optional pre-formatted strings in different locales. Clients can choose to use this string instead of rendering their own based on the current locale of the user.
                                            example:
                                              - language: nl-NL
                                                value: €380,84
                                              - language: en-US
                                                value: $401.17
                                          ext:
                                            type: object
                                            description: Object for additional non-standard attributes
                                        additionalProperties: false
                                    room:
                                      type: object
                                      description: An area within a building where education can take place
                                      required: &ref_52
                                        - roomId
                                        - roomType
                                        - name
                                        - primaryCode
                                      properties: &ref_53
                                        roomId:
                                          type: string
                                          description: Unique id for this room
                                          format: uuid
                                          example: 123e4567-e89b-12d3-a456-332114174000
                                        primaryCode:
                                          description: The primary human readable identifier for the room. This is often the source identifier as defined by the institution.
                                          example:
                                            codeType: roomCode
                                            code: Bb4.54
                                          type: object
                                          properties: *ref_0
                                          required: *ref_1
                                          additionalProperties: false
                                        roomType:
                                          type: string
                                          description: |
                                            The type of this room
                                            - general purpose: algemeen
                                            - lecture room: collegezaal
                                            - computer room: computerruimte
                                            - laboratory: laboratorium
                                            - office: kantoor
                                            - workspace: werkruimte
                                            - exam location: tentamenruimte
                                            - study room: studieruimte
                                            - examination room: onderzoekskamer
                                            - conference room: vergaderkamer
                                          enum: &ref_114
                                            - general purpose
                                            - lecture room
                                            - computer room
                                            - laboratory
                                            - office
                                            - workspace
                                            - exam location
                                            - study room
                                            - examination room
                                            - conference room
                                          example: exam location
                                        abbreviation:
                                          type: string
                                          description: The abbreviation of the name of this room
                                          maxLength: 256
                                          example: Bb4.54
                                        name:
                                          type: array
                                          description: The name of this room
                                          minItems: 1
                                          items:
                                            type: object
                                            description: A String with an associated language code.
                                            properties: *ref_4
                                            example: *ref_5
                                          example:
                                            - language: en-GB
                                              value: Beatrix building room 4.54
                                        description:
                                          type: array
                                          description: The description of this room. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
                                          minItems: 1
                                          items:
                                            type: object
                                            description: A String with an associated language code.
                                            properties: *ref_4
                                            example: *ref_5
                                          example:
                                            - language: en-GB
                                              value: External education and exam room 4.54
                                        totalSeats:
                                          type: integer
                                          format: int32
                                          description: The total number of seats located in the room
                                          example: 300
                                        availableSeats:
                                          type: integer
                                          format: int32
                                          description: The total number of available (=non-reserved) seats in the room
                                          example: 200
                                        floor:
                                          type: string
                                          description: The floor on which this room is located
                                          example: '4'
                                        wing:
                                          type: string
                                          description: The wing in which this room is located
                                          example: None
                                        geolocation:
                                          type: object
                                          description: Geolocation of the entrance of this room (WGS84 coordinate reference system)
                                          required:
                                            - latitude
                                            - longitude
                                          properties:
                                            latitude:
                                              type: number
                                              format: double
                                              example: 52.088255
                                            longitude:
                                              type: number
                                              format: double
                                              example: 5.106669
                                        otherCodes:
                                          type: array
                                          description: An array of additional human readable codes/identifiers for the entity being described.
                                          items:
                                            type: object
                                            properties: *ref_0
                                            required: *ref_1
                                            additionalProperties: false
                                            example: *ref_8
                                        building:
                                          description: |
                                            The building in which the room is located. [`expandable`](#tag/building_model)
                                            By default only the `buildingId` (a string) is returned. If the client requested an expansion of `building` the full building object should be returned.
                                          oneOf:
                                            - title: buildingId
                                              type: string
                                              description: An identifier of another resource.
                                              format: uuid
                                            - title: Building object
                                              type: object
                                              description: An object describing a building and the properties of a building.
                                              required: &ref_115
                                                - buildingId
                                                - name
                                                - address
                                                - primaryCode
                                              properties: &ref_116
                                                buildingId:
                                                  type: string
                                                  description: Unique id of this building
                                                  format: uuid
                                                  example: 123e4567-e89b-12d3-a456-331214174000
                                                primaryCode:
                                                  description: The primary human readable identifier for this building. This is often the source identifier as defined by the institution.
                                                  example:
                                                    codeType: buildingId
                                                    code: '45'
                                                  type: object
                                                  properties: *ref_0
                                                  required: *ref_1
                                                  additionalProperties: false
                                                abbreviation:
                                                  type: string
                                                  description: The abbreviation of the name of this building
                                                  maxLength: 256
                                                  example: Bb
                                                name:
                                                  type: array
                                                  description: The name of this building
                                                  minItems: 1
                                                  items:
                                                    type: object
                                                    description: A String with an associated language code.
                                                    properties: *ref_4
                                                    example: *ref_5
                                                  example:
                                                    - language: en-GB
                                                      value: Beatrix building
                                                description:
                                                  type: array
                                                  description: The description of this building.
                                                  minItems: 1
                                                  items:
                                                    type: object
                                                    description: A String with an associated language code.
                                                    properties: *ref_4
                                                    example: *ref_5
                                                  example:
                                                    - language: en-GB
                                                      value: external rooms location for exams
                                                address:
                                                  type: object
                                                  description: The full street address
                                                  required: *ref_6
                                                  properties: *ref_7
                                                otherCodes:
                                                  type: array
                                                  description: An array of additional human readable codes/identifiers for the entity being described.
                                                  items:
                                                    type: object
                                                    properties: *ref_0
                                                    required: *ref_1
                                                    additionalProperties: false
                                                    example: *ref_8
                                                  example:
                                                    - codeType: bagId
                                                      code: '0344100000139910'
                                                consumers:
                                                  description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                                    required: *ref_11
                                                    properties: *ref_12
                                                    additionalProperties: true
                                                  example: *ref_39
                                                ext:
                                                  type: object
                                                  description: Object for additional non-standard attributes
                                        consumers:
                                          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                          type: array
                                          items:
                                            type: object
                                            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                            required: *ref_11
                                            properties: *ref_12
                                            additionalProperties: true
                                          example: *ref_39
                                        ext:
                                          type: object
                                          description: Object for additional non-standard attributes
                                    component:
                                      description: |
                                        The component that is offered in this componentoffering. [`expandable`](#tag/component_model)
                                        By default only the `componentId` (a string) is returned. If the client requested an expansion of `component` the full component object should be returned.
                                      oneOf:
                                        - title: componentId
                                          type: string
                                          description: An identifier of another resource.
                                          format: uuid
                                        - title: Component object
                                          type: object
                                          description: A component is a part of a course
                                          required: *ref_29
                                          properties: *ref_30
                                    courseOffering:
                                      description: |
                                        The courseoffering where this componentoffering is related to. [`expandable`](#tag/course_offering_model)
                                        By default only the `courseOfferingId` (a string) is returned. If the client requested an expansion of `courseOffering` the full courseOffering object should be returned.
                                      oneOf:
                                        - title: courseOfferingId
                                          type: string
                                          description: An identifier of another resource.
                                          format: uuid
                                        - title: CourseOffering object
                                          allOf: &ref_49
                                            - type: object
                                              description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
                                              required: *ref_41
                                              properties: *ref_42
                                            - allOf: &ref_118
                                                - type: object
                                                  description: Either a program, course or component offering which descrbes the program, course or offering in time
                                                  properties: *ref_43
                                                - properties:
                                                    startDate:
                                                      type: string
                                                      description: The moment on which this offering starts, RFC3339 (full-date)
                                                      format: date
                                                      example: '2019-08-21'
                                                    endDate:
                                                      type: string
                                                      description: The moment on which this offering ends, RFC3339 (full-date)
                                                      format: date
                                                      example: '2019-10-23'
                                                    enrollStartDate:
                                                      type: string
                                                      description: The first day on which a student can enroll for this course.
                                                      format: date
                                                      example: '2019-05-01'
                                                    enrollEndDate:
                                                      type: string
                                                      description: The last day on which a student can enroll for this course.
                                                      format: date
                                                      example: '2019-08-01'
                                                    flexibleEntryPeriodStart:
                                                      type: string
                                                      description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.
                                                      format: date
                                                    flexibleEntryPeriodEnd:
                                                      type: string
                                                      description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.
                                                      format: date
                                                    addresses:
                                                      type: array
                                                      description: Addresses for this offering
                                                      items:
                                                        type: object
                                                        description: The full street address
                                                        required: *ref_6
                                                        properties: *ref_7
                                                    priceInformation:
                                                      type: array
                                                      description: Price information for this offering.
                                                      items:
                                                        type: object
                                                        required: *ref_44
                                                        properties: *ref_45
                                                        additionalProperties: false
                                                    course:
                                                      description: |
                                                        The course that is offered in this courseoffering. [`expandable`](#tag/course_model)
                                                        By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.
                                                      oneOf:
                                                        - title: courseId
                                                          type: string
                                                          description: An identifier of another resource.
                                                          format: uuid
                                                        - title: Course object
                                                          allOf: *ref_46
                                                    programOffering:
                                                      description: |
                                                        The programoffering where this courseoffering is related to. [`expandable`](#tag/program_offering_model)
                                                        By default only the `programOfferingId` (a string) is returned. If the client requested an expansion of `programOffering` the full programOffering object should be returned.
                                                      oneOf:
                                                        - title: programOfferingId
                                                          type: string
                                                          description: An identifier of another resource.
                                                          format: uuid
                                                        - title: ProgramOffering object
                                                          allOf: &ref_50
                                                            - type: object
                                                              description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
                                                              required: *ref_41
                                                              properties: *ref_42
                                                            - allOf: &ref_117
                                                                - type: object
                                                                  description: Either a program, course or component offering which descrbes the program, course or offering in time
                                                                  properties: *ref_43
                                                                - properties:
                                                                    startDate:
                                                                      type: string
                                                                      description: The moment on which this offering starts, RFC3339 (full-date)
                                                                      format: date
                                                                      example: '2019-08-21'
                                                                    endDate:
                                                                      type: string
                                                                      description: The moment on which this offering ends, RFC3339 (full-date)
                                                                      format: date
                                                                      example: '2023-06-15'
                                                                    enrollStartDate:
                                                                      type: string
                                                                      description: The first day on which a student can enroll for this program.
                                                                      format: date
                                                                      example: '2019-05-01'
                                                                    enrollEndDate:
                                                                      type: string
                                                                      description: The last day on which a student can enroll for this program.
                                                                      format: date
                                                                      example: '2019-08-01'
                                                                    flexibleEntryPeriodStart:
                                                                      type: string
                                                                      description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.
                                                                      format: date
                                                                    flexibleEntryPeriodEnd:
                                                                      type: string
                                                                      description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.
                                                                      format: date
                                                                    addresses:
                                                                      type: array
                                                                      description: Addresses for this offering
                                                                      items:
                                                                        type: object
                                                                        description: The full street address
                                                                        required: *ref_6
                                                                        properties: *ref_7
                                                                    priceInformation:
                                                                      type: array
                                                                      description: Price information for this offering.
                                                                      items:
                                                                        type: object
                                                                        required: *ref_44
                                                                        properties: *ref_45
                                                                        additionalProperties: false
                                                                      minItems: 1
                                                                    program:
                                                                      description: |
                                                                        The Program that is offered in this programoffering. [`expandable`](#tag/program_model)
                                                                        By default only the `programId` (a string) is returned. If the client requested an expansion of `program` the full program object should be returned.
                                                                      oneOf:
                                                                        - title: programId
                                                                          type: string
                                                                          description: An identifier of another resource.
                                                                          format: uuid
                                                                        - title: Program object
                                                                          allOf: *ref_27
                                                                    organization:
                                                                      description: |
                                                                        The organization that manages this programeoffering. [`expandable`](#tag/organization_model)
                                                                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                                                      oneOf:
                                                                        - title: organizationId
                                                                          type: string
                                                                          description: An identifier of another resource.
                                                                          format: uuid
                                                                        - title: Organization object
                                                                          type: object
                                                                          description: A description of a group of people working together to achieve a goal
                                                                          required: *ref_9
                                                                          properties: *ref_10
                                                            - type: object
                                                              required:
                                                                - primaryCode
                                                                - offeringType
                                                                - name
                                                                - description
                                                                - teachingLanguage
                                                                - resultExpected
                                                                - startDate
                                                                - endDate
                                                    organization:
                                                      description: |
                                                        The organization that manages this courseoffering. [`expandable`](#tag/organization_model)
                                                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                                      oneOf:
                                                        - title: organizationId
                                                          type: string
                                                          description: An identifier of another resource.
                                                          format: uuid
                                                        - title: Organization object
                                                          type: object
                                                          description: A description of a group of people working together to achieve a goal
                                                          required: *ref_9
                                                          properties: *ref_10
                                            - type: object
                                              required:
                                                - primaryCode
                                                - offeringType
                                                - name
                                                - description
                                                - teachingLanguage
                                                - resultExpected
                                                - startDate
                                                - endDate
                                    organization:
                                      description: |
                                        The organization that manages this componentoffering. [`expandable`](#tag/organization_model)
                                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                                      oneOf:
                                        - title: organizationId
                                          type: string
                                          description: An identifier of another resource.
                                          format: uuid
                                        - title: Organization object
                                          type: object
                                          description: A description of a group of people working together to achieve a goal
                                          required: *ref_9
                                          properties: *ref_10
                            - type: object
                              required:
                                - startDateTime
                                - endDateTime
                                - primaryCode
                                - offeringType
                                - name
                                - description
                                - teachingLanguage
                                - resultExpected
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /offerings:
    get:
      summary: GET /offerings
      operationId: listOfferings
      description: Get a list of all offerings, ordered chronologically.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_31
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_32
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_33
        - name: q
          in: query
          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
          required: false
          schema: *ref_34
        - name: teachingLanguage
          in: query
          description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.
          required: false
          schema: *ref_47
          example: nld
        - name: offeringType
          in: query
          description: Filter by type of offering (offeringType)
          required: false
          schema:
            type: string
            enum:
              - component
              - course
              - program
        - name: resultExpected
          in: query
          description: Filter by resultExpected
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=<today>`).
          required: false
          schema:
            type: string
            format: date
        - name: until
          in: query
          description: Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).
          required: false
          schema:
            type: string
            format: date
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - offeringId
                - name
                - startDateTime
                - endDateTime
                - '-offeringId'
                - '-name'
                - '-startDateTime'
                - '-endDateTime'
            default:
              - startDateTime
            example:
              - offeringId
              - '-startDateTime'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: *ref_35
                    properties: *ref_36
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          anyOf:
                            - allOf: *ref_48
                            - allOf: *ref_49
                            - allOf: *ref_50
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /offerings/{offeringId}:
    get:
      summary: GET /offerings/{offeringId}
      operationId: listOfferingById
      description: Get a single offering.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - program
                - programOffering
                - course
                - courseOffering
                - component
                - organization
                - academicSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - title: componentOffering
                    allOf: *ref_48
              examples:
                Read current state of offering (flow 2.6):
                  value:
                    primaryCode:
                      codeType: offeringCode
                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                    offeringType: component
                    academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125
                    name:
                      - language: nl-NL
                        value: 20220621-12:45-Remindo rekenen MBO-3
                    description:
                      - language: nl-NL
                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                    teachingLanguage: nld
                    modeOfDelivery:
                      - situated
                    resultExpected: true
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        duration: P60M
                        lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'
                        startOptions: individualStart
                        durationFrom: individualStartDateTime
                        durationUntil: testDuration
                        safety:
                          - Fixed Location
                          - Surveillance
                        offeringState: active
                        locationCode: A-22
                    startDateTime: '2022-06-21T12:45:00+01:00'
                    endDateTime: '2022-06-21T13:45:00+01:00'
                    component: c5fca27e-ccc1-430d-9888-90e005ad6a86
                Read current state of offering (flow 2.6 minimal):
                  value:
                    primaryCode:
                      codeType: offeringCode
                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                    offeringType: component
                    name:
                      - language: nl-NL
                        value: 20220621-12:45-Remindo rekenen MBO-3
                    description:
                      - language: nl-NL
                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                    teachingLanguage: nld
                    resultExpected: true
                    startDateTime: '2022-06-21T12:45:00+01:00'
                    endDateTime: '2022-06-21T13:45:00+01:00'
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
    patch:
      summary: PATCH /offerings/{offeringId}
      operationId: partialUpdateOfferingById
      description: |
        PATCH update a single offering based on the offeringID provided. 
      security:
        - openId:
            - offerings.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              title: componentOffering
              allOf: *ref_51
            examples:
              Delete offering (Flow 2.5):
                value:
                  offeringType: component
                  consumers:
                    - consumerKey: NL-TEST-ADMIN
                      offeringState: canceled
              Send attendance and offering report directly (Flow 4.1):
                value:
                  offeringType: component
                  consumers:
                    - consumerKey: NL-TEST-ADMIN
                      irregularities: There was a lot of noise from the construction site nearby.
                      documents:
                        - documentId: '454566464665355545'
                          documentType: sessionReport
                          documentName: Session report on Session tbd.pdf
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
    put:
      summary: PUT /offerings/{offeringId}
      operationId: replaceOfferingById
      description: |
        PUT / create an offering  or update a single offering based on the offeringID provided. 
        You want to PUT a resource to the same URI you intend to GET it from. also check RFC 72314.3.4 PUT.
      security:
        - openId:
            - offerings.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: componentOffering
              allOf: &ref_119
                - type: object
                  description: Either a program, course or component offering which descrbes the program, course or offering in time
                  properties: *ref_43
                - type: object
                  required:
                    - startDateTime
                    - endDateTime
                    - primaryCode
                    - offeringType
                    - name
                    - description
                    - teachingLanguage
                    - resultExpected
                  properties:
                    startDateTime:
                      type: string
                      description: The moment on which this offering starts, RFC3339 (date-time)
                      format: date-time
                      example: '2020-12-15T20:00:00+01:00'
                    endDateTime:
                      type: string
                      description: The moment on which this offering ends, RFC3339 (date-time)
                      format: date-time
                      example: '2020-12-16T20:00:00+01:00'
                    enrollStartDate:
                      type: string
                      description: The first day on which a student can enroll for this course.
                      format: date
                    enrollEndDate:
                      type: string
                      description: The last day on which a student can enroll for this course.
                      format: date
                    resultWeight:
                      type: integer
                      description: The result weight of this offering
                      minimum: 0
                      maximum: 100
                      example: 100
                    addresses:
                      type: array
                      description: Addresses for this offering
                      items:
                        type: object
                        description: The full street address
                        required: *ref_6
                        properties: *ref_7
                    priceInformation:
                      type: array
                      description: Price information for this offering.
                      items:
                        type: object
                        required: *ref_44
                        properties: *ref_45
                        additionalProperties: false
                    room:
                      type: object
                      description: An area within a building where education can take place
                      required: *ref_52
                      properties: *ref_53
                    component:
                      description: |
                        The component that is offered in this componentoffering. [`expandable`](#tag/component_model)
                        By default only the `componentId` (a string) is returned. If the client requested an expansion of `component` the full component object should be returned.
                      oneOf:
                        - title: componentId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Component object
                          type: object
                          description: A component is a part of a course
                          required: *ref_29
                          properties: *ref_30
                    courseOffering:
                      description: |
                        The courseoffering where this componentoffering is related to. [`expandable`](#tag/course_offering_model)
                        By default only the `courseOfferingId` (a string) is returned. If the client requested an expansion of `courseOffering` the full courseOffering object should be returned.
                      oneOf:
                        - title: courseOfferingId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: CourseOffering object
                          allOf: *ref_49
                    organization:
                      description: |
                        The organization that manages this componentoffering. [`expandable`](#tag/organization_model)
                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                      oneOf:
                        - title: organizationId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Organization object
                          type: object
                          description: A description of a group of people working together to achieve a goal
                          required: *ref_9
                          properties: *ref_10
            examples:
              Create offering (zitting) without students (flow 2.1):
                value:
                  primaryCode:
                    codeType: offeringCode
                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                  offeringType: component
                  academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125
                  name:
                    - language: nl-NL
                      value: 20220621-12:45-Remindo rekenen MBO-3
                  description:
                    - language: nl-NL
                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                  teachingLanguage: nld
                  modeOfDelivery:
                    - situated
                  resultExpected: true
                  consumers:
                    - consumerKey: NL-TEST-ADMIN
                      duration: P60M
                      lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'
                      startOptions: individualStart
                      durationFrom: individualStartDateTime
                      durationUntil: testDuration
                      safety:
                        - Fixed Location
                        - Surveillance
                      offeringState: active
                      locationCode: A-22
                  startDateTime: '2022-06-21T12:45:00+01:00'
                  endDateTime: '2022-06-21T13:45:00+01:00'
                  component: c5fca27e-ccc1-430d-9888-90e005ad6a86
              Create offering (zitting) without students (flow 2.1 minimal):
                value:
                  primaryCode:
                    codeType: offeringCode
                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                  offeringType: component
                  name:
                    - language: nl-NL
                      value: 20220621-12:45-Remindo rekenen MBO-3
                  description:
                    - language: nl-NL
                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                  teachingLanguage: nld
                  resultExpected: true
                  startDateTime: '2022-06-21T12:45:00+01:00'
                  endDateTime: '2022-06-21T13:45:00+01:00'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /offerings/{offeringId}/associations:
    get:
      summary: GET /offerings/{offeringId}/associations
      operationId: listAssociationsByOfferingId
      description: Get a list of all offering associations.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_31
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_32
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_33
        - name: associationType
          in: query
          description: Filter by association type
          required: false
          schema:
            type: string
            enum:
              - programOfferingAssociation
              - courseOfferingAssociation
              - componentOfferingAssociation
        - name: role
          in: query
          description: Filter by role
          required: false
          schema:
            type: string
            description: |
              The role of this person associated with the offering
                - student: student
                - lecturer: docent
                - teaching assistant: studentassistent
                - coordinator: coördinator
                - guest: gast
                - invigilator: surveillant
                - assessor: beoordelaar
            enum: &ref_54
              - student
              - lecturer
              - teaching assistant
              - coordinator
              - guest
              - invigilator
              - assessor
            example: student
        - name: state
          in: query
          description: Filter by state
          required: false
          schema:
            type: string
            description: The state of this association
            enum: &ref_55
              - pending
              - canceled
              - denied
              - associated
              - queued
              - finished
            example: associated
        - name: result-state
          in: query
          description: Filter by result state
          required: false
          schema:
            type: string
            description: The state of this result
            enum: &ref_56
              - in progress
              - postponed
              - completed
              - queued
            example: completed
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - associationId
                - '-associationId'
            default:
              - associationId
            example:
              - associationId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: *ref_35
                    properties: *ref_36
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          oneOf:
                            - allOf: &ref_131
                                - allOf: &ref_57
                                    - type: object
                                      properties: &ref_65
                                        associationId:
                                          type: string
                                          description: Unique id of this association
                                          format: uuid
                                          example: 123e4567-e89b-12d3-a456-426614174000
                                          readOnly: true
                                      required: &ref_66
                                        - associationId
                                    - type: object
                                      description: A relationship between a person object and an offering
                                      properties: &ref_125
                                        associationType:
                                          type: string
                                          description: The type of this association
                                          enum:
                                            - programOfferingAssociation
                                            - courseOfferingAssociation
                                            - componentOfferingAssociation
                                          example: componentOfferingAssociation
                                        role:
                                          type: string
                                          description: |
                                            The role of this person associated with the offering
                                              - student: student
                                              - lecturer: docent
                                              - teaching assistant: studentassistent
                                              - coordinator: coördinator
                                              - guest: gast
                                              - invigilator: surveillant
                                              - assessor: beoordelaar
                                          enum: *ref_54
                                          example: student
                                        state:
                                          type: string
                                          description: The state of this association
                                          enum: *ref_55
                                          example: associated
                                        remoteState:
                                          writeOnly: true
                                          type: string
                                          description: The state of this association for the institution performing the request.
                                          enum: &ref_120
                                            - pending
                                            - canceled
                                            - denied
                                            - associated
                                            - queued
                                            - finished
                                          example: associated
                                        consumers:
                                          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                          type: array
                                          items: &ref_123
                                            anyOf:
                                              - type: object
                                                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                                required: *ref_11
                                                properties: *ref_12
                                                additionalProperties: true
                                              - type: object
                                                description: NL-TEST-ADMIN add-on attributes to the Association
                                                required: &ref_121
                                                  - consumerKey
                                                properties: &ref_122
                                                  consumerKey:
                                                    type: string
                                                  startUpURL:
                                                    type: string
                                                    description: |
                                                      URL to be used to start this assocation by the user
                                                    format: uri
                                                    maxLength: 2048
                                                  additionalTimeInMin:
                                                    type: integer
                                                    format: int32
                                                    description: |
                                                      If you need additional time, specify how much max
                                                      To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4
                                                  personalNeeds:
                                                    type: array
                                                    items:
                                                      type: string
                                                    minItems: 0
                                                    description: |
                                                      personalNeed
                                                      personalNeed to be added for this student
                                                      TODO : make enum: see https://www.imsglobal.org/sites/default/files/spec/afa/3p0/information_model/imsafa3p0pnp_v1p0_InfoModel.html
                                                      examples : "extraTime", "spoken", "spell-checker-on-screen"
                                                  attempt:
                                                    type: integer
                                                    description: |
                                                      Which attempt this is for the given person on the given offering
                                                    format: int32
                                                  attemptLeft:
                                                    type: integer
                                                    description: |
                                                      The number of attempts still remain for the person to obtain a result on the given offering
                                                    format: int32
                                                  programOfferingAssociationId:
                                                    type: string
                                                    description: |
                                                      The unique identifier of the enrollment of the student in a programOffering on the behalf of the current assocation is taking place 
                                                    format: uuid
                                                  courseOfferingAssociationId:
                                                    type: string
                                                    description: |
                                                      The unique identifier of the enrollment of the student in a courseOffering on the behalf of the current assocation is taking place 
                                                    format: uuid
                                                  orgAssociationId:
                                                    type: string
                                                    description: |
                                                      The original UUID under which the Student information System provided the assocaition. This element is only needed at pass back to the SIS 
                                                    format: uuid
                                                  startDate:
                                                    type: string
                                                    description: The day on which this academic session starts, RFC3339 (full-date)
                                                    format: date
                                                    example: '2020-08-17'
                                                  expectedEndDate:
                                                    type: string
                                                    description: The day on which this academic session ends, RFC3339 (full-date)
                                                    format: date
                                                    example: '2025-07-31'
                                                  finalEndDate:
                                                    type: string
                                                    nullable: true
                                                    description: The day on which this academic session ends, RFC3339 (full-date)
                                                    format: date
                                                    example: 'null'
                                                  sequenceCode:
                                                    type: string
                                                    description: |
                                                      The transaction number for the person within the SIS for example the loopbaannummer or an opleidingsblad 
                                                    format: uuid
                                          example: &ref_124
                                            - consumerKey: NL-TEST-ADMIN
                                              attendance: notKnown
                                              additionalTimeInMin: 30
                                              personalNeeds:
                                                - extraTime
                                                - spoken
                                                - spell-checker-on-screen
                                              attempt: 1
                                              attemptLeft: 2
                                              programOfferingAssociationId: 54e58f68-ceac-4845-99d5-caa721fefb88
                                              courseOfferingAssociationId: 170b5f35-20be-47bf-96ff-d262d121b76b
                                              orgAssociationId: 123c6f59-21wg-47bf-96ff-d262d133c51g
                                              startDate: '2021-09-01'
                                              expectedEndDate: '2025-07-31'
                                              finalEndDate: null
                                              sequenceCode: '1.2'
                                        ext:
                                          type: object
                                          description: Object for additional non-standard attributes
                                - type: object
                                  properties:
                                    result:
                                      allOf: &ref_61
                                        - type: object
                                          description: A result as part of an association
                                          required: &ref_58
                                            - state
                                            - resultDate
                                          properties: &ref_59
                                            state:
                                              type: string
                                              description: The state of this result
                                              enum: *ref_56
                                              example: completed
                                            pass:
                                              type: string
                                              description: The state of this result
                                              enum: &ref_126
                                                - unknown
                                                - passed
                                                - failed
                                              example: passed
                                            comment:
                                              type: string
                                              description: The comment on this result
                                            score:
                                              type: string
                                              description: The score of this program/course/component association (based on resultValueType in offering)
                                              example: '9'
                                            resultDate:
                                              type: string
                                              description: The date this result has been published, RFC3339 (full-date)
                                              format: date
                                              example: '2020-09-28'
                                            consumers:
                                              type: array
                                              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                                              items: &ref_129
                                                anyOf:
                                                  - type: object
                                                    description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                                                    required: *ref_11
                                                    properties: *ref_12
                                                    additionalProperties: true
                                                  - type: object
                                                    description: NL-TEST-ADMIN add-on attributes to the result
                                                    required: &ref_127
                                                      - attendance
                                                      - consumerKey
                                                    properties: &ref_128
                                                      consumerKey:
                                                        type: string
                                                      attendance:
                                                        type: string
                                                        description: |
                                                          attendance
                                                          indication of presence during the test (mandatory). 
                                                          Possible values are:
                                                          notKnown (toetsmoment alleen gepland, moment nog niet gestart, nog geen aanwezigheidstoets mogelijk)
                                                          notPresent (niet aanwezig),
                                                          notStarted (aanwezig maar niet gestart),
                                                          notFinished (aanwezig en gestart maar niet afgerond/ingeleverd)
                                                          and present (aanwezig en afgerond/ingeleverd)"
                                                        enum:
                                                          - notKnown
                                                          - notPresent
                                                          - notStarted
                                                          - notFinished
                                                          - present
                                                      executedOfferingName:
                                                        type: string
                                                        description: |
                                                          Name of the actual offering variant the result belongs to. 
                                                          The variant of the test can be different based on the algoritm of the Test System.
                                                          This information is also needed for future attempts, so not to repeat tests.  
                                                      assessorId:
                                                        type: string
                                                        description: |
                                                          assessorId
                                                          the identity of the assessor. 
                                                      assessorCode:
                                                        type: string
                                                        description: |
                                                          assessorCode
                                                          the identity code of the assessor. 
                                                      irregularities:
                                                        type: string
                                                        description: |
                                                          irregularities: textual information about the student test, such as irregularities
                                                        example: student cheated and 15 min late
                                                      final:
                                                        type: boolean
                                                        description: |
                                                          final: indicates that the result has been finalised by the exam committee. 
                                                          Can be done in Toetsplanning (or even DR), so most Toetsafname applications will send false. (optional, default false) 
                                                      rawScore:
                                                        type: integer
                                                        description: |
                                                          The number of points scored by a person on which the result could be calculated. 
                                                          The raw score provides additional insight in the achievement of the person. 
                                                          The raw score also needs the value of maxRawScore to provide necassary context.
                                                      maxRawScore:
                                                        type: integer
                                                        description: |
                                                          The maximum number of points a person could achieve for this result.
                                                          The max raw score also needs the value of rawScore to provide the actual score to make calculations possible.      
                                                      testDate:
                                                        type: string
                                                        description: The moment on which the test/assessment took place, RFC3339 (date-time)
                                                        format: date-time
                                                        example: '2020-12-15T08:50:00+01:00'
                                                      documents:
                                                        type: array
                                                        items:
                                                          type: object
                                                          description: |
                                                            documents that are relevant for this result including the ID, Type and Name to facilitate file handeling in downloading.
                                                          properties:
                                                            documentId:
                                                              description: the UUID of the document in the system of the suppier.
                                                              type: string
                                                            documentType:
                                                              description: |
                                                                identifies the kind of document; supported values: "assessmentForm" (beoordelingformulier), "assessmentFormWithAnswers" (answers with assessment notes), "assessmentModel" (beoordelingsmodel/-voorschrift), "other" (any document not suitable for the other values).
                                                              enum:
                                                                - assessmentForm
                                                                - assessmentFormWithAnswers
                                                                - assessmentModel
                                                                - other
                                                            documentName:
                                                              description: the proposed file name of the document in the system of the suppier.
                                                              type: string
                                                          example:
                                                            documentId: dfc9d973-42cf-46f3-bd18-q8z23456ert9
                                                            documentType: assessmentForm
                                                            documentName: assessmentFrom on test information analysis qw12.pdf
                                              example: &ref_130
                                                - consumerKey: NL-TEST-ADMIN
                                                  attendance: present
                                                  executedOfferingName: variant12_Nederlands2F
                                                  assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
                                                  assessorCode: JAJE
                                                  irregularities: student cheated and 15 min late
                                                  final: true
                                                  documents:
                                                    - documentId: 123454
                                                      documentType: assessmentForm
                                                      documentName: Assessment form for Jake Doe.pd
                                            ext:
                                              type: object
                                              description: Object for additional non-standard attributes
                                        - type: object
                                          required:
                                            - studyLoad
                                          properties:
                                            studyLoad:
                                              type: object
                                              description: The amount of effort to complete this education in the specified unit.
                                              properties: *ref_22
                                              example: *ref_23
                                    person:
                                      description: The person this association is to
                                      allOf: *ref_28
                                    offering:
                                      description: The offering this association is for
                                      allOf: &ref_60
                                        - type: object
                                          description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
                                          required: *ref_41
                                          properties: *ref_42
                                        - type: object
                                          description: Either a program, course or component offering which descrbes the program, course or offering in time
                                          properties: *ref_43
                            - allOf: &ref_132
                                - allOf: *ref_57
                                - type: object
                                  properties:
                                    result:
                                      allOf: &ref_62
                                        - type: object
                                          description: A result as part of an association
                                          required: *ref_58
                                          properties: *ref_59
                                        - type: object
                                          required:
                                            - studyLoad
                                          properties:
                                            studyLoad:
                                              type: object
                                              description: The amount of effort to complete this education in the specified unit.
                                              properties: *ref_22
                                              example: *ref_23
                                    person:
                                      description: The person this association is to
                                      allOf: *ref_28
                                    offering:
                                      description: The offering this association is for
                                      allOf: *ref_60
                            - allOf: &ref_134
                                - allOf: &ref_63
                                    - allOf: &ref_64
                                        - allOf: *ref_57
                                        - type: object
                                          properties:
                                            result:
                                              allOf: &ref_133
                                                - type: object
                                                  description: A result as part of an association
                                                  required: *ref_58
                                                  properties: *ref_59
                                                - type: object
                                                  required:
                                                    - weight
                                                  properties:
                                                    weight:
                                                      type: integer
                                                      description: The weight to 100 as total for this offering in the course
                                                      format: int32
                                                      minimum: 0
                                                      maximum: 100
                                                      example: 100
                                    - type: object
                                      required:
                                        - associationType
                                        - role
                                        - state
                              properties: &ref_135
                                person:
                                  readOnly: true
                                  oneOf:
                                    - title: personId
                                      type: string
                                      description: An identifier of another resource.
                                      format: uuid
                                    - title: Person
                                      allOf: *ref_28
                                offering:
                                  oneOf:
                                    - title: offeringId
                                      type: string
                                      description: An identifier of another resource.
                                      format: uuid
                                    - title: ComponentOffering
                                      allOf: *ref_48
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /documents/{documentId}:
    get:
      summary: GET /documents/{documentId}
      operationId: listDocumentById
      description: Get the binary data from a document.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - documents
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
              examples:
                file-download:
                  description: File download
                  summary: File download
                  value: <raw data>
          description: OK
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /associations/{associationId}:
    get:
      summary: GET /associations/{associationId}
      description: |
        Get a single association.
      operationId: listAssociationById
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - person
                - offering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf: &ref_138
                  - allOf: &ref_136
                      - allOf: *ref_57
                      - type: object
                        properties:
                          result:
                            allOf: *ref_61
                  - allOf: &ref_137
                      - allOf: *ref_57
                      - type: object
                        properties:
                          result:
                            allOf: *ref_62
                  - allOf: *ref_63
                properties: &ref_139
                  person:
                    readOnly: true
                    oneOf:
                      - title: personId
                        type: string
                        description: An identifier of another resource.
                        format: uuid
                      - title: Person
                        allOf: *ref_28
                  offering:
                    oneOf:
                      - title: offeringId
                        type: string
                        description: An identifier of another resource.
                        format: uuid
                      - title: ComponentOffering
                        allOf: *ref_48
                      - title: CourseOffering
                        allOf: *ref_49
                      - title: ProgramOffering
                        allOf: *ref_50
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
    patch:
      summary: PATCH /associations/{associationId}
      operationId: partialUpdateAssociationById
      description: |
        Update the status or result of an enrollment. Other elements of the association object COULD 
        also be PATCHED. But are not likely and have therefor not been included in this endpoint.
        Implementation of the PATCH activity is based on use PATCH with JSON Merge Patch standard, 
        a specialized media type `application/merge-patch+json` for partial resource representation 
        to update parts of resource objects.
      security:
        - openId:
            - associations.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: The id of the association to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              allOf:
                - allOf: &ref_143
                    - allOf: *ref_64
                  properties: &ref_144
                    person:
                      oneOf:
                        - title: personId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Person
                          allOf: *ref_28
                    offering:
                      oneOf:
                        - title: offeringId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: ComponentOffering
                          allOf: *ref_48
            examples:
              Delete student from offering (flow 2.4):
                value:
                  associationType: componentOfferingAssociation
                  state: canceled
              Send attendance and result directly (flow 3.1):
                value:
                  associationType: componentOfferingAssociation
                  result:
                    state: completed
                    pass: unknown
                    comment: string
                    score: '9'
                    resultDate: '2022-09-28'
                    weight: 100
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        attendance: present
                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
                        assessorCode: JAJE
                        irregularities: Jantje heeft gespiekt
                        final: true
                        documents:
                          - documentId: 123454
                            documentType: assessmentForm
                            documentName: Assessment form for Jake Doe.pdf
              Send attendance for student directly (flow 3.2.A):
                value:
                  associationType: componentOfferingAssociation
                  result:
                    state: in progress
                    resultDate: '2022-09-27'
                    weight: 100
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        attendance: present
              Send result for student (flow 3.2.B):
                value:
                  associationType: componentOfferingAssociation
                  result:
                    state: completed
                    pass: unknown
                    comment: string
                    score: '9'
                    resultDate: '2022-11-18'
                    weight: 100
                    consumers:
                      - consumerKey: NL-TEST-ADMIN
                        attendance: present
                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
                        assessorCode: JAJE
                        irregularities: Jantje heeft gespiekt
                        final: true
                        documents:
                          - documentId: 123454
                            documentType: assessmentForm
                            documentName: Assessment form for Jake Doe.pdf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties: *ref_65
                    required: *ref_66
                  - type: object
                    description: A system message as a response to a POST message
                    required: &ref_145
                      - message
                    properties: &ref_146
                      message:
                        description: information displayed to user
                        type: array
                        minItems: 1
                        items:
                          type: object
                          description: A String with an associated language code.
                          properties: *ref_4
                          example: *ref_5
                        example:
                          - language: en-GB
                            value: Your enrollment was partly succesful, you have been placed on the waitinglist
                      redirect:
                        description: URL where additional information can be found e.g. by use of deeplink
                        type: string
                        format: uri
                  - properties:
                      state:
                        type: string
                        description: The state of this association
                        enum: *ref_55
                        example: associated
        '400':
          description: Bad request
          content: *ref_13
    put:
      summary: PUT /associations/{associationId}
      description: |
        PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. 
      operationId: replaceAssociationById
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - allOf: &ref_140
                    - allOf: *ref_64
                    - type: object
                      required:
                        - role
                        - state
                        - associationType
                  required: &ref_141
                    - person
                    - offering
                  properties: &ref_142
                    person:
                      oneOf:
                        - title: personId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Person
                          allOf: *ref_28
                    offering:
                      oneOf:
                        - title: offeringId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: ComponentOffering
                          allOf: *ref_48
            examples:
              Add student to created offering (zitting) (flow 2.2.B and 2.3):
                value:
                  associationType: componentOfferingAssociation
                  role: student
                  state: associated
                  consumers:
                    - consumerKey: NL-TEST-ADMIN
                      startUpURL: https://myComponent.nl?test
                      extraTimeInMin: 30
                      personalNeeds:
                        - extraTime
                        - spoken
                        - spell-checker-on-screen
                  person:
                    personId: 111-2222-33-4444-222
                    primaryCode:
                      codeType: studentNumber
                      code: '1234567'
                    givenName: Maartje
                    preferredName: Maar
                    surnamePrefix: van
                    surname: Damme
                    displayName: Maartje van Damme
                    activeEnrollment: true
                    affiliations:
                      - student
                    mail: vandamme.mcw@student.roc.nl
                    languageOfChoice:
                      - nl-NL
                    otherCodes:
                      - codeType: accountId
                        code: s1234567@student.roc.nl
                      - codeType: eckid
                        code: https://roc.nl/8078d3...28bc85
                  offering: 123e4567-e89b-12d3-a456-134564174000
              Change student enrollment to offering (zitting) (flow 2.x):
                value:
                  associationType: componentOfferingAssociation
                  role: student
                  state: associated
                  consumers:
                    - consumerKey: NL-TEST-ADMIN
                      startUpURL: https://myComponent.nl?test
                      extraTimeInMin: 30
                      personalNeeds:
                        - extraTime
                        - spoken
                        - spell-checker-on-screen
                  person: 111-2222-33-4444-222
                  offering: 123e4567-e89b-12d3-a456-134564174000
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /associations/{associationId}/url:
    get:
      summary: GET /associations/{associationId}/url
      description: |
        Get the URL of an association.
      operationId: listAssociationUrl
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: Url containing a web address.
                format: uri
                example: https://www.universiteitvanharderwijk.nl
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /groups:
    get:
      summary: GET /groups
      operationId: listGroups
      security:
        - oAuthFlows:
            - test-admin-flow
      description: Get a list of all groups, ordered by name (ascending).
      tags:
        - groups
      parameters:
        - name: primaryCode
          in: query
          description: The primaryCode of the requested item. This is often the source identifier as defined by the institution.
          required: false
          schema: *ref_67
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_31
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_32
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_33
        - name: q
          in: query
          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
          required: false
          schema: *ref_34
        - name: groupType
          in: query
          description: Filter by group type
          required: false
          schema:
            type: string
            description: |
              The type of this group
              - learning group: A collection of participants carrying out common learning activities
              - class: A collection of participants carrying out jointly scheduled educational activities
              - team: A collection of members of a team, either students, employees or mixed.
            enum: &ref_68
              - learning group
              - class
              - team
            example: learning group
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - groupId
                - name
                - startDate
                - '-groupId'
                - '-name'
                - '-startDate'
            default:
              - name
            example:
              - groupId
              - '-startDate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pageSize
                  - pageNumber
                  - hasPreviousPage
                  - hasNextPage
                  - items
                properties:
                  pageSize:
                    type: integer
                    format: int32
                    description: The number of items per page
                  pageNumber:
                    type: integer
                    format: int32
                    description: The current page number
                  hasPreviousPage:
                    type: boolean
                    description: Whether there is a previous page
                  hasNextPage:
                    type: boolean
                    description: Whether there is a previous page
                  totalPages:
                    type: integer
                    format: int32
                    description: Total number of pages
                  items:
                    type: array
                    items:
                      type: object
                      description: |
                        A group is simply a collection of persons. Groups can be used to accommodate various usecases.

                        Groups MAY optionally have a relation to an Offering, however the meaning of such relations is left unspecified and is left up to the implementer.
                      required: &ref_69
                        - groupId
                        - groupType
                        - name
                        - primaryCode
                      properties: &ref_70
                        groupId:
                          type: string
                          description: Unique id for this group
                          format: uuid
                          example: 123e4567-e89b-12d3-a456-426614174000
                        primaryCode:
                          description: The primary human readable identifier for this group. This is often the source identifier as defined by the institution.
                          example:
                            codeType: groupCode
                            code: group-abc987
                          type: object
                          properties: *ref_0
                          required: *ref_1
                          additionalProperties: false
                        groupType:
                          type: string
                          description: |
                            The type of this group
                            - learning group: A collection of participants carrying out common learning activities
                            - class: A collection of participants carrying out jointly scheduled educational activities
                            - team: A collection of members of a team, either students, employees or mixed.
                          enum: *ref_68
                          example: learning group
                        name:
                          type: array
                          description: The name of this group
                          minItems: 1
                          items:
                            type: object
                            description: A String with an associated language code.
                            properties: *ref_4
                            example: *ref_5
                          example:
                            - language: en-GB
                              value: statistics students
                        description:
                          type: array
                          description: The description of this group
                          minItems: 1
                          items:
                            type: object
                            description: A String with an associated language code.
                            properties: *ref_4
                            example: *ref_5
                          example:
                            - language: en-GB
                              value: The group of students that follow statistics classes
                        startDate:
                          type: string
                          description: The day on which this group starts being active, RFC3339 (full-date)
                          format: date
                          example: '2020-08-17'
                        endDate:
                          type: string
                          description: The day on which this group ends being active, RFC3339 (full-date)
                          format: date
                          example: '2020-12-18'
                        personCount:
                          type: number
                          description: The number of persons that are member of this group
                          format: int32
                          minimum: 0
                          example: 183
                        otherCodes:
                          type: array
                          description: An array of additional human readable codes/identifiers for the entity being described.
                          items:
                            type: object
                            properties: *ref_0
                            required: *ref_1
                            additionalProperties: false
                            example: *ref_8
                        consumers:
                          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                          type: array
                          items:
                            type: object
                            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                            required: *ref_11
                            properties: *ref_12
                            additionalProperties: true
                          example: *ref_39
                        organization:
                          description: |
                            The organization that manages this group. [`expandable`](.#tag/organization_model)
                            By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                          oneOf:
                            - title: organizationId
                              type: string
                              description: An identifier of another resource.
                              format: uuid
                            - title: Expanded organization
                              type: object
                              description: A description of a group of people working together to achieve a goal
                              required: *ref_9
                              properties: *ref_10
                        ext:
                          type: object
                          description: Object for additional non-standard attributes
                  ext:
                    type: object
                    description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /groups/{groupId}:
    get:
      summary: GET /groups/{groupId}
      operationId: listGroupById
      security:
        - oAuthFlows:
            - test-admin-flow
      description: Get a single group.
      tags:
        - groups
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: |
                  A group is simply a collection of persons. Groups can be used to accommodate various usecases.

                  Groups MAY optionally have a relation to an Offering, however the meaning of such relations is left unspecified and is left up to the implementer.
                required: *ref_69
                properties: *ref_70
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '404':
          description: Not Found
          content: *ref_16
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
  /groups/{groupId}/persons:
    get:
      summary: GET /groups/{groupId}/persons
      operationId: listPersonsByGroupId
      security:
        - oAuthFlows:
            - test-admin-flow
      description: Get an ordered list of all persons that are member of a given group, ordered by personId.
      tags:
        - groups
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_31
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_32
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_33
        - name: q
          in: query
          description: Filter by persons having a givenName, surNamePrefix, surname, displayName, initials, mail or secondaryMail containing the given search term (exact partial match, case insensitive)
          required: false
          schema: &ref_147
            type: string
        - name: affiliations
          in: query
          description: Filter by affiliations
          required: false
          schema:
            type: array
            description: |
              The affiliations of this person, the relations a person has with the organization providing this endpoint
              - student: student
              - employee: medewerker
              - guest: gast
            items: *ref_71
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - personId
                - givenName
                - surName
                - displayName
                - '-personId'
                - '-givenName'
                - '-surName'
                - '-displayName'
            default:
              - personId
            example:
              - personId
              - '-givenName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pageSize
                  - pageNumber
                  - hasPreviousPage
                  - hasNextPage
                  - items
                properties:
                  pageSize:
                    type: integer
                    format: int32
                    description: The number of items per page
                  pageNumber:
                    type: integer
                    format: int32
                    description: The current page number
                  hasPreviousPage:
                    type: boolean
                    description: Whether there is a previous page
                  hasNextPage:
                    type: boolean
                    description: Whether there is a previous page
                  totalPages:
                    type: integer
                    format: int32
                    description: Total number of pages
                  items:
                    type: array
                    items:
                      allOf: *ref_28
                  ext:
                    type: object
                    description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_13
        '401':
          description: Unauthorized
          content: *ref_14
        '403':
          description: Forbidden
          content: *ref_15
        '405':
          description: Method not allowed
          content: *ref_17
        '429':
          description: Too many requests
          content: *ref_18
        '500':
          description: Internal Server Error
          content: *ref_19
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.nl/.well-known/openid-configuration
    oAuthFlows:
      type: oauth2
      description: |
        This API uses oauth Cleint credentials for server to server #/components/schemas/EducationSpecification
      flows:
        clientCredentials:
          tokenUrl: https://example.nl/oauth2/authorize
          scopes:
            test-admin-flow: functions needed to allow the transfer of enrollments, persons and offerings between systems in MBO
  schemas:
    PersonId:
      type: object
      properties: *ref_72
      required: *ref_73
    codeType:
      type: string
      description: |
        The code/identifier type. 

        This is an *extensible enumeration*. Use `x-` to prefix custom values

        The predefined values are:
          - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science
          - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)
          - `programCode`: Identifier for the program (collection of courses)
          - `courseCode`: Identifier for the course 
          - `componentCode`: The code for a component (part of a course)
          - `offeringCode`: The code to identify a specific offering (program, course or component offering)
          - `organizationId`: The identifier for the organization
          - `buildingId`: The number or code to identify a building
          - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)
          - `roomCode`: The code for a room
          - `systemId`: Identifier assigned to an entity in context of a specific system
          - `productId`: Identifier assigned to a specific product
          - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA
          - `studentNumber`: Identifier for the student
          - `studielinkNumber`: Identifier for the person as determined by Studielink
          - `esi`: European Student Identifier
          - `userName`: The name of a user
          - `accountId`: Identifier assigned to a specific account
          - `emailAdress`: An email address
          - `groupCode`: The identifier for a group (of persons)
          - `isbn`: International Standard Book Number that serve as product identifiers for Books
          - `issn`: International Standard Book Number that serve as product identifiers for periodicals
          - `orcId`: Open Researcher and Contributor ID
          - `uuid`: A universally unique identifier
          - `schacHome`: Home organization using the domain name of the organization
          - `identifier`: Generic Identifier
          - `eckid`: ID used in the education content chain
          - `nationalEducationCode`: Code used to specify an education with in a country (e.g. RIO opleidingscode for NL) 
      x-ooapi-extensible-enum: *ref_74
      example: identifier
    IdentifierEntry:
      type: object
      properties: *ref_0
      required: *ref_1
      additionalProperties: false
      example: *ref_8
    personAffiliations:
      type: array
      description: |
        The affiliations of this person, the relations a person has with the organization providing this endpoint
        - student: student
        - employee: medewerker
        - guest: gast
      items: *ref_71
    gender:
      type: string
      description: The gender of this person
      enum: *ref_75
      example: F
    addressType:
      type: string
      description: |
        Address type
        - postal: post
        - visit: bezoek
        - deliveries: bezorg
        - billing: factuur
        - teaching: the address where education takes place
      enum: *ref_76
    LanguageTypedString:
      type: object
      description: A String with an associated language code.
      properties: *ref_4
      example: *ref_5
    Ext:
      type: object
      description: Object for additional non-standard attributes
    Address:
      type: object
      description: The full street address
      required: *ref_6
      properties: *ref_7
    ICERelationType:
      type: string
      description: Type of relation between person and In Case of Emergency contact
      enum: *ref_77
      example: partner
    Consumer:
      type: object
      description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
      required: *ref_11
      properties: *ref_12
      additionalProperties: true
    NL-TEST-ADMIN-Person:
      type: object
      description: NL-TEST-ADMIN add-on attributes to the Association
      required: *ref_78
      properties: *ref_79
    ConsumerOnPerson:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: *ref_80
      example: *ref_81
    PersonProperties:
      type: object
      description: A person that has a relationship with this institution
      required: *ref_82
      properties: *ref_83
    Person:
      allOf: *ref_28
    Problem:
      type: object
      description: A system message including the error code and an explanation
      required: *ref_2
      properties: *ref_3
    organizationType:
      type: string
      description: |
        The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.
        - root: the root of this organization, representing the Educational Institution itself
        - institute: instituut
        - department: departement
        - faculty: faculteit
        - branch: vestiging
        - academy: academie
        - school: school
      enum: *ref_84
      example: root
    Identifier:
      type: string
      description: An identifier of another resource.
      format: uuid
    Organization:
      type: object
      description: A description of a group of people working together to achieve a goal
      required: *ref_9
      properties: *ref_10
    componentType:
      type: string
      description: |
        The component type
        - test: tentamen
        - lecture: college
        - practical: practicum
        - tutorial: werkcollege
        - consultation: consultatie
        - project: project
        - workshop: workshop
        - excursion: excursie
        - independent study: zelfstudie
        - external: extern
        - skills training: vaardighedentraining
      enum: *ref_85
      example: test
    modesOfDelivery:
      type: array
      description: |
        The mode of delivery of the component (ECTS-mode of delivery)
        - distance-learning: afstandsleren
        - on campus: op de campus
        - online: online
        - hybrid: hybride
        - situated: op locatie
      items: *ref_20
    CourseId:
      type: object
      description: An object describing the metadata of a course
      required: *ref_86
      properties: *ref_87
    StudyLoadDescriptor:
      type: object
      description: The amount of effort to complete this education in the specified unit.
      properties: *ref_22
      example: *ref_23
    level:
      type: string
      description: |
        The level of this course (ECTS-year of study if applicable)
        - secondary vocational education: mbo
        - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
        - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
        - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
        - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
        - associate degree: associate degree, corresponds to levelOfQualification 5
        - bachelor: bachelor, corresponds to levelOfQualification 6
        - master: master, corresponds to levelOfQualification 7
        - doctoral: doctoraal, corresponds to levelOfQualification 8
        - undefined: onbepaald
        - undivided: ongedeeld
        - nt2-1: NT2 niveau 1
        - nt2-2: NT2 niveau 2
      enum: *ref_21
      example: master
    EducationSpecificationId:
      type: object
      properties: *ref_88
      required: *ref_89
    educationSpecificationType:
      type: string
      description: |
        The type of education specification
          - program: HOOPLEIDING
          - privateProgram: PARTICULIEREOPLEIDING
          - programCluster: HOONDERWIJSEENHEDENCLUSTER
          - course: HOONDERWIJSEENHEID
      enum: *ref_90
      example: program
    formalDocument:
      type: string
      description: |
        The type of formal document obtained after completion of this education
          - diploma: DIPLOMA
          - certificate: CERTIFICAAT
          - no official document: GEEN OFFICIEEL DOCUMENT
          - testimonial: GETUIGSCHRIFT
          - school advice: SCHOOLADVIES
      enum: *ref_91
      example: diploma
    sector:
      type: string
      description: |
        The sector for this program
        - secondary vocational education: middelbaar beroepsonderwijs
        - higher professional education: hoger beroepsonderwijs
        - university education: universitair onderwijs
      enum: *ref_26
      example: university education
    levelOfQualification:
      type: string
      description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
      enum: *ref_25
      example: '6'
    EducationSpecification:
      allOf: *ref_24
    EducationSpecificationProperties:
      type: object
      description: |
        The specification of an education object. This specification allows for other education objects to be derived from it.
        It is used to aggregate education objects from a supplying institution.
        It clusters programs to a main educationSpecification that is used in registries such as RIO. 
      required: *ref_92
      properties: *ref_93
    ProgramId:
      type: object
      description: A collection of courses that lead to a certifiable learning outcome
      required: *ref_94
      properties: *ref_95
    programType:
      type: string
      description: |
        The type of this program
        - program: opleiding
        - minor: minor
        - honours: honours
        - specialization: specialisatie
        - track: track
      enum: *ref_96
      example: program
    qualificationAwarded:
      type: string
      description: Type of qualificaton that can be obtained on finishing the program
      enum: *ref_97
      example: None
    modeOfStudy:
      type: string
      description: |
        Indicates whether the education is full-time, part-time, dual or self-paced.
          - full-time: fulltime
          - part-time: parttime
          - dual training: duaal
          - self-paced: eigen tempo
          - extraneous : extraneus student: examendeelnemer (student mag alleen aan de toetsen deelnemen / beperkt colegegeld)
      enum: *ref_98
    Program:
      allOf: *ref_27
    ProgramProperties:
      type: object
      description: A collection of courses that lead to a certifiable learning outcome
      properties: *ref_99
    CourseProperties:
      type: object
      description: An object describing the metadata of a course
      required: *ref_100
      properties: *ref_101
    Course:
      allOf: *ref_46
    resultValueType:
      type: string
      description: |
        The result value type for this offering
        - pass-or-fail = Resultvalue is from valuelist {passed, failed}
        - insufficient-satisfactory-good = Resultvalue is from valuelist {insufficient, satisfactory, good}
        - US letter = Resultvalue is a letter from A t/m D en F voor fail as in US
        - UK letter = Resultvalue is a letter from A t/m G en U voor ungraded/unclassified as in UK
        - DE grade = Resultvalue is a letter as used in Germany
        - 0-100 = Resultvalue is a number from range (0,100)
        - 0-10 = Resultvalue is a number from range (0,10)
        - 0.0-10.0 = Resultvalue is a decimal number from range (0.0,10.0)
        - referenceLevelRKTR = Resultvalue is a reference level from the Dutch "Referentiekader Taal en Rekenen" from value set {1F, 1S, 2F, 2S, 3F, 3S, 4F, 4S} and additional values like "Op weg naar 1F"
        - referenceLevelERK = Resultvalue is a reference level from the "Europees Referencekader voor de talen" from value set {A1, A2, B1, B2, C1, C2}
      enum: *ref_40
      example: 0-10
    NL-TEST-ADMIN-Component:
      type: object
      description: NL-TEST-ADMIN add-on attributes to the Component
      required: *ref_102
      properties: *ref_103
    ConsumerOnComponent:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: *ref_104
      example: *ref_105
    Component:
      type: object
      description: A component is a part of a course
      required: *ref_29
      properties: *ref_30
    Pagination:
      type: object
      required: *ref_35
      properties: *ref_36
    OfferingId:
      type: object
      description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
      required: *ref_41
      properties: *ref_42
    academicSessionType:
      type: string
      description: |
        The type of this Academic Session This is an *extensible enumeration*.
        - academic year: academic year
        - semester: semester, typically there are two semesters per academic year
        - trimester: trimester, typically there are three semesters per academic year
        - quarter: quarter, typically there are four quarters per academic year
        - testing period: a period in which tests take place
        - period: any other period in an academic year

        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
      example: semester
      x-ooapi-extensible-enum: *ref_106
    AcademicSession:
      type: object
      description: |
        A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
        Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
      required: *ref_37
      properties: *ref_38
    RIO-Offering:
      type: object
      description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome
      required: *ref_107
      properties: *ref_108
    NL-TEST-ADMIN-Offering:
      type: object
      description: NL-TEST-ADMIN add-on attributes to the offerings
      required: *ref_109
      properties: *ref_110
    ConsumerOnOffering:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: *ref_111
      example: *ref_112
    OfferingProperties:
      type: object
      description: Either a program, course or component offering which descrbes the program, course or offering in time
      properties: *ref_43
    costType:
      type: string
      description: |
        The type of the cost. This is an *extensible enumeration*.

        The following values have been defined in the specification:
          - `STAP eligible`: the costs that a student can get STAP subsidy for
          - `total costs`: the total costs that a student is to pay to follow this offering

        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
      example: total costs
      x-ooapi-extensible-enum: *ref_113
    Cost:
      type: object
      required: *ref_44
      properties: *ref_45
      additionalProperties: false
    roomType:
      type: string
      description: |
        The type of this room
        - general purpose: algemeen
        - lecture room: collegezaal
        - computer room: computerruimte
        - laboratory: laboratorium
        - office: kantoor
        - workspace: werkruimte
        - exam location: tentamenruimte
        - study room: studieruimte
        - examination room: onderzoekskamer
        - conference room: vergaderkamer
      enum: *ref_114
      example: exam location
    Building:
      type: object
      description: An object describing a building and the properties of a building.
      required: *ref_115
      properties: *ref_116
    Room:
      type: object
      description: An area within a building where education can take place
      required: *ref_52
      properties: *ref_53
    ProgramOfferingProperties:
      allOf: *ref_117
    ProgramOffering:
      allOf: *ref_50
    CourseOfferingProperties:
      allOf: *ref_118
    CourseOffering:
      allOf: *ref_49
    ComponentOfferingProperties:
      allOf: *ref_51
    ComponentOffering:
      allOf: *ref_48
    ComponentOfferingNoId:
      allOf: *ref_119
    associationRole:
      type: string
      description: |
        The role of this person associated with the offering
          - student: student
          - lecturer: docent
          - teaching assistant: studentassistent
          - coordinator: coördinator
          - guest: gast
          - invigilator: surveillant
          - assessor: beoordelaar
      enum: *ref_54
      example: student
    associationState:
      type: string
      description: The state of this association
      enum: *ref_55
      example: associated
    resultState:
      type: string
      description: The state of this result
      enum: *ref_56
      example: completed
    AssociationId:
      type: object
      properties: *ref_65
      required: *ref_66
    remoteAssociationState:
      type: string
      description: The state of this association for the institution performing the request.
      enum: *ref_120
      example: associated
    NL-TEST-ADMIN-Association:
      type: object
      description: NL-TEST-ADMIN add-on attributes to the Association
      required: *ref_121
      properties: *ref_122
    ConsumerOnAssociation:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: *ref_123
      example: *ref_124
    AssociationProperties:
      type: object
      description: A relationship between a person object and an offering
      properties: *ref_125
    Association:
      allOf: *ref_57
    passState:
      type: string
      description: The state of this result
      enum: *ref_126
      example: passed
    NL-TEST-ADMIN-Result:
      type: object
      description: NL-TEST-ADMIN add-on attributes to the result
      required: *ref_127
      properties: *ref_128
    ConsumerOnResult:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: *ref_129
      example: *ref_130
    Result:
      type: object
      description: A result as part of an association
      required: *ref_58
      properties: *ref_59
    ProgramResult:
      allOf: *ref_61
    Offering:
      allOf: *ref_60
    ProgramOfferingAssociationExpanded:
      allOf: *ref_131
    CourseResult:
      allOf: *ref_62
    CourseOfferingAssociationExpanded:
      allOf: *ref_132
    ComponentResult:
      allOf: *ref_133
    ComponentOfferingAssociationProperties:
      allOf: *ref_64
    ComponentOfferingAssociation:
      allOf: *ref_63
    ComponentOfferingAssociationExpanded:
      allOf: *ref_134
      properties: *ref_135
    ProgramOfferingAssociation:
      allOf: *ref_136
    CourseOfferingAssociation:
      allOf: *ref_137
    AssociationFull:
      oneOf: *ref_138
      properties: *ref_139
    ComponentOfferingAssociationExpandedWrite:
      allOf: *ref_140
      required: *ref_141
      properties: *ref_142
    ComponentOfferingAssociationPatch:
      allOf: *ref_143
      properties: *ref_144
    PostResponse:
      type: object
      description: A system message as a response to a POST message
      required: *ref_145
      properties: *ref_146
    Url:
      type: string
      description: Url containing a web address.
      format: uri
      example: https://www.universiteitvanharderwijk.nl
    groupType:
      type: string
      description: |
        The type of this group
        - learning group: A collection of participants carrying out common learning activities
        - class: A collection of participants carrying out jointly scheduled educational activities
        - team: A collection of members of a team, either students, employees or mixed.
      enum: *ref_68
      example: learning group
    Group:
      type: object
      description: |
        A group is simply a collection of persons. Groups can be used to accommodate various usecases.

        Groups MAY optionally have a relation to an Offering, however the meaning of such relations is left unspecified and is left up to the implementer.
      required: *ref_69
      properties: *ref_70
  responses:
    ErrorBadRequest:
      description: Bad request
      content: *ref_13
    ErrorUnauthorized:
      description: Unauthorized
      content: *ref_14
    ErrorForbidden:
      description: Forbidden
      content: *ref_15
    ErrorNotFound:
      description: Not Found
      content: *ref_16
    ErrorMethodNotAllowed:
      description: Method not allowed
      content: *ref_17
    ErrorTooManyRequests:
      description: Too many requests
      content: *ref_18
    ErrorInternalServerError:
      description: Internal Server Error
      content: *ref_19
  parameters:
    primaryCode:
      name: primaryCode
      in: query
      description: The primaryCode of the requested item. This is often the source identifier as defined by the institution.
      required: false
      schema: *ref_67
    pageSize:
      name: pageSize
      in: query
      description: The number of items per page
      required: false
      schema: *ref_31
    pageNumber:
      name: pageNumber
      in: query
      description: The page number to get. Page numbers start at 1.
      required: false
      schema: *ref_32
    consumer:
      name: consumer
      in: query
      description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      required: false
      schema: *ref_33
    search:
      name: q
      in: query
      description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
      required: false
      schema: *ref_34
    teachingLanguage:
      name: teachingLanguage
      in: query
      description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.
      required: false
      schema: *ref_47
      example: nld
    personSearch:
      name: q
      in: query
      description: Filter by persons having a givenName, surNamePrefix, surname, displayName, initials, mail or secondaryMail containing the given search term (exact partial match, case insensitive)
      required: false
      schema: *ref_147
x-tagGroups:
  - name: Requests and responses
    tags:
      - associations
      - components
      - groups
      - documents
      - offerings
      - persons
  - name: Models
    tags:
      - association_model
      - component_model
      - component_offering_model
      - course_offering_model
      - group_model
      - person_model
      - program_model
      - program_offering_model
