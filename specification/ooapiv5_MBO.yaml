openapi: 3.0.3
info:
  version: 5.0.0
  title: Open Education API
  description: "OpenAPI (fka Swagger) specification for the Open Education API.\n<br/>\nNOTE:This is a subset of the OOAPI that is used in the \"MBO-Toetsafname\" project (sponsored by mbo-digitaal in the netherlands) \n<br/>\n<figure>\n\t<a target=\"_blank\" href=\"OOAPIv5_model.png\">\n  <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">\n  </a>\n  <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption>\n</figure>\n\nThe model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.\n\nThe original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>\n\nThe program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.\n\nInformation about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>\n\nInformation on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>\n"
  x-logo:
    url: ../logo.png
servers:
  - url: http://demo01.eduapi.nl/v5
    description: SURF demo implementation
tags:
  - name: associations
    description: |
      The associations API provides information about the association between an offering and a person (e.g. students, lecturers, etc).
      Associations can be posted between institutions This requires information details on the offering and the persons.
      To allow for this information a complete person object and offering object can be part of the API.
      The structure is explained in the following model:
      <table>
        <tr>
         <td></td>
         <td colspan=3 align=center>offering</td>
        </tr>
        <tr>
         <td rowspan=3>student</td>
         <td></td>
         <!-- <td>internal</td>
         -->
         <td>external</td>
        </tr>
        <tr>
         <td>internal</td>
         <!-- <td>POST <a href="#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post">/offerings/{offeringId}/associations/me</a> local enrollment based on selected offering
          This call will allow for a local student using his .wellknown credentials to enroll for the offering identified by the offeringId
          <br>Alternatively the association can also be created through POST <a href="#tag/associations/paths/~1associations~1me/post">/associations/me</a>
         </td>
         -->
         <td>POST <a href="#tag/associations/paths/~1associations~1external~1me/post">/associations/external/me</a> gets student details from .wellknown at home institution. It passes offering details (provided by external institution) to the home institution so the home institution can create a placeholder for the offering and its results.
         </td>
        </tr>
        <tr>
         <td>external</td>
          <!--
          <td>
          This method is not yet implemented it requires full student details and offering details. This would mean the
          OOAPI message would contain more than one resource in the message. At the moment the student mobility project is looking into
          a sollution.
          <br> Alternatively it could be achieved through using two calls:
          <ul>
           <li>create student with POST <a href="#tag/persons/paths/~1persons~1{personId}/post">/persons</a></li>
           <li><a href="#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post">/offerings/{offeringId}/associations/me</a></li>
          </ul>
          for the enrollment
         </td>
          -->
         <td>no support needed</td>
        </tr>
      </table>
      Direct update of current information: <a href="#tag/associations/paths/~1associations~1{associationId}/patch"> PATCH /associations/{associationId}</a>
      This call is currently limited to passing results and a remote state. For future use other association resource information could be passed.
      More information on the support for student mobility can be found
      <a href="https://swimlanes.io/d/s5mfpj7Si">here</a>
  - name: components
    description: The components API provides information about components being part of parent courses.
  - name: offerings
    description: The offerings API provides information about offerings which have a global timeframe, e.g. a period to which students can enroll.
  - name: persons
    description: The persons API provides information about persons related to an organization.
  - name: component_model
    x-displayName: Component
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Component" />
  - name: component_offering_model
    x-displayName: ComponentOffering
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ComponentOffering" />
  - name: association_model
    x-displayName: Association
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Association" />
  - name: person_model
    x-displayName: Person
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Person" />
x-tagGroups:
  - name: Requests and responses
    tags:
      - associations
      - components
      - offerings
  - name: Models
    tags:
      - association_model
      - component_model
      - component_offering_model
      - person_model
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.nl/.well-known/openid-configuration
    oAuthFlows:
      type: oauth2
      description: |
        This API uses oauth Cleint credentials for server to server #/components/schemas/EducationSpecification
      flows:
        clientCredentials:
          tokenUrl: https://example.nl/oauth2/authorize
          scopes:
            test-admin-flow: functions needed to allow the transfer of enrollments, persons and offerings between systems in MBO
  schemas:
    PersonId:
      type: object
      properties: &ref_14
        personId:
          type: string
          description: Unique id of this person
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      required: &ref_15
        - personId
    codeType:
      type: string
      description: |
        The code/identifier type. 

        This is an *extensible enumeration*. Use `x-` to prefix custom values

        The predefined values are:
          - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science
          - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)
          - `programCode`: Identifier for the program (collection of courses)
          - `componentCode`: The code for a component (part of a course)
          - `offeringCode`: The code to identify a specific offering (program, course or component offering)
          - `organizationId`: The identifier for the organization
          - `buildingId`: The number or code to identify a building
          - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)
          - `roomCode`: The code for a room
          - `systemId`: Identifier assigned to an entity in context of a specific system
          - `productId`: Identifier assigned to a specific product
          - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA
          - `studentNumber`: Identifier for the student
          - `studielinkNumber`: Identifier for the person as determined by Studielink
          - `esi`: European Student Identifier
          - `userName`: The name of a user
          - `accountId`: Identifier assigned to a specific account
          - `emailAdress`: An email address
          - `groupCode`: The identifier for a group (of persons)
          - `isbn`: International Standard Book Number that serve as product identifiers for Books
          - `issn`: International Standard Book Number that serve as product identifiers for periodicals
          - `orcId`: Open Researcher and Contributor ID
          - `uuid`: A universally unique identifier
          - `schacHome`: Home organization using the domain name of the organization
          - `identifier`: Generic Identifier
          - `eckid`: ID used in the education content chain
      x-ooapi-extensible-enum: &ref_0
        - brin
        - crohoCreboCode
        - programCode
        - componentCode
        - offeringCode
        - organizationId
        - buildingId
        - bagId
        - roomCode
        - systemId
        - productId
        - nationalIdentityNumber
        - studentNumber
        - studielinkNumber
        - esi
        - userName
        - accountId
        - emailAdress
        - groupCode
        - isbn
        - issn
        - orcId
        - uuid
        - schacHome
        - identifier
        - eckid
      example: identifier
    IdentifierEntry:
      type: object
      properties: &ref_4
        codeType:
          type: string
          description: |
            The code/identifier type. 

            This is an *extensible enumeration*. Use `x-` to prefix custom values

            The predefined values are:
              - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science
              - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)
              - `programCode`: Identifier for the program (collection of courses)
              - `componentCode`: The code for a component (part of a course)
              - `offeringCode`: The code to identify a specific offering (program, course or component offering)
              - `organizationId`: The identifier for the organization
              - `buildingId`: The number or code to identify a building
              - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)
              - `roomCode`: The code for a room
              - `systemId`: Identifier assigned to an entity in context of a specific system
              - `productId`: Identifier assigned to a specific product
              - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA
              - `studentNumber`: Identifier for the student
              - `studielinkNumber`: Identifier for the person as determined by Studielink
              - `esi`: European Student Identifier
              - `userName`: The name of a user
              - `accountId`: Identifier assigned to a specific account
              - `emailAdress`: An email address
              - `groupCode`: The identifier for a group (of persons)
              - `isbn`: International Standard Book Number that serve as product identifiers for Books
              - `issn`: International Standard Book Number that serve as product identifiers for periodicals
              - `orcId`: Open Researcher and Contributor ID
              - `uuid`: A universally unique identifier
              - `schacHome`: Home organization using the domain name of the organization
              - `identifier`: Generic Identifier
              - `eckid`: ID used in the education content chain
          x-ooapi-extensible-enum: *ref_0
          example: identifier
        code:
          description: Human readable value for the code/identifier
          type: string
      required: &ref_5
        - codeType
        - code
      additionalProperties: false
      example: &ref_11
        codeType: identifier
        code: 1234qwe12
    personAffiliations:
      type: array
      description: |
        The affiliations of this person, the relations a person has with the organization providing this endpoint
        - student: student
        - employee: medewerker
        - guest: gast
      items: &ref_6
        type: string
        enum:
          - student
          - employee
          - guest
        example: student
    gender:
      type: string
      description: The gender of this person
      enum: &ref_7
        - M
        - F
        - U
        - X
      example: F
    addressType:
      type: string
      description: |
        Address type
        - postal: post
        - visit: bezoek
        - deliveries: bezorg
        - billing: factuur
        - teaching: the address where education takes place
      enum: &ref_1
        - postal
        - visit
        - deliveries
        - billing
        - teaching
    LanguageTypedString:
      type: object
      description: A String with an associated language code.
      properties: &ref_2
        language:
          description: The language used in the described entity. A string formatted according to RFC3066.
          type: string
          pattern: ^[a-z]{2,4}(-[A-Z][a-z]{3})?(-([A-Z]{2}|[0-9]{3}))?$
        value:
          description: String to describe the entity.
          type: string
      example: &ref_3
        language: en-GB
        value: program that is a place holder for all courses that are made available for student mobility
    Ext:
      type: object
      description: Object for additional non-standard attributes
    Address:
      type: object
      description: The full street address
      required: &ref_8
        - addressType
      properties: &ref_9
        addressType:
          type: string
          description: |
            Address type
            - postal: post
            - visit: bezoek
            - deliveries: bezorg
            - billing: factuur
            - teaching: the address where education takes place
          enum: *ref_1
        street:
          type: string
          description: The street name
          example: Moreelsepark
        streetNumber:
          type: string
          description: The street number
          example: '48'
        additional:
          type: array
          description: Further details like building name, suite, apartment number, etc.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: On the other side of the road
        postalCode:
          type: string
          description: Postal code
          example: 3511 EP
        city:
          type: string
          description: name of the city / locality
          example: Utrecht
        countryCode:
          type: string
          description: the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          example: NL
        geolocation:
          type: object
          description: Geolocation of the entrance of this address (WGS84 coordinate reference system)
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: number
              format: double
              example: 52.089123
            longitude:
              type: number
              format: double
              example: 5.113337
        ext:
          type: object
          description: Object for additional non-standard attributes
    ICERelationType:
      type: string
      description: Type of relation between person and In Case of Emergency contact
      enum: &ref_10
        - partner
        - parent
        - other
      example: partner
    Consumer:
      type: object
      description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
      required: &ref_12
        - consumerKey
      properties: &ref_13
        consumerKey:
          description: The key of the consumer (destination) for which this information is intended. See the [consumer registry](https://open-education-api.github.io/specification/#/consumers) for more information.
          type: string
      additionalProperties: true
    PersonProperties:
      type: object
      description: A person that has a relationship with this institution
      required: &ref_16
        - givenName
        - surname
        - displayName
        - affiliations
        - mail
        - primaryCode
        - activeEnrollment
      properties: &ref_17
        primaryCode:
          description: The primary human readable identifier for the person. This is often the source identifier as defined by the institution.
          example:
            codeType: studentNumber
            code: 0
          readOnly: true
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        givenName:
          type: string
          description: The first name of this person
          maxLength: 256
          example: Maartje
        surnamePrefix:
          type: string
          description: The prefix of the family name of this person
          example: van
        surname:
          type: string
          description: The family name of this person
          maxLength: 256
          example: Damme
        displayName:
          type: string
          description: The name of this person which will be displayed
          maxLength: 256
          example: Maartje van Damme
        initials:
          type: string
          description: The initials of this person
          example: MCW
        activeEnrollment:
          type: boolean
          description: Whether this person has an active enrollment.
          example: false
        dateOfBirth:
          type: string
          description: The date of birth of this person, RFC3339 (full-date)
          format: date
          example: '2003-09-30'
        cityOfBirth:
          type: string
          description: The city of birth of this person
          example: Utrecht
        countryOfBirth:
          type: string
          description: The country of birth of this person the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          example: NL
        nationality:
          type: string
          description: The nationality of this person the nationality according to https://gist.github.com/zspine/2365808
          example: Dutch
        dateOfNationality:
          type: string
          description: The date of nationality of this person, RFC3339 (full-date)
          format: date
          example: '2003-09-30'
        affiliations:
          type: array
          description: |
            The affiliations of this person, the relations a person has with the organization providing this endpoint
            - student: student
            - employee: medewerker
            - guest: gast
          items: *ref_6
        mail:
          type: string
          description: The primary e-mailaddress of this person
          format: email
          maxLength: 256
          example: vandamme.mcw@universiteitvanharderwijk.nl
        secondaryMail:
          type: string
          description: The secondary e-mailaddress of this person
          format: email
          maxLength: 256
          example: poekie@xyz.nl
        telephoneNumber:
          type: string
          description: The telephone number of this person
          maxLength: 256
          example: +31 123 456 789
        mobileNumber:
          type: string
          description: The mobile number of this person
          maxLength: 256
          example: +31 612 345 678
        photoSocial:
          type: string
          description: The url of the informal picture of this person
          format: uri
          maxLength: 2048
          example: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Placeholder_female_superhero_c.png/203px-Placeholder_female_superhero_c.png
        photoOfficial:
          type: string
          description: The url of the official picture of this person
          format: uri
          maxLength: 2048
          example: https://upload.wikimedia.org/wikipedia/commons/6/66/Johannes_Vermeer_%281632-1675%29_-_The_Girl_With_The_Pearl_Earring_%281665%29.jpg
        gender:
          type: string
          description: The gender of this person
          enum: *ref_7
          example: F
        titlePrefix:
          type: string
          description: A title prefix to be used for this person
          example: drs
        titleSuffix:
          type: string
          description: A title suffix to be used for this person
          example: BSc
        office:
          type: string
          description: The name of the office where this person is located
        address:
          type: object
          description: The full street address
          required: *ref_8
          properties: *ref_9
        ICEName:
          type: string
          description: Full name of In Case of Emergency contact
          maxLength: 256
          example: Janne
        ICEPhoneNumber:
          type: string
          description: Phone number of In Case of Emergency contact
          maxLength: 256
          example: +31 623 456 789
        ICERelation:
          type: string
          description: Type of relation between person and In Case of Emergency contact
          enum: *ref_10
          example: partner
        languageOfChoice:
          type: array
          description: The language(s) of choice for this person, RFC3066
          items:
            type: string
            example: nl-NL
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
          example:
            - codeType: nationalIdentityNumber
              code: '00000'
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example: &ref_30
            - consumerKey: x-test-consumer
              additional: custom
              attributes: here
        ext:
          type: object
          description: Object for additional non-standard attributes
    Person:
      allOf: &ref_41
        - type: object
          properties: *ref_14
          required: *ref_15
        - type: object
          description: A person that has a relationship with this institution
          required: *ref_16
          properties: *ref_17
    Problem:
      type: object
      description: A system message including the error code and an explanation
      required: &ref_104
        - status
        - title
      properties: &ref_105
        status:
          type: string
          description: The HTTP status code
          example: '404'
        title:
          type: string
          description: A short, human-readable summary of the problem type
          example: Resource not found
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
    componentType:
      type: string
      description: |
        The component type
        - test: tentamen
        - lecture: college
        - practical: practicum
        - tutorial: werkcollege
        - consultation: consultatie
        - project: project
        - workshop: workshop
        - excursion: excursie
        - independent study: zelfstudie
        - external: extern
        - skills training: vaardighedentraining
      enum: &ref_48
        - test
        - lecture
        - practical
        - tutorial
        - consultation
        - project
        - workshop
        - excursion
        - independent study
        - external
        - skills training
      example: test
    modesOfDelivery:
      type: array
      description: |
        The mode of delivery of the component (ECTS-mode of delivery)
        - distance-learning: afstandsleren
        - on campus: op de campus
        - online: online
        - hybrid: hybride
        - situated: op locatie
      items: &ref_39
        type: string
        enum:
          - distance-learning
          - on campus
          - online
          - hybrid
          - situated
        example: situated
    Identifier:
      type: string
      description: An identifier of another resource.
      format: uuid
    CourseId:
      type: object
      description: An object describing the metadata of a course
      required: &ref_44
        - courseId
      properties: &ref_45
        courseId:
          type: string
          description: Unique id of this course
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
    StudyLoadDescriptor:
      type: object
      description: The amount of effort to complete this education in the specified unit.
      properties: &ref_25
        studyLoadUnit:
          description: "The unit in which the studyload is specfied\n- contacttime: CONTACTUUR\tamount of time spent in classes\n- ects: ECTS_PUNT\tEuropean Credit Transfer System\n- sbu: SBU\tstudentloadhours\n- sp: STUDIEPUNT studentpoints\n- hour: UUR\thours\n"
          type: string
          enum:
            - contacttime
            - ects
            - sbu
            - sp
            - hour
          example: ects
        value:
          description: The amount of load depicted in numbers
          type: number
          example: 3
      example: &ref_26
        studyLoadUnit: ects
        value: 3
    level:
      type: string
      description: |
        The level of this course (ECTS-year of study if applicable)
        - secondary vocational education: mbo
        - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
        - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
        - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
        - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
        - associate degree: associate degree, corresponds to levelOfQualification 5
        - bachelor: bachelor, corresponds to levelOfQualification 6
        - master: master, corresponds to levelOfQualification 7
        - doctoral: doctoraal, corresponds to levelOfQualification 8
        - undefined: onbepaald
        - undivided: ongedeeld
        - nt2-1: NT2 niveau 1
        - nt2-2: NT2 niveau 2
      enum: &ref_22
        - secondary vocational education
        - secondary vocational education 1
        - secondary vocational education 2
        - secondary vocational education 3
        - secondary vocational education 4
        - associate degree
        - bachelor
        - master
        - doctoral
        - undefined
        - undivided
        - nt2-1
        - nt2-2
      example: master
    EducationSpecificationId:
      type: object
      properties: &ref_18
        educationSpecificationId:
          type: string
          description: Unique id for this education specification
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      required: &ref_19
        - educationSpecificationId
    educationSpecificationType:
      type: string
      description: |
        The type of education specification
          - program: HOOPLEIDING
          - privateProgram: PARTICULIEREOPLEIDING
          - programCluster: HOONDERWIJSEENHEDENCLUSTER
          - course: HOONDERWIJSEENHEID
      enum: &ref_20
        - program
        - privateProgram
        - cluster
        - course
      example: program
    formalDocument:
      type: string
      description: |
        The type of formal document obtained after completion of this education
          - diploma: DIPLOMA
          - certificate: CERTIFICAAT
          - no official document: GEEN OFFICIEEL DOCUMENT
          - testimonial: GETUIGSCHRIFT
          - school advice: SCHOOLADVIES
      enum: &ref_21
        - diploma
        - certificate
        - no official document
        - testimonial
        - school advice
      example: diploma
    sector:
      type: string
      description: |
        The sector for this program
        - secondary vocational education: middelbaar beroepsonderwijs
        - higher professional education: hoger beroepsonderwijs
        - university education: universitair onderwijs
      enum: &ref_23
        - secondary vocational education
        - higher professional education
        - university education
      example: university education
    levelOfQualification:
      type: string
      description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
      enum: &ref_24
        - '1'
        - '2'
        - '3'
        - '4'
        - 4+
        - '5'
        - '6'
        - '7'
        - '8'
      example: '6'
    EducationSpecification:
      allOf: &ref_27
        - type: object
          properties: *ref_18
          required: *ref_19
        - type: object
          description: |
            The specification of an education object. This specification allows for other education objects to be derived from it.
            It is used to aggregate education objects from a supplying institution.
            It clusters programs to a main educationSpecification that is used in registries such as RIO. 
          required: &ref_32
            - primaryCode
            - educationSpecificationType
            - name
          properties: &ref_33
            primaryCode:
              description: |
                The primary human readable identifier for the entity. 
                This will often take the form of a human readable code as defined by the institution or region
              type: object
              properties: *ref_4
              required: *ref_5
              additionalProperties: false
              example: *ref_11
            otherCodes:
              type: array
              description: An array of additional human readable codes/identifiers for the entity being described.
              items:
                type: object
                properties: *ref_4
                required: *ref_5
                additionalProperties: false
                example: *ref_11
              example:
                - codeType: crohoCreboCode
                  code: '1234123'
            educationSpecificationType:
              type: string
              description: |
                The type of education specification
                  - program: HOOPLEIDING
                  - privateProgram: PARTICULIEREOPLEIDING
                  - programCluster: HOONDERWIJSEENHEDENCLUSTER
                  - course: HOONDERWIJSEENHEID
              enum: *ref_20
              example: program
            name:
              type: array
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              description: The name of this education specification
              example:
                - language: en-GB
                  value: Bachelor Chemical technology
            abbreviation:
              type: string
              description: The abbreviation of this program
              maxLength: 256
              example: B Scheikundige Technologie
            description:
              type: array
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              description: The description of this program. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
              example:
                - language: en-GB
                  value: program that is a place holder for all courses that are made available for student mobility
            formalDocument:
              type: string
              description: |
                The type of formal document obtained after completion of this education
                  - diploma: DIPLOMA
                  - certificate: CERTIFICAAT
                  - no official document: GEEN OFFICIEEL DOCUMENT
                  - testimonial: GETUIGSCHRIFT
                  - school advice: SCHOOLADVIES
              enum: *ref_21
              example: diploma
            level:
              type: string
              description: |
                The level of this course (ECTS-year of study if applicable)
                - secondary vocational education: mbo
                - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
                - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
                - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
                - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
                - associate degree: associate degree, corresponds to levelOfQualification 5
                - bachelor: bachelor, corresponds to levelOfQualification 6
                - master: master, corresponds to levelOfQualification 7
                - doctoral: doctoraal, corresponds to levelOfQualification 8
                - undefined: onbepaald
                - undivided: ongedeeld
                - nt2-1: NT2 niveau 1
                - nt2-2: NT2 niveau 2
              enum: *ref_22
              example: master
            sector:
              type: string
              description: |
                The sector for this program
                - secondary vocational education: middelbaar beroepsonderwijs
                - higher professional education: hoger beroepsonderwijs
                - university education: universitair onderwijs
              enum: *ref_23
              example: university education
            levelOfQualification:
              type: string
              description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
              enum: *ref_24
              example: '6'
            fieldsOfStudy:
              type: string
              description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
              maxLength: 4
              example: '0732'
            studyLoad:
              type: object
              description: The amount of effort to complete this education in the specified unit.
              properties: *ref_25
              example: *ref_26
            learningOutcomes:
              type: array
              description: Statements that describe the knowledge or skills students should acquire by the end of a particular course or program (ECTS-learningoutcome).
              items:
                type: array
                minItems: 1
                items:
                  type: object
                  description: A String with an associated language code.
                  properties: *ref_2
                  example: *ref_3
                example:
                  - language: en-GB
                    value: 'Executable knowledge of Chemical technology, including: Acquire knowledge of research paradigms.'
            link:
              type: string
              description: URL of the program's website
              format: uri
              maxLength: 2048
              example: https://bijvak.nl
            parent:
              description: The educationSpecification that is the parent of this educationSpecification if it exists. [`expandable`](#tag/education_specification_model)
              oneOf:
                - title: educationSpecificationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: EducationSpecification
                  allOf: *ref_27
            children:
              type: array
              description: The EducationSpecifications that have this EducationSpecification as their parent. [`expandable`](#tag/education_specification_model)
              items:
                oneOf:
                  - title: educationSpecificationId
                    type: string
                    description: An identifier of another resource.
                    format: uuid
                  - title: EducationSpecification
                    allOf: *ref_27
            organization:
              description: |
                The organization that manages this group. [`expandable`](#tag/organization_model)
                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
              oneOf:
                - title: organizationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Organization object
                  type: object
                  description: A description of a group of people working together to achieve a goal
                  required: &ref_28
                    - organizationId
                    - organizationType
                    - name
                    - shortName
                    - primaryCode
                  properties: &ref_29
                    organizationId:
                      type: string
                      description: Unique id of this organization
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-123514174000
                      readOnly: true
                    primaryCode:
                      description: The primary human readable identifier for the organization. This is often the source identifier as defined by the institution.
                      example:
                        codeType: orgId
                        code: Org01-Root
                      readOnly: true
                      type: object
                      properties: *ref_4
                      required: *ref_5
                      additionalProperties: false
                    organizationType:
                      type: string
                      description: |
                        The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.
                        - root: the root of this organization, representing the Educational Institution itself
                        - institute: instituut
                        - department: departement
                        - faculty: faculteit
                        - branch: vestiging
                        - academy: academie
                        - school: school
                      enum: &ref_31
                        - root
                        - institute
                        - department
                        - faculty
                        - branch
                        - academy
                        - school
                      example: root
                    name:
                      type: array
                      description: The name of the organization
                      minItems: 1
                      items:
                        type: object
                        description: A String with an associated language code.
                        properties: *ref_2
                        example: *ref_3
                      example:
                        - language: nl-NL
                          value: Coöperatie SURF U.A.
                    shortName:
                      type: string
                      description: Short name of the organization
                      maxLength: 256
                      example: SURF
                    description:
                      type: array
                      description: Any general description of the organization should clearly mention the type of higher education organization, especially in the case of a binary system. In Dutch; universiteit (university) or hogeschool (university of applied sciences).
                      minItems: 1
                      items:
                        type: object
                        description: A String with an associated language code.
                        properties: *ref_2
                        example: *ref_3
                      example:
                        - language: nl-NL
                          value: SURF is een coöperatieve vereniging van Nederlandse onderwijs- en onderzoeksinstellingen waarin de leden hun krachten bundelen. De leden zijn eigenaar van SURF.
                    addresses:
                      type: array
                      description: Addresses of this organization
                      items:
                        type: object
                        description: The full street address
                        required: *ref_8
                        properties: *ref_9
                    link:
                      type: string
                      description: URL of the organization's website
                      format: uri
                      maxLength: 2048
                      example: https://surf.nl
                    logo:
                      type: string
                      description: Logo of this organization
                      format: uri
                      maxLength: 2048
                      example: https://www.surf.nl/themes/surf/logo.svg
                    otherCodes:
                      type: array
                      description: An array of additional human readable codes/identifiers for the entity being described.
                      minItems: 1
                      items:
                        type: object
                        properties: *ref_4
                        required: *ref_5
                        additionalProperties: false
                        example: *ref_11
                      example:
                        - codeType: brin
                          code: 00AA
                        - codeType: kvk
                          code: '12345678'
                    parent:
                      description: |
                        The organizational unit which is the parent of this organization. [`expandable`](#tag/organization_model)
                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                      oneOf:
                        - title: organizationId
                          type: string
                          description: An identifier of another resource.
                          format: uuid
                        - title: Organization object
                          type: object
                          description: A description of a group of people working together to achieve a goal
                          required: *ref_28
                          properties: *ref_29
                    children:
                      type: array
                      description: |
                        All the organizational units for which this organization is the parent. [`expandable`](#tag/organization_model)
                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
                      items:
                        oneOf:
                          - title: organizationId
                            type: string
                            description: An identifier of another resource.
                            format: uuid
                          - title: Organization object
                            type: object
                            description: A description of a group of people working together to achieve a goal
                            required: *ref_28
                            properties: *ref_29
                    consumers:
                      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
                      type: array
                      items:
                        type: object
                        description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                        required: *ref_12
                        properties: *ref_13
                        additionalProperties: true
                      example: *ref_30
                    ext:
                      type: object
                      description: Object for additional non-standard attributes
            consumers:
              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
              type: array
              items:
                type: object
                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                required: *ref_12
                properties: *ref_13
                additionalProperties: true
              example:
                - consumerKey: rio
                  educationSpecificationSubType: variant
                  category:
                    - business_and_project_support
                    - economy
            ext:
              type: object
              description: Object for additional non-standard attributes
        - properties:
            validFrom:
              description: The first day this EducationSpecification is valid (inclusive).
              type: string
              format: date
            validTo:
              description: The day this EducationSpecification ceases to be valid (e.g. exclusive).
              type: string
              format: date
    organizationType:
      type: string
      description: |
        The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.
        - root: the root of this organization, representing the Educational Institution itself
        - institute: instituut
        - department: departement
        - faculty: faculteit
        - branch: vestiging
        - academy: academie
        - school: school
      enum: *ref_31
      example: root
    Organization:
      type: object
      description: A description of a group of people working together to achieve a goal
      required: *ref_28
      properties: *ref_29
    EducationSpecificationProperties:
      type: object
      description: |
        The specification of an education object. This specification allows for other education objects to be derived from it.
        It is used to aggregate education objects from a supplying institution.
        It clusters programs to a main educationSpecification that is used in registries such as RIO. 
      required: *ref_32
      properties: *ref_33
    ProgramId:
      type: object
      description: A collection of courses that lead to a certifiable learning outcome
      required: &ref_34
        - programId
      properties: &ref_35
        programId:
          type: string
          description: Unique id for this program
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
    programType:
      type: string
      description: |
        The type of this program
        - program: opleiding
        - minor: minor
        - honours: honours
        - specialization: specialisatie
        - track: track
      enum: &ref_36
        - program
        - minor
        - honours
        - specialization
        - track
      example: program
    qualificationAwarded:
      type: string
      description: Type of qualificaton that can be obtained on finishing the program
      enum: &ref_37
        - AD
        - BA
        - BSc
        - LLB
        - MA
        - MSc
        - LLM
        - Phd
        - None
      example: None
    modeOfStudy:
      type: string
      description: |
        Indicates whether the education is full-time, part-time, dual or self-paced.
          - full-time: fulltime
          - part-time: parttime
          - dual training: duaal
          - self-paced: eigen tempo
      enum: &ref_38
        - full-time
        - part-time
        - dual training
        - self-paced
    Program:
      allOf: &ref_40
        - type: object
          description: A collection of courses that lead to a certifiable learning outcome
          required: *ref_34
          properties: *ref_35
        - type: object
          description: A collection of courses that lead to a certifiable learning outcome
          required: &ref_42
            - programType
            - name
            - abbreviation
            - description
            - primaryCode
            - teachingLanguage
          properties: &ref_43
            primaryCode:
              description: The primary human readable identifier for the program. This is often the source identifier as defined by the institution.
              example:
                codeType: programCode
                code: BIO
              readOnly: true
              type: object
              properties: *ref_4
              required: *ref_5
              additionalProperties: false
            programType:
              type: string
              description: |
                The type of this program
                - program: opleiding
                - minor: minor
                - honours: honours
                - specialization: specialisatie
                - track: track
              enum: *ref_36
              example: program
            name:
              description: The name of this program
              type: array
              minItems: 1
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              example:
                - language: en-GB
                  value: Biology
            abbreviation:
              type: string
              description: The abbreviation of this program
              maxLength: 256
              example: BIO
            description:
              type: array
              description: The description of this program
              minItems: 1
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              example:
                - language: en-GB
                  value: The study of life
            teachingLanguage:
              type: string
              description: The (primary) teaching language in which this program is given, should be a three-letter language code as specified by ISO 639-2.
              minLength: 3
              maxLength: 3
              pattern: ^[a-z]{3}$
              example: nld
            studyLoad:
              type: object
              description: The amount of effort to complete this education in the specified unit.
              properties: *ref_25
              example: *ref_26
            qualificationAwarded:
              type: string
              description: Type of qualificaton that can be obtained on finishing the program
              enum: *ref_37
              example: None
            modeOfStudy:
              type: string
              description: |
                Indicates whether the education is full-time, part-time, dual or self-paced.
                  - full-time: fulltime
                  - part-time: parttime
                  - dual training: duaal
                  - self-paced: eigen tempo
              enum: *ref_38
            modeOfDelivery:
              type: array
              description: |
                The mode of delivery of the component (ECTS-mode of delivery)
                - distance-learning: afstandsleren
                - on campus: op de campus
                - online: online
                - hybrid: hybride
                - situated: op locatie
              items: *ref_39
            duration:
              type: string
              description: The duration of this program. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
              pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
              example: P1DT30H4S
            firstStartDate:
              type: string
              description: The date when participants can follow this program for the first time.
              format: date
            levelOfQualification:
              type: string
              description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.
              enum: *ref_24
              example: '6'
            level:
              type: string
              description: |
                The level of this course (ECTS-year of study if applicable)
                - secondary vocational education: mbo
                - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
                - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
                - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
                - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
                - associate degree: associate degree, corresponds to levelOfQualification 5
                - bachelor: bachelor, corresponds to levelOfQualification 6
                - master: master, corresponds to levelOfQualification 7
                - doctoral: doctoraal, corresponds to levelOfQualification 8
                - undefined: onbepaald
                - undivided: ongedeeld
                - nt2-1: NT2 niveau 1
                - nt2-2: NT2 niveau 2
              enum: *ref_22
              example: master
            sector:
              type: string
              description: |
                The sector for this program
                - secondary vocational education: middelbaar beroepsonderwijs
                - higher professional education: hoger beroepsonderwijs
                - university education: universitair onderwijs
              enum: *ref_23
              example: university education
            fieldsOfStudy:
              type: string
              description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
              maxLength: 4
              example: '0732'
            enrollment:
              type: array
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              description: The extra information that is provided for enrollment
              example:
                - language: en-GB
                  value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
            resources:
              type: array
              description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
              items:
                type: string
              example:
                - book to be announced
                - on-line resource x
            learningOutcomes:
              type: array
              description: List of learning outcomes at program level. It is advisable to limit the number of learning outcomes to approximately 20. It is also advisable to make sure that the program learning outcomes in the course catalogue correspond with those on the Diploma Supplement.
              items:
                type: array
                minItems: 1
                items:
                  type: object
                  description: A String with an associated language code.
                  properties: *ref_2
                  example: *ref_3
                example:
                  - language: en-GB
                    value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
            assessment:
              type: array
              description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
              minItems: 1
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
              example:
                - language: en-GB
                  value: Exam on campus
            admissionRequirements:
              type: array
              description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.
              example:
                - language: en-GB
                  value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance
              minItems: 1
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
            qualificationRequirements:
              type: array
              description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.
              minItems: 1
              items:
                type: object
                description: A String with an associated language code.
                properties: *ref_2
                example: *ref_3
            link:
              type: string
              description: URL of the program's website
              format: uri
              maxLength: 2048
              example: https://bijvak.nl
            educationSpecification:
              description: The educationSpecification of which this program is a more concrete implementation. [`expandable`](#tag/education_specification_model)
              oneOf:
                - title: educationSpecificationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: EducationSpecification
                  allOf: *ref_27
            otherCodes:
              type: array
              description: An array of additional human readable codes/identifiers for the entity being described.
              items:
                type: object
                properties: *ref_4
                required: *ref_5
                additionalProperties: false
                example: *ref_11
              example:
                - codeType: crohoCreboCode
                  code: '59312'
            addresses:
              type: array
              description: Addresses for this program
              items:
                type: object
                description: The full street address
                required: *ref_8
                properties: *ref_9
            parent:
              description: Parent program of which the current program is a child. This object is [`expandable`](#tag/program_model)
              oneOf:
                - title: programId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Expanded Program
                  allOf: *ref_40
            children:
              type: array
              description: Programs which are a part of this program (e.g specializations). This object is [`expandable`](#tag/program_model)
              items:
                oneOf:
                  - title: programId
                    type: string
                    description: An identifier of another resource.
                    format: uuid
                  - title: Expanded Program
                    allOf: *ref_40
            coordinators:
              description: The person(s) responsible for this program. This object is [`expandable`](#tag/person_model)
              type: array
              items:
                oneOf:
                  - title: personId
                    type: string
                    description: An identifier of another resource.
                    format: uuid
                  - title: Person object
                    allOf: *ref_41
            organization:
              description: |
                The organization providing this program. [`expandable`](#tag/organization_model)
                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
              oneOf:
                - title: organizationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Organization object
                  type: object
                  description: A description of a group of people working together to achieve a goal
                  required: *ref_28
                  properties: *ref_29
            consumers:
              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
              type: array
              items:
                type: object
                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
                required: *ref_12
                properties: *ref_13
                additionalProperties: true
              example:
                - consumerKey: rio
                  educationOffererCode: 122A112
                  educationLocationCode: 123X122
                  consentParticipationSTAP: permission_granted
                  jointPartnerCodes:
                    - 122A113
                  foreignPartners:
                    - Harvard University
                  deficiency: deficiencies
                  requirementsActivities: requirements
                  propaedeuticPhase: no_propaedeutic_phase
                  studyChoiceCheck: no_study_choice_check
                  acceleratedRoute: accelerated_route
            ext:
              type: object
              description: Object for additional non-standard attributes
        - properties:
            validFrom:
              description: The first day this program is valid (inclusive).
              type: string
              format: date
            validTo:
              description: The day this program ceases to be valid (e.g. exclusive).
              type: string
              format: date
    ProgramProperties:
      type: object
      description: A collection of courses that lead to a certifiable learning outcome
      required: *ref_42
      properties: *ref_43
    CourseProperties:
      type: object
      description: An object describing the metadata of a course
      required: &ref_46
        - name
        - abbreviation
        - description
        - teachingLanguage
        - level
        - primaryCode
      properties: &ref_47
        primaryCode:
          description: The primary human readable identifier for this course. This is often the source identifier as defined by the institution.
          readOnly: true
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
          example: *ref_11
        name:
          type: array
          description: The name of this course (ECTS-title)
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Academic and Professional Writing
        abbreviation:
          type: string
          description: The abbreviation or internal code used to identify this course (ECTS-code)
          maxLength: 256
          example: INFOMQNM
        studyLoad:
          type: object
          description: The amount of effort to complete this education in the specified unit.
          properties: *ref_25
          example: *ref_26
        modeOfDelivery:
          type: array
          description: |
            The mode of delivery of the component (ECTS-mode of delivery)
            - distance-learning: afstandsleren
            - on campus: op de campus
            - online: online
            - hybrid: hybride
            - situated: op locatie
          items: *ref_39
        duration:
          type: string
          description: The duration of this course. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
          pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
          example: P1DT30H4S
        firstStartDate:
          type: string
          description: The date when participants can follow this course for the first time.
          format: date
        description:
          type: array
          description: The description of this course (ECTS-description).
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: As with all empirical sciences, to assure valid outcomes, HCI studies heavily rely on research methods and statistics. This holds for the design of user interfaces, personalized recommender systems, and interaction paradigms for the internet of things. This course prepares you to do so by learning you to collect data, design experiments, and analyze the results. By the end of the course, you will have a detailed understanding of how to select and apply quantitative research methods and analysis to address virtually all HCI challenges. Quantitative research and data analysis will be taught in the context of state-of-the-art HCI challenges. Lectures will be alternated with hands-on learning, including work with predefined datasets (e.g., addressing facial features, cognitive load, and emotion). Additionally, students will set up their own research (e.g., using eye tracking). Data processing and analysis will be executed using R.
        teachingLanguage:
          type: string
          description: The (primary) teaching language in which this course is given, should be a three-letter language code as specified by ISO 639-2.
          minLength: 3
          maxLength: 3
          pattern: ^[a-z]{3}$
          example: nld
        fieldsOfStudy:
          type: string
          description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.
          maxLength: 4
          example: '0732'
        learningOutcomes:
          type: array
          description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).
          items:
            type: array
            minItems: 1
            items:
              type: object
              description: A String with an associated language code.
              properties: *ref_2
              example: *ref_3
            example:
              - language: en-GB
                value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
        admissionRequirements:
          type: array
          description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.
          example:
            - language: en-GB
              value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
        qualificationRequirements:
          type: array
          description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
        level:
          type: string
          description: |
            The level of this course (ECTS-year of study if applicable)
            - secondary vocational education: mbo
            - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1
            - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2
            - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3
            - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4
            - associate degree: associate degree, corresponds to levelOfQualification 5
            - bachelor: bachelor, corresponds to levelOfQualification 6
            - master: master, corresponds to levelOfQualification 7
            - doctoral: doctoraal, corresponds to levelOfQualification 8
            - undefined: onbepaald
            - undivided: ongedeeld
            - nt2-1: NT2 niveau 1
            - nt2-2: NT2 niveau 2
          enum: *ref_22
          example: master
        enrollment:
          type: array
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          description: The extra information that is provided for enrollment
          example:
            - language: en-GB
              value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
        resources:
          type: array
          description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
          items:
            type: string
          example:
            - book to be announced
            - on-line resource x
        assessment:
          type: array
          description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Exam on campus
        link:
          type: string
          description: URL of the course's website
          format: uri
          maxLength: 2048
          example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM
        educationSpecification:
          description: The educationSpecification of which this course is a more concrete implementation. [`expandable`](#tag/education_specification_model)
          oneOf:
            - title: educationSpecificationId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: EducationSpecification
              allOf: *ref_27
        addresses:
          type: array
          description: Addresses for this course
          items:
            type: object
            description: The full street address
            required: *ref_8
            properties: *ref_9
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example:
            - consumerKey: rio
              educationOffererCode: 123A321
              educationLocationCode: 334X123
              consentParticipationSTAP: permission_granted
              jointPartnerCodes:
                - 123A123
              foreignPartners:
                - Harvard University
        ext:
          type: object
          description: Object for additional non-standard attributes
        programs:
          description: The program of which this course is a part of. This object is [`expandable`](#tag/program_model)
          type: array
          items:
            oneOf:
              - title: programId
                type: string
                description: An identifier of another resource.
                format: uuid
              - title: Program object
                allOf: *ref_40
        coordinators:
          description: The person(s) responsible for this course. This object is [`expandable`](#tag/person_model)
          type: array
          items:
            oneOf:
              - title: personId
                type: string
                description: An identifier of another resource.
                format: uuid
              - title: Person object
                allOf: *ref_41
        organization:
          description: |
            The organization that manages this group. [`expandable`](#tag/organization_model)
            By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
          oneOf:
            - title: organizationId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Organization object
              type: object
              description: A description of a group of people working together to achieve a goal
              required: *ref_28
              properties: *ref_29
    Course:
      allOf: &ref_49
        - type: object
          description: An object describing the metadata of a course
          required: *ref_44
          properties: *ref_45
        - type: object
          description: An object describing the metadata of a course
          required: *ref_46
          properties: *ref_47
        - properties:
            validFrom:
              description: The first day this course is valid (inclusive).
              type: string
              format: date
            validTo:
              description: The day this course ceases to be valid (e.g. exclusive).
              type: string
              format: date
    Component:
      type: object
      description: A component is a part of a course
      required: &ref_74
        - componentId
        - componentType
        - name
        - teachingLanguage
        - abbreviation
        - primaryCode
      properties: &ref_75
        componentId:
          type: string
          description: Unique id of this component
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        primaryCode:
          description: The primary human readable identifier for this component. This is often the source identifier as defined by the institution.
          example:
            codeType: componentCode
            code: INFOMQNM-WRKCLG-1
          readOnly: true
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        componentType:
          type: string
          description: |
            The component type
            - test: tentamen
            - lecture: college
            - practical: practicum
            - tutorial: werkcollege
            - consultation: consultatie
            - project: project
            - workshop: workshop
            - excursion: excursie
            - independent study: zelfstudie
            - external: extern
            - skills training: vaardighedentraining
          enum: *ref_48
          example: test
        name:
          type: array
          description: The name of this component
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Written test for INFOMQNM
        abbreviation:
          type: string
          description: The abbreviation of this component
          maxLength: 256
          example: Test-INFOMQNM
        modeOfDelivery:
          type: array
          description: |
            The mode of delivery of the component (ECTS-mode of delivery)
            - distance-learning: afstandsleren
            - on campus: op de campus
            - online: online
            - hybrid: hybride
            - situated: op locatie
          items: *ref_39
        duration:
          type: string
          description: The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
          pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
          example: P1DT30H4S
        description:
          type: array
          description: The description of this component.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: |
                'Prove executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms Able to design suitable research studies (e.g., choose between within and between subject designs) Define/apply/design metrics and scales Define/produce materials (e.g., stimuli and questionnaires) Define protocols for research studies Understands and take in account concepts of reliability and validity Analyze and improve methods and analysis of published scientific articles Able to deliver scientific reports
                Prove executable knowledge of ­­­statistics, including: Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates) Data preparation (e.g., coding and feature selection) Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors) Select an appropriate sampling method (e.g., stratified) Perform parametric tests (e.g., repeated measures (M)ANOVA) Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'
        teachingLanguage:
          type: string
          description: The (primary) teaching language in which this component is given, should be a three-letter language code as specified by ISO 639-2.
          minLength: 3
          maxLength: 3
          pattern: ^[a-z]{3}$
          example: nld
        learningOutcomes:
          type: array
          description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).
          items:
            type: array
            minItems: 1
            items:
              type: object
              description: A String with an associated language code.
              properties: *ref_2
              example: *ref_3
            example:
              - language: en-GB
                value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'
        enrollment:
          type: array
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          description: The extra information that is provided for enrollment
          example:
            - language: en-GB
              value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
        resources:
          type: array
          description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
          items:
            type: string
          example:
            - book to be announced
            - on-line resource x
        assessment:
          type: array
          description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Exam on campus
        addresses:
          type: array
          description: Addresses for this component
          items:
            type: object
            description: The full street address
            required: *ref_8
            properties: *ref_9
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
        course:
          description: |
            The course of which this component is a part. [`expandable`](#tag/course_model)
            By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.
          oneOf:
            - title: courseId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Course object
              allOf: *ref_49
        organization:
          description: |
            The organization which provides this component. [`expandable`](#tag/organization_model)
            By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
          oneOf:
            - title: organizationId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Organization object
              type: object
              description: A description of a group of people working together to achieve a goal
              required: *ref_28
              properties: *ref_29
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example: *ref_30
        ext:
          type: object
          description: Object for additional non-standard attributes
    Pagination:
      type: object
      required: &ref_118
        - pageSize
        - pageNumber
        - hasPreviousPage
        - hasNextPage
        - items
      properties: &ref_119
        pageSize:
          type: integer
          format: int32
          description: The number of items per page
          example: 10
        pageNumber:
          type: integer
          format: int32
          description: The current page number
          example: 1
          minimum: 1
        hasPreviousPage:
          type: boolean
          description: Whether there is a previous page
          example: false
        hasNextPage:
          type: boolean
          description: Whether there is a previous page
          example: true
        totalPages:
          type: integer
          format: int32
          description: Total number of pages
          example: 8
    OfferingId:
      type: object
      description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
      required: &ref_60
        - offeringId
      properties: &ref_61
        offeringId:
          type: string
          description: Unique id of this offering
          format: uuid
          example: 123e4567-e89b-12d3-a456-134564174000
    academicSessionType:
      type: string
      description: |
        The type of this Academic Session This is an *extensible enumeration*.
        - academic year: academic year
        - semester: semester, typically there are two semesters per academic year
        - trimester: trimester, typically there are three semesters per academic year
        - quarter: quarter, typically there are four quarters per academic year
        - testing period: a period in which tests take place
        - period: any other period in an academic year

        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
      example: semester
      x-ooapi-extensible-enum: &ref_50
        - academic year
        - semester
        - trimester
        - quarter
        - testing period
        - period
    AcademicSession:
      type: object
      description: |
        A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
        Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
      required: &ref_51
        - academicSessionId
        - name
        - startDate
        - endDate
      properties: &ref_52
        academicSessionId:
          type: string
          description: Unique id for this academic session
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        academicSessionType:
          type: string
          description: |
            The type of this Academic Session This is an *extensible enumeration*.
            - academic year: academic year
            - semester: semester, typically there are two semesters per academic year
            - trimester: trimester, typically there are three semesters per academic year
            - quarter: quarter, typically there are four quarters per academic year
            - testing period: a period in which tests take place
            - period: any other period in an academic year

            Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
          example: semester
          x-ooapi-extensible-enum: *ref_50
        primaryCode:
          description: The primary human readable identifier for this academic session. This is often the source identifier as defined by the institution.
          example:
            codeType: identifier
            code: 2012-Q1
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        name:
          type: array
          description: The name of this academic session
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Fall semester 2020
        startDate:
          type: string
          description: The day on which this academic session starts, RFC3339 (full-date)
          format: date
          example: '2020-08-17'
        endDate:
          type: string
          description: The day on which this academic session ends, RFC3339 (full-date)
          format: date
          example: '2020-12-18'
        parent:
          description: The parent Academicsession of this session (e.g. fall semester 20xx where the current session is a week 40). This object is [`expandable`](#tag/academic_sessions_model)
          oneOf:
            - title: academicSessionId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Expanded AcademicSession
              type: object
              description: |
                A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
              required: *ref_51
              properties: *ref_52
        children:
          type: array
          description: The list of Academicsession children of this Session (e.g. all academic sessions in fall semester 20xx). This object is [`expandable`](#tag/academic_sessions_model)
          items:
            oneOf:
              - title: academicSessionId
                type: string
                description: An identifier of another resource.
                format: uuid
              - title: Expanded AcademicSession
                type: object
                description: |
                  A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                  Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                required: *ref_51
                properties: *ref_52
        year:
          description: The top level year of this session (e.g. 20xx where the current session is a week 40 of a semester). This object is [`expandable`](#tag/academic_sessions_model)
          oneOf:
            - title: academicSessionId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Expanded AcademicSession
              type: object
              description: |
                A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
              required: *ref_51
              properties: *ref_52
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example: *ref_30
        ext:
          type: object
          description: Object for additional non-standard attributes
    resultValueType:
      type: string
      description: The result value type for this offering
      enum: &ref_57
        - pass-or-fail
        - US letter
        - UK letter
        - 0-100
        - 1-10
      example: 1-10
    RIO-Offering:
      type: object
      description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome
      required: &ref_53
        - registrationStatus
        - requiredPermissionRegistration
        - consumerKey
      properties: &ref_54
        consumerKey:
          type: string
        explanationRequiredPermission:
          type: string
          description: |
            toelichtingVereisteToestemming
            Is een tekstuele toelichting op de voor aanmelding vereiste toestemming van de onderwijsaanbieder
        requiredPermissionRegistration:
          type: string
          description: |
            toestemmingVereistVoorAanmelding
            Geeft aan of een aspirant-student voor een bepaald cohort van een aangeboden opleiding toestemming van de onderwijsaanbieder nodig heeft om zich aan te mogen melden.
            - yes: JA
            - no: NEE
          enum:
            - 'yes'
            - 'no'
        registrationStatus:
          type: string
          description: |
            cohortStatus
            De toegestane waarden voor de status van een cohort van een aangeboden opleiding. Hiermee kan bijvoorbeeld worden aangegeven of een bepaald cohort open staat voor aanmelding, of dat het gesloten is.
          enum:
            - open
            - closed
    MBO-Offering:
      type: object
      description: MBO-toetsafname add-on attributes to the offerings
      required: &ref_55
        - offeringState
        - consumerKey
      properties: &ref_56
        consumerKey:
          type: string
        duration:
          type: string
          description: |
            To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4
            The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
            For easy info https://en.wikipedia.org/wiki/ISO_8601#Durations
          pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
          example: P1DT30H4S
        lastPossibleStartDateTime:
          type: string
          description: The moment on which this offering starts, RFC3339 (date-time)
          format: date-time
          example: '2020-12-15T08:50:00+01:00'
        startOptions:
          type: string
          description: |
            type of start that is allowed
          enum:
            - individualStart
            - triggeredSart
        durationFrom:
          type: string
          description: |
            determine how to determine the start moment for the component
          enum:
            - startDateTime
            - individualStartDateTime
            - triggeredStartDateTime
        durationUntil:
          type: string
          description: |
            determine how the length of the component should be determined (fixed endpoint or based on the duration)
          enum:
            - testDuration
            - endDateTime
        safety:
          type: array
          description: |
            safety
            See https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/5.
            TODO : make list
          items:
            type: string
            enum:
              - SecuredComputer
              - Fixed Location
              - Surveillance
        offeringState:
          type: string
          description: |
            offeringState
            enum to indicate the state of the offering
          enum:
            - active
            - cancelled
        locationCode:
          type: string
          example: A-12a
          description: |
            locationCode
            string to indicate test room/space (for recognition, we will not use the location structure from OOAPI)
        irregularities:
          type: string
          example: There was a lot of noise from the construction site nearby
          description: |
            irregularities
            string with information about irragularies that effected all students in this offering
        documents:
          type: array
          items:
            type: string
          minItems: 0
          description: |
            documents
            documents to be added to this offering
            TODO : Make a real object : see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/blob/main/doc/flow4.md
    ConsumerOnOffering:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: &ref_58
        anyOf:
          - type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          - type: object
            description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome
            required: *ref_53
            properties: *ref_54
          - type: object
            description: MBO-toetsafname add-on attributes to the offerings
            required: *ref_55
            properties: *ref_56
      example: &ref_59
        - consumerKey: MBO-toetsafname
          duration: P1DT30H4S
          lastPossibleStartDateTime: '2020-12-15T08:50:00'
          startOptions: individualStart
          durationFrom: individualStartDateTime
          durationUntil: testDuration
          safety:
            - SecuredComputer
            - Fixed Location
          offeringState: active
          locationCode: A-12a
          irregularities: There was a lot of noise from the construction site nearby
          documents:
            - documentId: 454566464665355500
              documentType: sessionReport
              documentName: Session report on Session tbd.pdf
    OfferingProperties:
      type: object
      description: Either a program, course or component offering which descrbes the program, course or offering in time
      required: &ref_62
        - primaryCode
        - offeringType
        - name
        - description
        - teachingLanguage
        - resultExpected
      properties: &ref_63
        primaryCode:
          description: The primary human readable identifier for this offering. This is often the source identifier as defined by the institution.
          example:
            codeType: offeringCode
            code: INFOMQNM-20FS
          readOnly: true
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        offeringType:
          type: string
          description: The type of this offering
          enum:
            - program
            - course
            - component
          example: component
        academicSession:
          type: object
          description: |
            A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
            Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
          required: *ref_51
          properties: *ref_52
        name:
          type: array
          description: The name of this offering
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Final written test for INFOMQNM for fall semseter 2020
            - language: nl-NL
              values: Eindtoets vor het vak
        abbreviation:
          type: string
          description: The abbreviation or internal code used to identify this offering
          maxLength: 256
          example: Test-INFOMQNM-20FS
        description:
          type: array
          description: The description of this offering.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: |
                'Prove in writing knowledge of research methods, including:
                Acquire knowledge of HCI research paradigms
                Able to design suitable research studies (e.g., choose between within and between subject designs)
                Define/apply/design metrics and scales
                Define/produce materials (e.g., stimuli and questionnaires)
                Define protocols for research studies
                Understands and take in account concepts of reliability and validity
                Analyze and improve methods and analysis of published scientific articles
                Able to deliver scientific reports
                Prove in writing knowledge of ­­­statistics, including:
                Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates)
                Data preparation (e.g., coding and feature selection)
                Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors)
                Select an appropriate sampling method (e.g., stratified)
                Perform parametric tests (e.g., repeated measures (M)ANOVA)
                Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'
        teachingLanguage:
          type: string
          description: The (primary) teaching language in which this offering is given, should be a three-letter language code as specified by ISO 639-2.
          minLength: 3
          maxLength: 3
          pattern: ^[a-z]{3}$
          example: nld
        modeOfDelivery:
          type: array
          description: |
            The mode of delivery of the component (ECTS-mode of delivery)
            - distance-learning: afstandsleren
            - on campus: op de campus
            - online: online
            - hybrid: hybride
            - situated: op locatie
          items: *ref_39
        maxNumberStudents:
          type: number
          description: The maximum number of students allowed to enroll for this offering
          format: int32
          minimum: 0
          example: 200
        enrolledNumberStudents:
          type: number
          description: The number of students that have already enrolled for this offering
          format: int32
          minimum: 0
          example: 150
        pendingNumberStudents:
          type: number
          description: The number of students that have a pending enrollment request for this offering
          format: int32
          minimum: 0
          example: 50
        minNumberStudents:
          type: number
          description: The minimum number of students needed for this offering to proceed
          format: int32
          minimum: 0
          example: 15
        resultExpected:
          type: boolean
          description: |
            resultExpected, previously knwon as isLineItem is used so the specific instance of the object is identified as being an element that CAN contain “grade” information.
            Offerings do not always have to result in a grade or an other type of result. 
            If there is a result expected from a programOffering/courseOffering/componentOffering the is resultExpected field should parse true
          example: true
        resultValueType:
          type: string
          description: The result value type for this offering
          enum: *ref_57
          example: 1-10
        link:
          type: string
          description: URL of this offering's webpage.
          format: uri
          maxLength: 2048
          example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
        consumers:
          type: array
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          items: *ref_58
          example: *ref_59
        ext:
          type: object
          description: Object for additional non-standard attributes
    Offering:
      allOf: &ref_68
        - type: object
          description: ID of Either a program, course or component offering which descrbes the program, course or offering in time
          required: *ref_60
          properties: *ref_61
        - type: object
          description: Either a program, course or component offering which descrbes the program, course or offering in time
          required: *ref_62
          properties: *ref_63
    costType:
      type: string
      description: |
        The type of the cost. This is an *extensible enumeration*.

        The following values have been defined in the specification:
          - `STAP eligible`: the costs that a student can get STAP subsidy for
          - `total costs`: the total costs that a student is to pay to follow this offering

        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
      example: total costs
      x-ooapi-extensible-enum: &ref_64
        - STAP eligible
        - total costs
    Cost:
      type: object
      required: &ref_69
        - costType
      properties: &ref_70
        costType:
          type: string
          description: |
            The type of the cost. This is an *extensible enumeration*.

            The following values have been defined in the specification:
              - `STAP eligible`: the costs that a student can get STAP subsidy for
              - `total costs`: the total costs that a student is to pay to follow this offering

            Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.
          example: total costs
          x-ooapi-extensible-enum: *ref_64
        amount:
          type: string
          pattern: ^\d+(?:\.\d+)?$
          description: The total amount of the cost as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
          example: '340.84'
        vatAmount:
          type: string
          pattern: ^\d+(?:\.\d+)?$
          description: The part of the cost that is VAT, as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
          example: '40'
        amountWithoutVat:
          type: string
          pattern: ^\d+(?:\.\d+)?$
          description: The part of the cost that is non-VAT. as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.
          example: '300.84'
        currency:
          type: string
          description: The currency this cost is in. Should correspond to one of the currency codes from ISO 4217.
          example: EUR
        displayAmount:
          type: array
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          description: An array of optional pre-formatted strings in different locales. Clients can choose to use this string instead of rendering their own based on the current locale of the user.
          example:
            - language: nl-NL
              value: €380,84
            - language: en-US
              value: $401.17
        ext:
          type: object
          description: Object for additional non-standard attributes
      additionalProperties: false
    roomType:
      type: string
      description: |
        The type of this room
        - general purpose: algemeen
        - lecture room: collegezaal
        - computer room: computerruimte
        - laboratory: laboratorium
        - office: kantoor
        - workspace: werkruimte
        - exam location: tentamenruimte
        - study room: studieruimte
        - examination room: onderzoekskamer
        - conference room: vergaderkamer
      enum: &ref_65
        - general purpose
        - lecture room
        - computer room
        - laboratory
        - office
        - workspace
        - exam location
        - study room
        - examination room
        - conference room
      example: exam location
    Building:
      type: object
      description: An object describing a building and the properties of a building.
      required: &ref_66
        - buildingId
        - name
        - address
        - primaryCode
      properties: &ref_67
        buildingId:
          type: string
          description: Unique id of this building
          format: uuid
          example: 123e4567-e89b-12d3-a456-331214174000
        primaryCode:
          description: The primary human readable identifier for this building. This is often the source identifier as defined by the institution.
          example:
            codeType: buildingId
            code: '45'
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        abbreviation:
          type: string
          description: The abbreviation of the name of this building
          maxLength: 256
          example: Bb
        name:
          type: array
          description: The name of this building
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Beatrix building
        description:
          type: array
          description: The description of this building.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: external rooms location for exams
        address:
          type: object
          description: The full street address
          required: *ref_8
          properties: *ref_9
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
          example:
            - codeType: bagId
              code: '0344100000139910'
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example: *ref_30
        ext:
          type: object
          description: Object for additional non-standard attributes
    Room:
      type: object
      description: An area within a building where education can take place
      required: &ref_72
        - roomId
        - roomType
        - name
        - primaryCode
      properties: &ref_73
        roomId:
          type: string
          description: Unique id for this room
          format: uuid
          example: 123e4567-e89b-12d3-a456-332114174000
        primaryCode:
          description: The primary human readable identifier for the room. This is often the source identifier as defined by the institution.
          example:
            codeType: roomCode
            code: Bb4.54
          type: object
          properties: *ref_4
          required: *ref_5
          additionalProperties: false
        roomType:
          type: string
          description: |
            The type of this room
            - general purpose: algemeen
            - lecture room: collegezaal
            - computer room: computerruimte
            - laboratory: laboratorium
            - office: kantoor
            - workspace: werkruimte
            - exam location: tentamenruimte
            - study room: studieruimte
            - examination room: onderzoekskamer
            - conference room: vergaderkamer
          enum: *ref_65
          example: exam location
        abbreviation:
          type: string
          description: The abbreviation of the name of this room
          maxLength: 256
          example: Bb4.54
        name:
          type: array
          description: The name of this room
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Beatrix building room 4.54
        description:
          type: array
          description: The description of this room. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: External education and exam room 4.54
        totalSeats:
          type: integer
          format: int32
          description: The total number of seats located in the room
          example: 300
        availableSeats:
          type: integer
          format: int32
          description: The total number of available (=non-reserved) seats in the room
          example: 200
        floor:
          type: string
          description: The floor on which this room is located
          example: '4'
        wing:
          type: string
          description: The wing in which this room is located
          example: None
        geolocation:
          type: object
          description: Geolocation of the entrance of this room (WGS84 coordinate reference system)
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: number
              format: double
              example: 52.088255
            longitude:
              type: number
              format: double
              example: 5.106669
        otherCodes:
          type: array
          description: An array of additional human readable codes/identifiers for the entity being described.
          items:
            type: object
            properties: *ref_4
            required: *ref_5
            additionalProperties: false
            example: *ref_11
        building:
          description: |
            The building in which the room is located. [`expandable`](#tag/building_model)
            By default only the `buildingId` (a string) is returned. If the client requested an expansion of `building` the full building object should be returned.
          oneOf:
            - title: buildingId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Building object
              type: object
              description: An object describing a building and the properties of a building.
              required: *ref_66
              properties: *ref_67
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items:
            type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          example: *ref_30
        ext:
          type: object
          description: Object for additional non-standard attributes
    ProgramOffering:
      allOf: &ref_71
        - allOf: *ref_68
        - type: object
          required:
            - modeOfStudy
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              description: The moment on which this offering starts, RFC3339 (full-date)
              format: date
              example: '2019-08-21'
            endDate:
              type: string
              description: The moment on which this offering ends, RFC3339 (full-date)
              format: date
              example: '2023-06-15'
            enrollStartDate:
              type: string
              description: The first day on which a student can enroll for this program.
              format: date
              example: '2019-05-01'
            enrollEndDate:
              type: string
              description: The last day on which a student can enroll for this program.
              format: date
              example: '2019-08-01'
            flexibleEntryPeriodStart:
              type: string
              description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.
              format: date
            flexibleEntryPeriodEnd:
              type: string
              description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.
              format: date
            addresses:
              type: array
              description: Addresses for this offering
              items:
                type: object
                description: The full street address
                required: *ref_8
                properties: *ref_9
            priceInformation:
              type: array
              description: Price information for this offering.
              items:
                type: object
                required: *ref_69
                properties: *ref_70
                additionalProperties: false
              minItems: 1
            program:
              description: |
                The Program that is offered in this programoffering. [`expandable`](#tag/program_model)
                By default only the `programId` (a string) is returned. If the client requested an expansion of `program` the full program object should be returned.
              oneOf:
                - title: programId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Program object
                  allOf: *ref_40
            organization:
              description: |
                The organization that manages this programeoffering. [`expandable`](#tag/organization_model)
                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
              oneOf:
                - title: organizationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Organization object
                  type: object
                  description: A description of a group of people working together to achieve a goal
                  required: *ref_28
                  properties: *ref_29
            academicSession:
              description: |
                The academicsession during which this programoffering takes place. [`expandable`](#tag/academic_session_model)
                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.
              oneOf:
                - title: academicSessionId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: AcademicSession object
                  type: object
                  description: |
                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                  required: *ref_51
                  properties: *ref_52
    CourseOffering:
      allOf: &ref_76
        - allOf: *ref_68
        - type: object
          required:
            - modeOfStudy
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              description: The moment on which this offering starts, RFC3339 (full-date)
              format: date
              example: '2019-08-21'
            endDate:
              type: string
              description: The moment on which this offering ends, RFC3339 (full-date)
              format: date
              example: '2019-10-23'
            enrollStartDate:
              type: string
              description: The first day on which a student can enroll for this course.
              format: date
              example: '2019-05-01'
            enrollEndDate:
              type: string
              description: The last day on which a student can enroll for this course.
              format: date
              example: '2019-08-01'
            flexibleEntryPeriodStart:
              type: string
              description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.
              format: date
            flexibleEntryPeriodEnd:
              type: string
              description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.
              format: date
            addresses:
              type: array
              description: Addresses for this offering
              items:
                type: object
                description: The full street address
                required: *ref_8
                properties: *ref_9
            priceInformation:
              type: array
              description: Price information for this offering.
              items:
                type: object
                required: *ref_69
                properties: *ref_70
                additionalProperties: false
            course:
              description: |
                The course that is offered in this courseoffering. [`expandable`](#tag/course_model)
                By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.
              oneOf:
                - title: courseId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Course object
                  allOf: *ref_49
            programOffering:
              description: |
                The programoffering where this courseoffering is related to. [`expandable`](#tag/program_offering_model)
                By default only the `programOfferingId` (a string) is returned. If the client requested an expansion of `programOffering` the full programOffering object should be returned.
              oneOf:
                - title: programOfferingId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: ProgramOffering object
                  allOf: *ref_71
            organization:
              description: |
                The organization that manages this courseoffering. [`expandable`](#tag/organization_model)
                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
              oneOf:
                - title: organizationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Organization object
                  type: object
                  description: A description of a group of people working together to achieve a goal
                  required: *ref_28
                  properties: *ref_29
            academicSession:
              description: |
                The academicsession during which this courseoffering takes place. [`expandable`](#tag/academic_session_model)
                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.
              oneOf:
                - title: academicSessionId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: AcademicSession object
                  type: object
                  description: |
                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                  required: *ref_51
                  properties: *ref_52
    ComponentOffering:
      allOf: &ref_101
        - allOf: *ref_68
        - type: object
          required:
            - startDateTime
            - endDateTime
          properties:
            startDateTime:
              type: string
              description: The moment on which this offering starts, RFC3339 (date-time)
              format: date-time
              example: '2020-12-15T20:00:00+01:00'
            endDateTime:
              type: string
              description: The moment on which this offering ends, RFC3339 (date-time)
              format: date-time
              example: '2020-12-16T20:00:00+01:00'
            enrollStartDate:
              type: string
              description: The first day on which a student can enroll for this course.
              format: date
            enrollEndDate:
              type: string
              description: The last day on which a student can enroll for this course.
              format: date
            resultWeight:
              type: integer
              description: The result weight of this offering
              minimum: 0
              maximum: 100
              example: 100
            addresses:
              type: array
              description: Addresses for this offering
              items:
                type: object
                description: The full street address
                required: *ref_8
                properties: *ref_9
            priceInformation:
              type: array
              description: Price information for this offering.
              items:
                type: object
                required: *ref_69
                properties: *ref_70
                additionalProperties: false
            room:
              type: object
              description: An area within a building where education can take place
              required: *ref_72
              properties: *ref_73
            component:
              description: |
                The component that is offered in this componentoffering. [`expandable`](#tag/component_model)
                By default only the `componentId` (a string) is returned. If the client requested an expansion of `component` the full component object should be returned.
              oneOf:
                - title: componentId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Component object
                  type: object
                  description: A component is a part of a course
                  required: *ref_74
                  properties: *ref_75
            courseOffering:
              description: |
                The courseoffering where this componentoffering is related to. [`expandable`](#tag/course_offering_model)
                By default only the `courseOfferingId` (a string) is returned. If the client requested an expansion of `courseOffering` the full courseOffering object should be returned.
              oneOf:
                - title: courseOfferingId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: CourseOffering object
                  allOf: *ref_76
            organization:
              description: |
                The organization that manages this componentoffering. [`expandable`](#tag/organization_model)
                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.
              oneOf:
                - title: organizationId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: Organization object
                  type: object
                  description: A description of a group of people working together to achieve a goal
                  required: *ref_28
                  properties: *ref_29
            academicSession:
              description: |
                The academicsession during which this componentoffering takes place. [`expandable`](#tag/academic_session_model)
                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.
              oneOf:
                - title: academicSessionId
                  type: string
                  description: An identifier of another resource.
                  format: uuid
                - title: AcademicSession object
                  type: object
                  description: |
                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.
                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.
                  required: *ref_51
                  properties: *ref_52
    associationRole:
      type: string
      description: |
        The role of this person associated with the offering
          - student: student
          - lecturer: docent
          - teaching assistant: studentassistent
          - coordinator: coördinator
          - guest: gast
      enum: &ref_79
        - student
        - lecturer
        - teaching assistant
        - coordinator
        - guest
      example: student
    associationState:
      type: string
      description: The state of this association
      enum: &ref_80
        - pending
        - canceled
        - denied
        - associated
        - queued
      example: associated
    resultState:
      type: string
      description: The state of this result
      enum: &ref_90
        - in progress
        - postponed
        - completed
        - queued
      example: completed
    AssociationId:
      type: object
      properties: &ref_84
        associationId:
          type: string
          description: Unique id of this association
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
      required: &ref_85
        - associationId
    remoteAssociationState:
      type: string
      description: The state of this association for the institution performing the request.
      enum: &ref_81
        - pending
        - canceled
        - denied
        - associated
        - queued
      example: associated
    MBO-Association:
      type: object
      description: MBO-toetsafname add-on attributes to the Association
      required: &ref_77
        - consumerKey
      properties: &ref_78
        consumerKey:
          type: string
        startUpURL:
          type: string
          description: |
            URL to be used to start this assocation by the user
          format: uri
          maxLength: 2048
          example: https://surf.nl
        additionalTimeInMin:
          type: integer
          format: int32
          example: 30
          description: |
            If you need additional time, specify how much max
            To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4
        personalNeeds:
          type: array
          items:
            type: string
          minItems: 0
          description: |
            personalNeed
            personalNeed to be added for this student
            TODO : make enum: see https://www.imsglobal.org/sites/default/files/spec/afa/3p0/information_model/imsafa3p0pnp_v1p0_InfoModel.html
            examples : "extraTime", "spoken", "spell-checker-on-screen"
    ConsumerOnAssociation:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: &ref_82
        anyOf:
          - type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          - type: object
            description: MBO-toetsafname add-on attributes to the Association
            required: *ref_77
            properties: *ref_78
      example: &ref_83
        - consumerKey: MBO-toetsafname
          additionalTimeInMin: 30
          personalNeeds:
            - extraTime
            - spoken
            - spell-checker-on-screen
    AssociationProperties:
      type: object
      description: A relationship between a person object and an offering
      required: &ref_86
        - associationType
        - role
        - state
      properties: &ref_87
        associationType:
          type: string
          description: The type of this association
          enum:
            - programOfferingAssociation
            - courseOfferingAssociation
            - componentOfferingAssociation
          example: componentOfferingAssociation
          readOnly: true
        role:
          type: string
          description: |
            The role of this person associated with the offering
              - student: student
              - lecturer: docent
              - teaching assistant: studentassistent
              - coordinator: coördinator
              - guest: gast
          enum: *ref_79
          example: student
        state:
          readOnly: true
          type: string
          description: The state of this association
          enum: *ref_80
          example: associated
        remoteState:
          writeOnly: true
          type: string
          description: The state of this association for the institution performing the request.
          enum: *ref_81
          example: associated
        consumers:
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          type: array
          items: *ref_82
          example: *ref_83
        ext:
          type: object
          description: Object for additional non-standard attributes
    Association:
      allOf: &ref_96
        - type: object
          properties: *ref_84
          required: *ref_85
        - type: object
          description: A relationship between a person object and an offering
          required: *ref_86
          properties: *ref_87
    passState:
      type: string
      description: The state of this result
      enum: &ref_91
        - unknown
        - passed
        - failed
      example: passed
    MBO-Result:
      type: object
      description: MBO-toetsafname add-on attributes to the result
      required: &ref_88
        - attendance
        - consumerKey
      properties: &ref_89
        consumerKey:
          type: string
        attendance:
          type: string
          description: |
            attendance
            indication of presence during the test (mandatory). 
            Possible values are notPresent (niet aanwezig),
            notStarted (aanwezig maar niet gestart),
            notFinished (aanwezig en gestart maar niet afgerond/ingeleverd)
            en present (aanwezig en afgerond/ingeleverd)"
          enum:
            - notPresent
            - notStarted
            - notFinished
            - present
        assessorId:
          type: string
          description: |
            assessorId
            the identity of the assessor. 
        assessorCode:
          type: string
          description: |
            assessorCode
            the identity code of the assessor. 
        irregularities:
          type: string
          description: |
            irregularities: textual information about the student test, such as irregularities
          example: student cheated and 15 min late
        final:
          type: boolean
          description: |
            final: indicates that the result has been finalised by the exam committee. 
            Can be done in Toetsplanning (or even DR), so most Toetsafname applications will send false. (optional, default false) 
        documents:
          type: array
          items:
            type: string
          minItems: 0
          description: |
            documents
            documents to be added to this offering
            TODO : Make a real object : see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/blob/main/doc/flow4.md
    ConsumerOnResult:
      type: array
      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      items: &ref_92
        anyOf:
          - type: object
            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.
            required: *ref_12
            properties: *ref_13
            additionalProperties: true
          - type: object
            description: MBO-toetsafname add-on attributes to the result
            required: *ref_88
            properties: *ref_89
      example: &ref_93
        - consumerKey: MBO-toetsafname
          attendance: present
          assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
          assessorCode: JAJE
          irregularities: student cheated and 15 min late
          final: true
          documents:
            - documentId: 123454
              documentType: assessmentForm
              documentName: Assessment form for Jake Doe.pd
    Result:
      type: object
      description: A result as part of an association
      required: &ref_94
        - state
        - resultDate
      properties: &ref_95
        state:
          type: string
          description: The state of this result
          enum: *ref_90
          example: completed
        pass:
          type: string
          description: The state of this result
          enum: *ref_91
          example: passed
        comment:
          type: string
          description: The comment on this result
        score:
          type: string
          description: The score of this program/course/component association (based on resultValueType in offering)
          example: '9'
        resultDate:
          type: string
          description: The date this result has been published, RFC3339 (full-date)
          format: date
          example: '2020-09-28'
        consumers:
          type: array
          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          items: *ref_92
          example: *ref_93
        ext:
          type: object
          description: Object for additional non-standard attributes
    ProgramResult:
      allOf: &ref_97
        - type: object
          description: A result as part of an association
          required: *ref_94
          properties: *ref_95
        - type: object
          required:
            - studyLoad
          properties:
            studyLoad:
              type: object
              description: The amount of effort to complete this education in the specified unit.
              properties: *ref_25
              example: *ref_26
    ProgramOfferingAssociationExpandable:
      allOf: &ref_120
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_97
            person:
              type: object
              properties: *ref_14
              required: *ref_15
    CourseResult:
      allOf: &ref_98
        - type: object
          description: A result as part of an association
          required: *ref_94
          properties: *ref_95
        - type: object
          required:
            - studyLoad
          properties:
            studyLoad:
              type: object
              description: The amount of effort to complete this education in the specified unit.
              properties: *ref_25
              example: *ref_26
    CourseOfferingAssociationExpandable:
      allOf: &ref_121
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_98
            person:
              type: object
              properties: *ref_14
              required: *ref_15
    ComponentResult:
      allOf: &ref_99
        - type: object
          description: A result as part of an association
          required: *ref_94
          properties: *ref_95
        - type: object
          required:
            - weight
          properties:
            weight:
              type: integer
              description: The weight to 100 as total for this offering in the course
              format: int32
              minimum: 0
              maximum: 100
              example: 100
    ComponentOfferingAssociationExpandable:
      allOf: &ref_122
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_99
            person:
              type: object
              properties: *ref_14
              required: *ref_15
    ComponentOfferingAssociation:
      allOf: &ref_100
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_99
    ComponentOfferingAssociationExpandedWrite:
      allOf: &ref_123
        - allOf: *ref_100
      properties: &ref_124
        person:
          oneOf:
            - title: personId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Person
              allOf: *ref_41
        offering:
          oneOf:
            - title: offeringId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: ComponentOffering
              allOf: *ref_101
    ProgramOfferingAssociation:
      allOf: &ref_102
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_97
    CourseOfferingAssociation:
      allOf: &ref_103
        - allOf: *ref_96
        - type: object
          properties:
            result:
              allOf: *ref_98
    AssociationFull:
      oneOf: &ref_125
        - allOf: *ref_102
        - allOf: *ref_103
        - allOf: *ref_100
      properties: &ref_126
        person:
          readOnly: true
          oneOf:
            - title: personId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: Person
              allOf: *ref_41
        offering:
          oneOf:
            - title: offeringId
              type: string
              description: An identifier of another resource.
              format: uuid
            - title: ComponentOffering
              allOf: *ref_101
            - title: CourseOffering
              allOf: *ref_76
            - title: ProgramOffering
              allOf: *ref_71
    PostResponse:
      type: object
      description: A system message as a response to a POST message
      required: &ref_127
        - message
      properties: &ref_128
        message:
          description: information displayed to user
          type: array
          minItems: 1
          items:
            type: object
            description: A String with an associated language code.
            properties: *ref_2
            example: *ref_3
          example:
            - language: en-GB
              value: Your enrollment was partly succesful, you have been placed on the waitinglist
        redirect:
          description: URL where additional information can be found e.g. by use of deeplink
          type: string
          format: uri
  responses:
    ErrorBadRequest:
      description: Bad request
      content: &ref_106
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorUnauthorized:
      description: Unauthorized
      content: &ref_107
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorForbidden:
      description: Forbidden
      content: &ref_108
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorNotFound:
      description: Not Found
      content: &ref_109
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorMethodNotAllowed:
      description: Method not allowed
      content: &ref_110
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorTooManyRequests:
      description: Too many requests
      content: &ref_111
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
    ErrorInternalServerError:
      description: Internal Server Error
      content: &ref_112
        application/problem+json:
          schema:
            type: object
            description: A system message including the error code and an explanation
            required: *ref_104
            properties: *ref_105
  parameters:
    pageSize:
      name: pageSize
      in: query
      description: The number of items per page
      required: false
      schema: &ref_113
        type: integer
        format: int32
        default: 10
        enum:
          - 10
          - 20
          - 50
          - 100
          - 250
    pageNumber:
      name: pageNumber
      in: query
      description: The page number to get. Page numbers start at 1.
      required: false
      schema: &ref_114
        type: integer
        format: int32
        example: 1
        minimum: 1
    consumer:
      name: consumer
      in: query
      description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
      required: false
      schema: &ref_115
        type: string
    search:
      name: q
      in: query
      description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
      required: false
      schema: &ref_116
        type: string
    teachingLanguage:
      name: teachingLanguage
      in: query
      description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.
      required: false
      schema: &ref_117
        type: string
        pattern: ^[a-z]{3}$
        minLength: 3
        maxLength: 3
      example: nld
paths:
  /persons/{personId}:
    get:
      summary: GET /persons/{personId}
      description: Get a single person.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - persons
      parameters:
        - name: personId
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf: *ref_41
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /components/{componentId}:
    get:
      summary: GET /components/{componentId}
      description: Get a single component.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - components
      parameters:
        - name: componentId
          in: path
          description: component ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - course
                - organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: A component is a part of a course
                required: *ref_74
                properties: *ref_75
              examples:
                Request details of one test (Flow 0.2):
                  value:
                    componentId: c5fca27e-ccc1-430d-9888-90e005ad6a86
                    primaryCode:
                      codeType: testID
                      code: '5'
                    componentType: test
                    name:
                      - language: nl-NL
                        value: Rekenen 2F voor technische opleidingen
                    abbreviation: REK2F-TECH
                    modeOfDelivery:
                      - situated
                    duration: PT60M
                    description:
                      - language: nl-NL
                        value: Rekentest MBO op niveau 2F toegespitst op technische opleidingen zoals procestechniek/machinebouw
                    teachingLanguage: nld
                    assessment:
                      - language: nl-NL
                        value: Digitale toetsing
                    organization: 452c1a86-a0af-475b-b03f-724878b0f387
                    consumers:
                      - consumerKey: MBO-toetsafname
                        extraTime: P60M
                        availablePersonalNeeds:
                          - extraTime
                          - spoken
                          - spell-checker-on-screen
                        exam: true
                        resultValueType: 1.0-10.0
                        passFrom: '5.5'
                        retries: 2
                        status: active
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /components/{componentId}/offerings:
    get:
      summary: GET /components/{componentId}/offerings
      description: Get a list of all offerings for this component, ordered chronologically.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: componentId
          in: path
          description: Component ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_113
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_114
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_115
        - name: q
          in: query
          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)
          required: false
          schema: *ref_116
        - name: teachingLanguage
          in: query
          description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.
          required: false
          schema: *ref_117
          example: nld
        - name: resultExpected
          in: query
          description: Filter by resultExpected
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=<today>`).
          required: false
          schema:
            type: string
            format: date
        - name: until
          in: query
          description: Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).
          required: false
          schema:
            type: string
            format: date
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - offeringId
                - name
                - startDateTime
                - endDateTime
                - '-offeringId'
                - '-name'
                - '-startDateTime'
                - '-endDateTime'
            default:
              - startDateTime
            example:
              - offeringId
              - '-startDateTime'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: *ref_118
                    properties: *ref_119
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          allOf: *ref_101
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /offerings/{offeringId}:
    get:
      summary: GET /offerings/{offeringId}
      description: Get a single offering.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - program
                - programOffering
                - course
                - courseOffering
                - component
                - organization
                - academicSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - title: componentOffering
                    allOf: *ref_101
              examples:
                Read current state of offering (flow 2.6):
                  value:
                    primaryCode:
                      codeType: offeringCode
                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                    offeringType: component
                    academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125
                    name:
                      - language: nl-NL
                        value: 20220621-12:45-Remindo rekenen MBO-3
                    description:
                      - language: nl-NL
                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                    teachingLanguage: nld
                    modeOfDelivery:
                      - situated
                    resultExpected: true
                    consumers:
                      - consumerKey: MBO-toetsafname
                        duration: P60M
                        lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'
                        startOptions: individualStart
                        durationFrom: individualStartDateTime
                        durationUntil: testDuration
                        safety:
                          - Fixed Location
                          - Surveillance
                        offeringState: active
                        locationCode: A-22
                    startDateTime: '2022-06-21T12:45:00+01:00'
                    endDateTime: '2022-06-21T13:45:00+01:00'
                    component: c5fca27e-ccc1-430d-9888-90e005ad6a86
                Read current state of offering (flow 2.6 minimal):
                  value:
                    primaryCode:
                      codeType: offeringCode
                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                    offeringType: component
                    name:
                      - language: nl-NL
                        value: 20220621-12:45-Remindo rekenen MBO-3
                    description:
                      - language: nl-NL
                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                    teachingLanguage: nld
                    resultExpected: true
                    startDateTime: '2022-06-21T12:45:00+01:00'
                    endDateTime: '2022-06-21T13:45:00+01:00'
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
    patch:
      summary: PATCH /offerings/{offeringId}
      description: |
        PATCH update a single offering based on the offeringID provided. 
      security:
        - openId:
            - offerings.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: componentOffering
              allOf: *ref_101
            examples:
              Delete offering (Flow 2.5):
                value:
                  state: canceled
              Send attendance and offering report directly (Flow 4.1):
                value:
                  consumers:
                    - consumerKey: MBO-toetsafname
                      irregularities: There was a lot of noise from the construction site nearby.
                      documents:
                        - documentId: '454566464665355545'
                          documentType: sessionReport
                          documentName: Session report on Session tbd.pdf
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
    put:
      summary: PUT /offerings/{offeringId}
      description: |
        PUT / create an offering  or update a single offering based on the offeringID provided. 
        You want to PUT a resource to the same URI you intend to GET it from. also check RFC 72314.3.4 PUT.
      security:
        - openId:
            - offerings.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - offerings
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: componentOffering
              allOf: *ref_101
            examples:
              Create offering (zitting) without students (flow 2.1):
                value:
                  primaryCode:
                    codeType: offeringCode
                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                  offeringType: component
                  academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125
                  name:
                    - language: nl-NL
                      value: 20220621-12:45-Remindo rekenen MBO-3
                  description:
                    - language: nl-NL
                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                  teachingLanguage: nld
                  modeOfDelivery:
                    - situated
                  resultExpected: true
                  consumers:
                    - consumerKey: MBO-toetsafname
                      duration: P60M
                      lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'
                      startOptions: individualStart
                      durationFrom: individualStartDateTime
                      durationUntil: testDuration
                      safety:
                        - Fixed Location
                        - Surveillance
                      offeringState: active
                      locationCode: A-22
                  startDateTime: '2022-06-21T12:45:00+01:00'
                  endDateTime: '2022-06-21T13:45:00+01:00'
                  component: c5fca27e-ccc1-430d-9888-90e005ad6a86
              Create offering (zitting) without students (flow 2.1 minimal):
                value:
                  primaryCode:
                    codeType: offeringCode
                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13
                  offeringType: component
                  name:
                    - language: nl-NL
                      value: 20220621-12:45-Remindo rekenen MBO-3
                  description:
                    - language: nl-NL
                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3
                  teachingLanguage: nld
                  resultExpected: true
                  startDateTime: '2022-06-21T12:45:00+01:00'
                  endDateTime: '2022-06-21T13:45:00+01:00'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /offerings/{offeringId}/associations:
    get:
      summary: GET /offerings/{offeringId}/associations
      description: Get a list of all offering associations.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: The number of items per page
          required: false
          schema: *ref_113
        - name: pageNumber
          in: query
          description: The page number to get. Page numbers start at 1.
          required: false
          schema: *ref_114
        - name: consumer
          in: query
          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
          required: false
          schema: *ref_115
        - name: associationType
          in: query
          description: Filter by association type
          required: false
          schema:
            type: string
            enum:
              - programOffering
              - courseOffering
              - componentOffering
        - name: role
          in: query
          description: Filter by role
          required: false
          schema:
            type: string
            description: |
              The role of this person associated with the offering
                - student: student
                - lecturer: docent
                - teaching assistant: studentassistent
                - coordinator: coördinator
                - guest: gast
            enum: *ref_79
            example: student
        - name: state
          in: query
          description: Filter by state
          required: false
          schema:
            type: string
            description: The state of this association
            enum: *ref_80
            example: associated
        - name: result-state
          in: query
          description: Filter by result state
          required: false
          schema:
            type: string
            description: The state of this result
            enum: *ref_90
            example: completed
        - name: sort
          in: query
          explode: false
          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - associationId
                - '-associationId'
            default:
              - associationId
            example:
              - associationId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required: *ref_118
                    properties: *ref_119
                  - type: object
                    required:
                      - items
                    properties:
                      items:
                        type: array
                        items:
                          oneOf:
                            - allOf: *ref_120
                            - allOf: *ref_121
                            - allOf: *ref_122
                      ext:
                        type: object
                        description: Object for additional non-standard attributes
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /offerings/{offeringId}/associations{associationId}:
    put:
      summary: PUT /offerings/{offeringId}/associations/{associationId}
      operationId: replace-association
      description: |
        PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. 
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: offeringId
          in: path
          description: Offering ID
          required: true
          schema:
            type: string
            format: uuid
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf: *ref_123
              properties: *ref_124
            examples:
              Add student to created offering (zitting) (flow 2.2.B and 2.3):
                value:
                  associationType: componentOfferingAssociation
                  role: student
                  state: associated
                  consumers:
                    - consumerKey: MBO-toetsafname
                      startUpURL: https://myComponent.nl?test
                      extraTimeInMin: 30
                      personalNeeds:
                        - extraTime
                        - spoken
                        - spell-checker-on-screen
                  person:
                    personId: 111-2222-33-4444-222
                    primaryCode:
                      codeType: studentNumber
                      code: '1234567'
                    givenName: Maartje
                    surnamePrefix: van
                    surname: Damme
                    displayName: Maartje van Damme
                    activeEnrollment: true
                    affiliations:
                      - student
                    mail: vandamme.mcw@student.roc.nl
                    languageOfChoice:
                      - nl-NL
                    otherCodes:
                      - codeType: accountId
                        code: s1234567@student.roc.nl
                      - codeType: eckid
                        code: https://roc.nl/8078d3...28bc85
                  offering: 123e4567-e89b-12d3-a456-134564174000
              Change student enrollment to offering (zitting) (flow 2.x):
                value:
                  associationType: componentOfferingAssociation
                  role: student
                  state: associated
                  consumers:
                    - consumerKey: MBO-toetsafname
                      startUpURL: https://myComponent.nl?test
                      extraTimeInMin: 30
                      personalNeeds:
                        - extraTime
                        - spoken
                        - spell-checker-on-screen
                  person: 111-2222-33-4444-222
                  offering: 123e4567-e89b-12d3-a456-134564174000
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
  /associations/{associationId}:
    get:
      summary: GET /associations/{associationId}
      description: |
        Get a single association.
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
        - name: expand
          in: query
          explode: false
          description: Optional properties to expand, separated by a comma
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - person
                - offering
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf: *ref_125
                properties: *ref_126
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
    patch:
      summary: PATCH /associations/{associationId}
      description: |
        Update the status or result of an enrollment. Other elements of the association object COULD 
        also be PATCHED. But are not likely and have therefor not been included in this endpoint.
        Implementation of the PATCH activity is based on use PATCH with JSON Merge Patch standard, 
        a specialized media type `application/merge-patch+json` for partial resource representation 
        to update parts of resource objects.
      security:
        - openId:
            - associations.write
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: The id of the association to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              properties:
                remoteState:
                  type: string
                  description: The state of this association for the institution performing the request.
                  enum: *ref_81
                  example: associated
                result:
                  oneOf:
                    - allOf: *ref_99
            examples:
              Delete student from offering (flow 2.4):
                value:
                  state: canceled
              Send attendance and result directly (flow 3.1):
                value:
                  result:
                    state: completed
                    pass: unknown
                    comment: string
                    score: '9'
                    resultDate: '2022-09-28'
                    weight: 100
                    consumers:
                      - consumerKey: MBO-toetsafname
                        attendance: present
                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
                        assessorCode: JAJE
                        irregularities: Jantje heeft gespiekt
                        final: true
                        documents:
                          - documentId: 123454
                            documentType: assessmentForm
                            documentName: Assessment form for Jake Doe.pdf
              Send attendance for student directly (flow 3.2.A):
                value:
                  result:
                    state: in progress
                    resultDate: '2022-09-27'
                    weight: 100
                    consumers:
                      - consumerKey: MBO-toetsafname
                        attendance: present
              Send result for student (flow 3.2.B):
                value:
                  result:
                    state: completed
                    pass: unknown
                    comment: string
                    score: '9'
                    resultDate: '2022-11-18'
                    weight: 100
                    consumers:
                      - consumerKey: MBO-toetsafname
                        attendance: present
                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d
                        assessorCode: JAJE
                        irregularities: Jantje heeft gespiekt
                        final: true
                        documents:
                          - documentId: 123454
                            documentType: assessmentForm
                            documentName: Assessment form for Jake Doe.pdf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties: *ref_84
                    required: *ref_85
                  - type: object
                    description: A system message as a response to a POST message
                    required: *ref_127
                    properties: *ref_128
                  - properties:
                      state:
                        type: string
                        description: The state of this association
                        enum: *ref_80
                        example: associated
        '400':
          description: Bad request
          content: *ref_106
    put:
      summary: PUT /associations/{associationId}
      description: |
        PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. 
      security:
        - oAuthFlows:
            - test-admin-flow
      tags:
        - associations
      parameters:
        - name: associationId
          in: path
          description: Association ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf: *ref_123
              properties: *ref_124
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad request
          content: *ref_106
        '401':
          description: Unauthorized
          content: *ref_107
        '403':
          description: Forbidden
          content: *ref_108
        '404':
          description: Not Found
          content: *ref_109
        '405':
          description: Method not allowed
          content: *ref_110
        '429':
          description: Too many requests
          content: *ref_111
        '500':
          description: Internal Server Error
          content: *ref_112
